[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""/tmp/idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""/tmp/idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.3 (Private Build Java 1.8.0_292)
[debug]       Load.loadUnit: plugins took 79.239934ms
[debug]       Load.loadUnit: defsScala took 0.374287ms
[debug] [Loading] Scanning directory /home/molodtso/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/molodtso/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 128.80178 ms
[debug]           Load.resolveProject(global-plugins) took 56.807867ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/molodtso/.sbt/1.0/plugins, plugins: List(<none>))) took 214.625747ms
[debug] [Loading] Done in /home/molodtso/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 237.414392ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.359873ms
[debug]     Load.loadUnit(file:/home/molodtso/.sbt/1.0/plugins/, ...) took 325.832945ms
[debug]   Load.apply: load took 507.735955ms
[debug]   Load.apply: resolveProjects took 6.558415ms
[debug]   Load.apply: finalTransforms took 62.18741ms
[debug]   Load.apply: config.delegates took 8.455034ms
[debug]   Load.apply: Def.make(settings)... took 363.875629ms
[debug]   Load.apply: structureIndex took 122.371673ms
[debug]   Load.apply: mkStreams took 1.792944ms
[info] loading global plugins from /home/molodtso/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4814.693318ms
[debug]           Load.loadUnit: plugins took 19.05098ms
[debug]           Load.loadUnit: defsScala took 0.011763ms
[debug] [Loading] Scanning directory /scratch/molodtsov/IdeaProjects/first/project
[debug]             Load.loadUnit: mkEval took 10.212257ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /scratch/molodtsov/IdeaProjects/first/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.19883 ms
[info] loading settings for project first-build from idea2.sbt ...
[debug]               Load.resolveProject(first-build) took 3.524451ms
[debug]             Load.loadTransitive: finalizeProject(Project(id first-build, base: /scratch/molodtsov/IdeaProjects/first/project, plugins: List(<none>))) took 6.397029ms
[debug] [Loading] Done in /scratch/molodtsov/IdeaProjects/first/project, returning: (first-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2572.659262ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.484353ms
[debug]         Load.loadUnit(file:/scratch/molodtsov/IdeaProjects/first/project/, ...) took 2595.991685ms
[debug]       Load.apply: load took 2597.610188ms
[debug]       Load.apply: resolveProjects took 0.192327ms
[debug]       Load.apply: finalTransforms took 8.306527ms
[debug]       Load.apply: config.delegates took 0.402763ms
[debug]       Load.apply: Def.make(settings)... took 107.029861ms
[debug]       Load.apply: structureIndex took 39.996147ms
[debug]       Load.apply: mkStreams took 0.00688ms
[info] loading project definition from /scratch/molodtsov/IdeaProjects/first/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3728.336988ms
[debug]     Load.loadUnit: defsScala took 0.006915ms
[debug] [Loading] Scanning directory /scratch/molodtsov/IdeaProjects/first
[debug]       Load.loadUnit: mkEval took 0.354859ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /scratch/molodtsov/IdeaProjects/first, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.199286 ms
[info] loading settings for project first from build.sbt ...
[debug]         Load.resolveProject(first) took 34.263932ms
[debug]       Load.loadTransitive: finalizeProject(Project(id first, base: /scratch/molodtsov/IdeaProjects/first, plugins: List(<none>))) took 37.926666ms
[debug] [Loading] Done in /scratch/molodtsov/IdeaProjects/first, returning: (first)
[debug]     Load.loadUnit: loadedProjectsRaw took 1741.571102ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.560284ms
[debug]   Load.loadUnit(file:/scratch/molodtsov/IdeaProjects/first/, ...) took 5475.158446ms
[debug] Load.apply: load took 5477.400665ms
[debug] Load.apply: resolveProjects took 0.224061ms
[debug] Load.apply: finalTransforms took 26.377723ms
[debug] Load.apply: config.delegates took 0.318752ms
[debug] Load.apply: Def.make(settings)... took 77.639189ms
[debug] Load.apply: structureIndex took 25.277288ms
[debug] Load.apply: mkStreams took 0.004396ms
[info] set current project to first (in build file:/scratch/molodtsov/IdeaProjects/first/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 46653 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 46653, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to first (in build file:/scratch/molodtsov/IdeaProjects/first/)
[debug] > Exec(idea-shell, None, None)
