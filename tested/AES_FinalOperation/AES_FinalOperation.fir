;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit AES_FinalOperation : 
  module AES_FinalOperation : 
    input clock : Clock
    input reset : UInt<1>
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {state : UInt<8>[4][4], key : UInt<8>[4][4]}}}
    
    wire enable : UInt<1> @[AES_Pipelined.scala 121:20]
    wire result : UInt
    result <= io.out.bits
    reg input : {state : UInt<8>[4][4], key : UInt<8>[4][4]}, clock @[Reg.scala 15:16]
    when enable : @[Reg.scala 16:19]
      input.key[0][0] <= io.in.bits.key[0][0] @[Reg.scala 16:23]
      input.key[0][1] <= io.in.bits.key[0][1] @[Reg.scala 16:23]
      input.key[0][2] <= io.in.bits.key[0][2] @[Reg.scala 16:23]
      input.key[0][3] <= io.in.bits.key[0][3] @[Reg.scala 16:23]
      input.key[1][0] <= io.in.bits.key[1][0] @[Reg.scala 16:23]
      input.key[1][1] <= io.in.bits.key[1][1] @[Reg.scala 16:23]
      input.key[1][2] <= io.in.bits.key[1][2] @[Reg.scala 16:23]
      input.key[1][3] <= io.in.bits.key[1][3] @[Reg.scala 16:23]
      input.key[2][0] <= io.in.bits.key[2][0] @[Reg.scala 16:23]
      input.key[2][1] <= io.in.bits.key[2][1] @[Reg.scala 16:23]
      input.key[2][2] <= io.in.bits.key[2][2] @[Reg.scala 16:23]
      input.key[2][3] <= io.in.bits.key[2][3] @[Reg.scala 16:23]
      input.key[3][0] <= io.in.bits.key[3][0] @[Reg.scala 16:23]
      input.key[3][1] <= io.in.bits.key[3][1] @[Reg.scala 16:23]
      input.key[3][2] <= io.in.bits.key[3][2] @[Reg.scala 16:23]
      input.key[3][3] <= io.in.bits.key[3][3] @[Reg.scala 16:23]
      input.state[0][0] <= io.in.bits.state[0][0] @[Reg.scala 16:23]
      input.state[0][1] <= io.in.bits.state[0][1] @[Reg.scala 16:23]
      input.state[0][2] <= io.in.bits.state[0][2] @[Reg.scala 16:23]
      input.state[0][3] <= io.in.bits.state[0][3] @[Reg.scala 16:23]
      input.state[1][0] <= io.in.bits.state[1][0] @[Reg.scala 16:23]
      input.state[1][1] <= io.in.bits.state[1][1] @[Reg.scala 16:23]
      input.state[1][2] <= io.in.bits.state[1][2] @[Reg.scala 16:23]
      input.state[1][3] <= io.in.bits.state[1][3] @[Reg.scala 16:23]
      input.state[2][0] <= io.in.bits.state[2][0] @[Reg.scala 16:23]
      input.state[2][1] <= io.in.bits.state[2][1] @[Reg.scala 16:23]
      input.state[2][2] <= io.in.bits.state[2][2] @[Reg.scala 16:23]
      input.state[2][3] <= io.in.bits.state[2][3] @[Reg.scala 16:23]
      input.state[3][0] <= io.in.bits.state[3][0] @[Reg.scala 16:23]
      input.state[3][1] <= io.in.bits.state[3][1] @[Reg.scala 16:23]
      input.state[3][2] <= io.in.bits.state[3][2] @[Reg.scala 16:23]
      input.state[3][3] <= io.in.bits.state[3][3] @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg valid : UInt<1>, clock @[Reg.scala 15:16]
    when enable : @[Reg.scala 16:19]
      valid <= io.in.valid @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _T = eq(valid, UInt<1>("h00")) @[AES_Pipelined.scala 126:29]
    node _T_1 = or(io.out.ready, _T) @[AES_Pipelined.scala 126:26]
    enable <= _T_1 @[AES_Pipelined.scala 126:10]
    io.out.valid <= valid @[AES_Pipelined.scala 127:16]
    when valid : @[AES_Pipelined.scala 129:15]
      io.in.ready <= enable @[AES_Pipelined.scala 130:17]
      io.out.bits <= result @[AES_Pipelined.scala 131:17]
      skip @[AES_Pipelined.scala 129:15]
    else : @[AES_Pipelined.scala 132:16]
      io.in.ready <= UInt<1>("h01") @[AES_Pipelined.scala 133:17]
      wire _WIRE : UInt<128> @[AES_Pipelined.scala 134:32]
      _WIRE <= UInt<1>("h00") @[AES_Pipelined.scala 134:32]
      io.out.bits <= _WIRE @[AES_Pipelined.scala 134:17]
      skip @[AES_Pipelined.scala 132:16]
    node hi_hi_hi_hi = xor(input.state[0][0], input.key[0][0]) @[AES_Pipelined.scala 138:34]
    node hi_hi_hi_lo = xor(input.state[0][1], input.key[0][1]) @[AES_Pipelined.scala 138:68]
    node hi_hi_lo_hi = xor(input.state[0][2], input.key[0][2]) @[AES_Pipelined.scala 139:22]
    node hi_hi_lo_lo = xor(input.state[0][3], input.key[0][3]) @[AES_Pipelined.scala 139:56]
    node hi_lo_hi_hi = xor(input.state[1][0], input.key[1][0]) @[AES_Pipelined.scala 140:22]
    node hi_lo_hi_lo = xor(input.state[1][1], input.key[1][1]) @[AES_Pipelined.scala 140:56]
    node hi_lo_lo_hi = xor(input.state[1][2], input.key[1][2]) @[AES_Pipelined.scala 141:22]
    node hi_lo_lo_lo = xor(input.state[1][3], input.key[1][3]) @[AES_Pipelined.scala 141:56]
    node lo_hi_hi_hi = xor(input.state[2][0], input.key[2][0]) @[AES_Pipelined.scala 142:22]
    node lo_hi_hi_lo = xor(input.state[2][1], input.key[2][1]) @[AES_Pipelined.scala 142:56]
    node lo_hi_lo_hi = xor(input.state[2][2], input.key[2][2]) @[AES_Pipelined.scala 143:22]
    node lo_hi_lo_lo = xor(input.state[2][3], input.key[2][3]) @[AES_Pipelined.scala 143:56]
    node lo_lo_hi_hi = xor(input.state[3][0], input.key[3][0]) @[AES_Pipelined.scala 144:22]
    node lo_lo_hi_lo = xor(input.state[3][1], input.key[3][1]) @[AES_Pipelined.scala 144:56]
    node lo_lo_lo_hi = xor(input.state[3][2], input.key[3][2]) @[AES_Pipelined.scala 145:22]
    node lo_lo_lo_lo = xor(input.state[3][3], input.key[3][3]) @[AES_Pipelined.scala 145:56]
    node lo_lo_lo = cat(lo_lo_lo_hi, lo_lo_lo_lo) @[Cat.scala 30:58]
    node lo_lo_hi = cat(lo_lo_hi_hi, lo_lo_hi_lo) @[Cat.scala 30:58]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[Cat.scala 30:58]
    node lo_hi_lo = cat(lo_hi_lo_hi, lo_hi_lo_lo) @[Cat.scala 30:58]
    node lo_hi_hi = cat(lo_hi_hi_hi, lo_hi_hi_lo) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_lo = cat(hi_lo_lo_hi, hi_lo_lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(hi_lo_hi_hi, hi_lo_hi_lo) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[Cat.scala 30:58]
    node hi_hi_lo = cat(hi_hi_lo_hi, hi_hi_lo_lo) @[Cat.scala 30:58]
    node hi_hi_hi = cat(hi_hi_hi_hi, hi_hi_hi_lo) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_2 = cat(hi, lo) @[Cat.scala 30:58]
    result <= _T_2 @[AES_Pipelined.scala 138:10]
    
