;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit AES_InitialOperation : 
  module AES_InitialOperation : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {text : UInt<128>, key : UInt<128>}}, out : {flip ready : UInt<1>, valid : UInt<1>, bits : {state : UInt<8>[4][4], key : UInt<8>[4][4]}}}
    
    wire enable : UInt<1> @[AES_Pipelined.scala 63:20]
    wire result : {state : UInt<8>[4][4], key : UInt<8>[4][4]}
    result.key[0][0] <= io.out.bits.key[0][0]
    result.key[0][1] <= io.out.bits.key[0][1]
    result.key[0][2] <= io.out.bits.key[0][2]
    result.key[0][3] <= io.out.bits.key[0][3]
    result.key[1][0] <= io.out.bits.key[1][0]
    result.key[1][1] <= io.out.bits.key[1][1]
    result.key[1][2] <= io.out.bits.key[1][2]
    result.key[1][3] <= io.out.bits.key[1][3]
    result.key[2][0] <= io.out.bits.key[2][0]
    result.key[2][1] <= io.out.bits.key[2][1]
    result.key[2][2] <= io.out.bits.key[2][2]
    result.key[2][3] <= io.out.bits.key[2][3]
    result.key[3][0] <= io.out.bits.key[3][0]
    result.key[3][1] <= io.out.bits.key[3][1]
    result.key[3][2] <= io.out.bits.key[3][2]
    result.key[3][3] <= io.out.bits.key[3][3]
    result.state[0][0] <= io.out.bits.state[0][0]
    result.state[0][1] <= io.out.bits.state[0][1]
    result.state[0][2] <= io.out.bits.state[0][2]
    result.state[0][3] <= io.out.bits.state[0][3]
    result.state[1][0] <= io.out.bits.state[1][0]
    result.state[1][1] <= io.out.bits.state[1][1]
    result.state[1][2] <= io.out.bits.state[1][2]
    result.state[1][3] <= io.out.bits.state[1][3]
    result.state[2][0] <= io.out.bits.state[2][0]
    result.state[2][1] <= io.out.bits.state[2][1]
    result.state[2][2] <= io.out.bits.state[2][2]
    result.state[2][3] <= io.out.bits.state[2][3]
    result.state[3][0] <= io.out.bits.state[3][0]
    result.state[3][1] <= io.out.bits.state[3][1]
    result.state[3][2] <= io.out.bits.state[3][2]
    result.state[3][3] <= io.out.bits.state[3][3]
    reg input : {text : UInt<128>, key : UInt<128>}, clock @[Reg.scala 15:16]
    when enable : @[Reg.scala 16:19]
      input.key <= io.in.bits.key @[Reg.scala 16:23]
      input.text <= io.in.bits.text @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg valid : UInt<1>, clock @[Reg.scala 15:16]
    when enable : @[Reg.scala 16:19]
      valid <= io.in.valid @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _T = eq(valid, UInt<1>("h00")) @[AES_Pipelined.scala 68:29]
    node _T_1 = or(io.out.ready, _T) @[AES_Pipelined.scala 68:26]
    enable <= _T_1 @[AES_Pipelined.scala 68:10]
    io.out.valid <= valid @[AES_Pipelined.scala 69:16]
    when valid : @[AES_Pipelined.scala 71:15]
      io.in.ready <= enable @[AES_Pipelined.scala 72:17]
      io.out.bits.key[0][0] <= result.key[0][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[0][1] <= result.key[0][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[0][2] <= result.key[0][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[0][3] <= result.key[0][3] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[1][0] <= result.key[1][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[1][1] <= result.key[1][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[1][2] <= result.key[1][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[1][3] <= result.key[1][3] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[2][0] <= result.key[2][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[2][1] <= result.key[2][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[2][2] <= result.key[2][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[2][3] <= result.key[2][3] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[3][0] <= result.key[3][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[3][1] <= result.key[3][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[3][2] <= result.key[3][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.key[3][3] <= result.key[3][3] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[0][0] <= result.state[0][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[0][1] <= result.state[0][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[0][2] <= result.state[0][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[0][3] <= result.state[0][3] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[1][0] <= result.state[1][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[1][1] <= result.state[1][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[1][2] <= result.state[1][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[1][3] <= result.state[1][3] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[2][0] <= result.state[2][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[2][1] <= result.state[2][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[2][2] <= result.state[2][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[2][3] <= result.state[2][3] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[3][0] <= result.state[3][0] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[3][1] <= result.state[3][1] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[3][2] <= result.state[3][2] @[AES_Pipelined.scala 73:17]
      io.out.bits.state[3][3] <= result.state[3][3] @[AES_Pipelined.scala 73:17]
      skip @[AES_Pipelined.scala 71:15]
    else : @[AES_Pipelined.scala 74:16]
      io.in.ready <= UInt<1>("h01") @[AES_Pipelined.scala 75:17]
      wire _WIRE : {state : UInt<8>[4][4], key : UInt<8>[4][4]} @[AES_Pipelined.scala 76:32]
      _WIRE.key[0][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[0][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[0][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[0][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[1][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[1][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[1][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[1][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[2][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[2][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[2][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[2][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[3][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[3][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[3][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.key[3][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[0][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[0][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[0][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[0][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[1][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[1][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[1][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[1][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[2][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[2][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[2][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[2][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[3][0] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[3][1] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[3][2] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      _WIRE.state[3][3] <= UInt<8>("h00") @[AES_Pipelined.scala 76:32]
      io.out.bits.key[0][0] <= _WIRE.key[0][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[0][1] <= _WIRE.key[0][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[0][2] <= _WIRE.key[0][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[0][3] <= _WIRE.key[0][3] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[1][0] <= _WIRE.key[1][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[1][1] <= _WIRE.key[1][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[1][2] <= _WIRE.key[1][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[1][3] <= _WIRE.key[1][3] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[2][0] <= _WIRE.key[2][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[2][1] <= _WIRE.key[2][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[2][2] <= _WIRE.key[2][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[2][3] <= _WIRE.key[2][3] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[3][0] <= _WIRE.key[3][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[3][1] <= _WIRE.key[3][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[3][2] <= _WIRE.key[3][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.key[3][3] <= _WIRE.key[3][3] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[0][0] <= _WIRE.state[0][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[0][1] <= _WIRE.state[0][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[0][2] <= _WIRE.state[0][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[0][3] <= _WIRE.state[0][3] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[1][0] <= _WIRE.state[1][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[1][1] <= _WIRE.state[1][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[1][2] <= _WIRE.state[1][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[1][3] <= _WIRE.state[1][3] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[2][0] <= _WIRE.state[2][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[2][1] <= _WIRE.state[2][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[2][2] <= _WIRE.state[2][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[2][3] <= _WIRE.state[2][3] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[3][0] <= _WIRE.state[3][0] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[3][1] <= _WIRE.state[3][1] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[3][2] <= _WIRE.state[3][2] @[AES_Pipelined.scala 76:17]
      io.out.bits.state[3][3] <= _WIRE.state[3][3] @[AES_Pipelined.scala 76:17]
      skip @[AES_Pipelined.scala 74:16]
    node _T_2 = bits(input.text, 7, 0) @[AES_Pipelined.scala 82:43]
    result.state[3][3] <= _T_2 @[AES_Pipelined.scala 82:30]
    node _T_3 = bits(input.key, 7, 0) @[AES_Pipelined.scala 83:40]
    result.key[3][3] <= _T_3 @[AES_Pipelined.scala 83:28]
    node _T_4 = bits(input.text, 15, 8) @[AES_Pipelined.scala 82:43]
    result.state[3][2] <= _T_4 @[AES_Pipelined.scala 82:30]
    node _T_5 = bits(input.key, 15, 8) @[AES_Pipelined.scala 83:40]
    result.key[3][2] <= _T_5 @[AES_Pipelined.scala 83:28]
    node _T_6 = bits(input.text, 23, 16) @[AES_Pipelined.scala 82:43]
    result.state[3][1] <= _T_6 @[AES_Pipelined.scala 82:30]
    node _T_7 = bits(input.key, 23, 16) @[AES_Pipelined.scala 83:40]
    result.key[3][1] <= _T_7 @[AES_Pipelined.scala 83:28]
    node _T_8 = bits(input.text, 31, 24) @[AES_Pipelined.scala 82:43]
    result.state[3][0] <= _T_8 @[AES_Pipelined.scala 82:30]
    node _T_9 = bits(input.key, 31, 24) @[AES_Pipelined.scala 83:40]
    result.key[3][0] <= _T_9 @[AES_Pipelined.scala 83:28]
    node _T_10 = bits(input.text, 39, 32) @[AES_Pipelined.scala 82:43]
    result.state[2][3] <= _T_10 @[AES_Pipelined.scala 82:30]
    node _T_11 = bits(input.key, 39, 32) @[AES_Pipelined.scala 83:40]
    result.key[2][3] <= _T_11 @[AES_Pipelined.scala 83:28]
    node _T_12 = bits(input.text, 47, 40) @[AES_Pipelined.scala 82:43]
    result.state[2][2] <= _T_12 @[AES_Pipelined.scala 82:30]
    node _T_13 = bits(input.key, 47, 40) @[AES_Pipelined.scala 83:40]
    result.key[2][2] <= _T_13 @[AES_Pipelined.scala 83:28]
    node _T_14 = bits(input.text, 55, 48) @[AES_Pipelined.scala 82:43]
    result.state[2][1] <= _T_14 @[AES_Pipelined.scala 82:30]
    node _T_15 = bits(input.key, 55, 48) @[AES_Pipelined.scala 83:40]
    result.key[2][1] <= _T_15 @[AES_Pipelined.scala 83:28]
    node _T_16 = bits(input.text, 63, 56) @[AES_Pipelined.scala 82:43]
    result.state[2][0] <= _T_16 @[AES_Pipelined.scala 82:30]
    node _T_17 = bits(input.key, 63, 56) @[AES_Pipelined.scala 83:40]
    result.key[2][0] <= _T_17 @[AES_Pipelined.scala 83:28]
    node _T_18 = bits(input.text, 71, 64) @[AES_Pipelined.scala 82:43]
    result.state[1][3] <= _T_18 @[AES_Pipelined.scala 82:30]
    node _T_19 = bits(input.key, 71, 64) @[AES_Pipelined.scala 83:40]
    result.key[1][3] <= _T_19 @[AES_Pipelined.scala 83:28]
    node _T_20 = bits(input.text, 79, 72) @[AES_Pipelined.scala 82:43]
    result.state[1][2] <= _T_20 @[AES_Pipelined.scala 82:30]
    node _T_21 = bits(input.key, 79, 72) @[AES_Pipelined.scala 83:40]
    result.key[1][2] <= _T_21 @[AES_Pipelined.scala 83:28]
    node _T_22 = bits(input.text, 87, 80) @[AES_Pipelined.scala 82:43]
    result.state[1][1] <= _T_22 @[AES_Pipelined.scala 82:30]
    node _T_23 = bits(input.key, 87, 80) @[AES_Pipelined.scala 83:40]
    result.key[1][1] <= _T_23 @[AES_Pipelined.scala 83:28]
    node _T_24 = bits(input.text, 95, 88) @[AES_Pipelined.scala 82:43]
    result.state[1][0] <= _T_24 @[AES_Pipelined.scala 82:30]
    node _T_25 = bits(input.key, 95, 88) @[AES_Pipelined.scala 83:40]
    result.key[1][0] <= _T_25 @[AES_Pipelined.scala 83:28]
    node _T_26 = bits(input.text, 103, 96) @[AES_Pipelined.scala 82:43]
    result.state[0][3] <= _T_26 @[AES_Pipelined.scala 82:30]
    node _T_27 = bits(input.key, 103, 96) @[AES_Pipelined.scala 83:40]
    result.key[0][3] <= _T_27 @[AES_Pipelined.scala 83:28]
    node _T_28 = bits(input.text, 111, 104) @[AES_Pipelined.scala 82:43]
    result.state[0][2] <= _T_28 @[AES_Pipelined.scala 82:30]
    node _T_29 = bits(input.key, 111, 104) @[AES_Pipelined.scala 83:40]
    result.key[0][2] <= _T_29 @[AES_Pipelined.scala 83:28]
    node _T_30 = bits(input.text, 119, 112) @[AES_Pipelined.scala 82:43]
    result.state[0][1] <= _T_30 @[AES_Pipelined.scala 82:30]
    node _T_31 = bits(input.key, 119, 112) @[AES_Pipelined.scala 83:40]
    result.key[0][1] <= _T_31 @[AES_Pipelined.scala 83:28]
    node _T_32 = bits(input.text, 127, 120) @[AES_Pipelined.scala 82:43]
    result.state[0][0] <= _T_32 @[AES_Pipelined.scala 82:30]
    node _T_33 = bits(input.key, 127, 120) @[AES_Pipelined.scala 83:40]
    result.key[0][0] <= _T_33 @[AES_Pipelined.scala 83:28]
    
