;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit DotProduct : 
  module DotProduct : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {x : SInt<32>, y : SInt<32>}}, out : {flip ready : UInt<1>, valid : UInt<1>, bits : SInt<32>}}
    
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[DotProduct.scala 16:25]
    reg accReg : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[DotProduct.scala 17:23]
    reg cntReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h01"))) @[DotProduct.scala 18:23]
    io.in.ready <= UInt<1>("h01") @[DotProduct.scala 20:15]
    node _T = eq(stateReg, UInt<2>("h02")) @[DotProduct.scala 21:28]
    io.out.valid <= _T @[DotProduct.scala 21:16]
    io.out.bits <= accReg @[DotProduct.scala 22:15]
    node _T_1 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_1 : @[Conditional.scala 40:58]
      io.in.ready <= UInt<1>("h01") @[DotProduct.scala 26:19]
      when io.in.valid : @[DotProduct.scala 27:25]
        node _T_2 = mul(io.in.bits.x, io.in.bits.y) @[DotProduct.scala 28:32]
        accReg <= _T_2 @[DotProduct.scala 28:16]
        cntReg <= UInt<1>("h01") @[DotProduct.scala 29:16]
        stateReg <= UInt<2>("h01") @[DotProduct.scala 30:18]
        skip @[DotProduct.scala 27:25]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_3 : @[Conditional.scala 39:67]
        io.in.ready <= UInt<1>("h01") @[DotProduct.scala 34:19]
        when io.in.valid : @[DotProduct.scala 35:25]
          node _T_4 = mul(io.in.bits.x, io.in.bits.y) @[DotProduct.scala 36:41]
          node _T_5 = add(accReg, _T_4) @[DotProduct.scala 36:26]
          node _T_6 = tail(_T_5, 1) @[DotProduct.scala 36:26]
          node _T_7 = asSInt(_T_6) @[DotProduct.scala 36:26]
          accReg <= _T_7 @[DotProduct.scala 36:16]
          node _T_8 = add(cntReg, UInt<1>("h01")) @[DotProduct.scala 37:26]
          node _T_9 = tail(_T_8, 1) @[DotProduct.scala 37:26]
          cntReg <= _T_9 @[DotProduct.scala 37:16]
          node _T_10 = eq(cntReg, UInt<1>("h01")) @[DotProduct.scala 38:21]
          when _T_10 : @[DotProduct.scala 38:34]
            stateReg <= UInt<2>("h02") @[DotProduct.scala 39:20]
            skip @[DotProduct.scala 38:34]
          skip @[DotProduct.scala 35:25]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_11 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_11 : @[Conditional.scala 39:67]
          io.in.ready <= io.out.ready @[DotProduct.scala 44:19]
          when io.out.ready : @[DotProduct.scala 46:26]
            when io.in.valid : @[DotProduct.scala 47:27]
              node _T_12 = mul(io.in.bits.x, io.in.bits.y) @[DotProduct.scala 48:34]
              accReg <= _T_12 @[DotProduct.scala 48:18]
              cntReg <= UInt<1>("h01") @[DotProduct.scala 49:18]
              stateReg <= UInt<2>("h01") @[DotProduct.scala 50:20]
              skip @[DotProduct.scala 47:27]
            else : @[DotProduct.scala 51:22]
              stateReg <= UInt<2>("h00") @[DotProduct.scala 52:20]
              skip @[DotProduct.scala 51:22]
            skip @[DotProduct.scala 46:26]
          skip @[Conditional.scala 39:67]
    
