;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Multiplier : 
  module Multiplier : 
    input clock : Clock
    input reset : UInt<1>
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {x : UInt<4>, y : UInt<4>}}}
    
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Multiplier.scala 16:25]
    reg multStageReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Multiplier.scala 18:29]
    node _T = eq(stateReg, UInt<2>("h00")) @[Multiplier.scala 20:27]
    io.in.ready <= _T @[Multiplier.scala 20:15]
    node _T_1 = eq(stateReg, UInt<2>("h02")) @[Multiplier.scala 21:28]
    io.out.valid <= _T_1 @[Multiplier.scala 21:16]
    wire x0 : UInt<2> @[Multiplier.scala 27:16]
    node _T_2 = bits(io.in.bits.x, 1, 0) @[Multiplier.scala 28:21]
    x0 <= _T_2 @[Multiplier.scala 28:6]
    wire x1 : UInt<2> @[Multiplier.scala 29:16]
    node _T_3 = bits(io.in.bits.x, 3, 2) @[Multiplier.scala 30:21]
    x1 <= _T_3 @[Multiplier.scala 30:6]
    wire y0 : UInt<2> @[Multiplier.scala 31:16]
    node _T_4 = bits(io.in.bits.y, 1, 0) @[Multiplier.scala 32:21]
    y0 <= _T_4 @[Multiplier.scala 32:6]
    wire y1 : UInt<2> @[Multiplier.scala 33:16]
    node _T_5 = bits(io.in.bits.y, 3, 2) @[Multiplier.scala 34:21]
    y1 <= _T_5 @[Multiplier.scala 34:6]
    wire xMul : UInt<2> @[Multiplier.scala 36:18]
    wire yMul : UInt<2> @[Multiplier.scala 37:18]
    wire resMul : UInt<4> @[Multiplier.scala 38:20]
    node _T_6 = mul(xMul, yMul) @[Multiplier.scala 40:18]
    resMul <= _T_6 @[Multiplier.scala 40:10]
    reg resReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Multiplier.scala 42:23]
    io.out.bits <= resReg @[Multiplier.scala 43:15]
    xMul <= UInt<1>("h00") @[Multiplier.scala 45:8]
    yMul <= UInt<1>("h00") @[Multiplier.scala 46:8]
    node _T_7 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_7 : @[Conditional.scala 40:58]
      when io.in.valid : @[Multiplier.scala 50:25]
        stateReg <= UInt<2>("h01") @[Multiplier.scala 51:18]
        skip @[Multiplier.scala 50:25]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_8 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_8 : @[Conditional.scala 39:67]
        node _T_9 = eq(UInt<2>("h00"), multStageReg) @[Conditional.scala 37:30]
        when _T_9 : @[Conditional.scala 40:58]
          xMul <= x1 @[Multiplier.scala 64:16]
          yMul <= y1 @[Multiplier.scala 65:16]
          node _T_10 = dshl(resMul, UInt<3>("h04")) @[Multiplier.scala 66:28]
          resReg <= _T_10 @[Multiplier.scala 66:18]
          multStageReg <= UInt<2>("h01") @[Multiplier.scala 68:24]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_11 = eq(UInt<2>("h01"), multStageReg) @[Conditional.scala 37:30]
          when _T_11 : @[Conditional.scala 39:67]
            xMul <= x0 @[Multiplier.scala 71:16]
            yMul <= y1 @[Multiplier.scala 72:16]
            node _T_12 = dshl(resMul, UInt<2>("h02")) @[Multiplier.scala 73:38]
            node _T_13 = add(resReg, _T_12) @[Multiplier.scala 73:28]
            node _T_14 = tail(_T_13, 1) @[Multiplier.scala 73:28]
            resReg <= _T_14 @[Multiplier.scala 73:18]
            multStageReg <= UInt<2>("h02") @[Multiplier.scala 75:24]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_15 = eq(UInt<2>("h02"), multStageReg) @[Conditional.scala 37:30]
            when _T_15 : @[Conditional.scala 39:67]
              xMul <= x1 @[Multiplier.scala 78:16]
              yMul <= y0 @[Multiplier.scala 79:16]
              node _T_16 = dshl(resMul, UInt<2>("h02")) @[Multiplier.scala 80:38]
              node _T_17 = add(resReg, _T_16) @[Multiplier.scala 80:28]
              node _T_18 = tail(_T_17, 1) @[Multiplier.scala 80:28]
              resReg <= _T_18 @[Multiplier.scala 80:18]
              multStageReg <= UInt<2>("h03") @[Multiplier.scala 82:24]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_19 = eq(UInt<2>("h03"), multStageReg) @[Conditional.scala 37:30]
              when _T_19 : @[Conditional.scala 39:67]
                xMul <= x0 @[Multiplier.scala 85:16]
                yMul <= y0 @[Multiplier.scala 86:16]
                node _T_20 = add(resReg, resMul) @[Multiplier.scala 87:28]
                node _T_21 = tail(_T_20, 1) @[Multiplier.scala 87:28]
                resReg <= _T_21 @[Multiplier.scala 87:18]
                multStageReg <= UInt<2>("h00") @[Multiplier.scala 89:24]
                stateReg <= UInt<2>("h02") @[Multiplier.scala 90:20]
                skip @[Conditional.scala 39:67]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_22 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_22 : @[Conditional.scala 39:67]
          when io.out.ready : @[Multiplier.scala 95:26]
            stateReg <= UInt<2>("h00") @[Multiplier.scala 96:18]
            skip @[Multiplier.scala 95:26]
          skip @[Conditional.scala 39:67]
    
