;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit WatermanSystolic : 
  module substituteElements : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_1 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_2 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_3 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_4 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_5 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_6 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_7 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_8 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_8 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_8 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_9 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_9 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_9 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_10 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_10 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_10 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_11 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_11 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_11 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_12 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_12 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_12 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_13 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_13 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_13 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module substituteElements_14 : 
    input clock : Clock
    input reset : Reset
    output io : {flip first : UInt<2>, flip second : UInt<2>, out : SInt<32>}
    
    io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 26:10]
    node _T = eq(io.first, io.second) @[DNA.scala 27:18]
    when _T : @[DNA.scala 27:33]
      io.out <= asSInt(UInt<2>("h01")) @[DNA.scala 28:12]
      skip @[DNA.scala 27:33]
    else : @[DNA.scala 29:16]
      io.out <= asSInt(UInt<2>("h03")) @[DNA.scala 30:12]
      skip @[DNA.scala 29:16]
    
  module calculateCell_14 : 
    input clock : Clock
    input reset : Reset
    output io : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}
    
    inst substituteElements of substituteElements_14 @[DNA.scala 45:34]
    substituteElements.clock <= clock
    substituteElements.reset <= reset
    substituteElements.io.first <= io.rowElement @[DNA.scala 46:31]
    substituteElements.io.second <= io.columnElement @[DNA.scala 47:32]
    wire upper : SInt<32> @[DNA.scala 49:57]
    wire diag : SInt<32> @[DNA.scala 49:57]
    wire left : SInt<32> @[DNA.scala 49:57]
    wire diagUpper : SInt<32> @[DNA.scala 49:57]
    wire diagLeft : SInt<32> @[DNA.scala 49:57]
    wire max : SInt<32> @[DNA.scala 49:57]
    node _T = add(io.diagonal, substituteElements.io.out) @[DNA.scala 50:23]
    node _T_1 = tail(_T, 1) @[DNA.scala 50:23]
    node _T_2 = asSInt(_T_1) @[DNA.scala 50:23]
    diag <= _T_2 @[DNA.scala 50:8]
    node _T_3 = sub(io.upper, asSInt(UInt<3>("h02"))) @[DNA.scala 51:21]
    node _T_4 = tail(_T_3, 1) @[DNA.scala 51:21]
    node _T_5 = asSInt(_T_4) @[DNA.scala 51:21]
    upper <= _T_5 @[DNA.scala 51:9]
    node _T_6 = sub(io.left, asSInt(UInt<3>("h02"))) @[DNA.scala 52:19]
    node _T_7 = tail(_T_6, 1) @[DNA.scala 52:19]
    node _T_8 = asSInt(_T_7) @[DNA.scala 52:19]
    left <= _T_8 @[DNA.scala 52:8]
    node _T_9 = gt(diag, upper) @[DNA.scala 54:14]
    when _T_9 : @[DNA.scala 54:23]
      diagUpper <= diag @[DNA.scala 55:15]
      skip @[DNA.scala 54:23]
    else : @[DNA.scala 56:16]
      diagUpper <= upper @[DNA.scala 57:15]
      skip @[DNA.scala 56:16]
    node _T_10 = gt(diag, left) @[DNA.scala 59:14]
    when _T_10 : @[DNA.scala 59:22]
      diagLeft <= diag @[DNA.scala 60:14]
      skip @[DNA.scala 59:22]
    else : @[DNA.scala 61:16]
      diagLeft <= left @[DNA.scala 62:14]
      skip @[DNA.scala 61:16]
    node _T_11 = gt(diagLeft, diagUpper) @[DNA.scala 64:18]
    when _T_11 : @[DNA.scala 64:31]
      max <= diagLeft @[DNA.scala 65:9]
      skip @[DNA.scala 64:31]
    else : @[DNA.scala 66:16]
      max <= diagUpper @[DNA.scala 67:9]
      skip @[DNA.scala 66:16]
    node _T_12 = gt(max, asSInt(UInt<1>("h00"))) @[DNA.scala 71:15]
    when _T_12 : @[DNA.scala 71:36]
      io.out <= max @[DNA.scala 72:14]
      skip @[DNA.scala 71:36]
    else : @[DNA.scala 73:18]
      io.out <= asSInt(UInt<1>("h00")) @[DNA.scala 74:14]
      skip @[DNA.scala 73:18]
    
  module VectorElemOr : 
    input clock : Clock
    input reset : Reset
    output io : {flip input : UInt<1>[15], out : UInt<1>}
    
    node _T = or(io.input[0], io.input[1]) @[WatermanSystolic.scala 124:31]
    node _T_1 = or(_T, io.input[2]) @[WatermanSystolic.scala 124:31]
    node _T_2 = or(_T_1, io.input[3]) @[WatermanSystolic.scala 124:31]
    node _T_3 = or(_T_2, io.input[4]) @[WatermanSystolic.scala 124:31]
    node _T_4 = or(_T_3, io.input[5]) @[WatermanSystolic.scala 124:31]
    node _T_5 = or(_T_4, io.input[6]) @[WatermanSystolic.scala 124:31]
    node _T_6 = or(_T_5, io.input[7]) @[WatermanSystolic.scala 124:31]
    node _T_7 = or(_T_6, io.input[8]) @[WatermanSystolic.scala 124:31]
    node _T_8 = or(_T_7, io.input[9]) @[WatermanSystolic.scala 124:31]
    node _T_9 = or(_T_8, io.input[10]) @[WatermanSystolic.scala 124:31]
    node _T_10 = or(_T_9, io.input[11]) @[WatermanSystolic.scala 124:31]
    node _T_11 = or(_T_10, io.input[12]) @[WatermanSystolic.scala 124:31]
    node _T_12 = or(_T_11, io.input[13]) @[WatermanSystolic.scala 124:31]
    node _T_13 = or(_T_12, io.input[14]) @[WatermanSystolic.scala 124:31]
    io.out <= _T_13 @[WatermanSystolic.scala 124:10]
    
  module WatermanSystolic : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {S : UInt<2>[21], T : UInt<2>[15]}}, out : {flip ready : UInt<1>, valid : UInt<1>, bits : {score : SInt<32>, x : UInt<5>, y : UInt<4>}}[15]}
    
    wire _WIRE : UInt<2>[21] @[WatermanSystolic.scala 17:29]
    _WIRE[0] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[1] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[2] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[3] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[4] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[5] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[6] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[7] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[8] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[9] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[10] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[11] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[12] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[13] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[14] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[15] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[16] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[17] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[18] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[19] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    _WIRE[20] <= UInt<1>("h00") @[WatermanSystolic.scala 17:29]
    reg SReg : UInt<2>[21], clock with : (reset => (reset, _WIRE)) @[WatermanSystolic.scala 17:21]
    wire _WIRE_1 : SInt<32>[21] @[WatermanSystolic.scala 18:35]
    _WIRE_1[0] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[1] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[2] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[3] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[4] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[5] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[6] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[7] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[8] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[9] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[10] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[11] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[12] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[13] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[14] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[15] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[16] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[17] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[18] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[19] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    _WIRE_1[20] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 18:35]
    reg columnsReg : SInt<32>[21], clock with : (reset => (reset, _WIRE_1)) @[WatermanSystolic.scala 18:27]
    wire _WIRE_2 : UInt<2>[15] @[WatermanSystolic.scala 19:29]
    _WIRE_2[0] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[1] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[2] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[3] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[4] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[5] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[6] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[7] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[8] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[9] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[10] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[11] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[12] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[13] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    _WIRE_2[14] <= UInt<1>("h00") @[WatermanSystolic.scala 19:29]
    reg TReg : UInt<2>[15], clock with : (reset => (reset, _WIRE_2)) @[WatermanSystolic.scala 19:21]
    wire _WIRE_3 : SInt<32>[15] @[WatermanSystolic.scala 20:32]
    _WIRE_3[0] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[1] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[2] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[3] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[4] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[5] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[6] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[7] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[8] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[9] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[10] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[11] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[12] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[13] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    _WIRE_3[14] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 20:32]
    reg rowsReg : SInt<32>[15], clock with : (reset => (reset, _WIRE_3)) @[WatermanSystolic.scala 20:24]
    wire _WIRE_4 : SInt<32>[15] @[WatermanSystolic.scala 21:31]
    _WIRE_4[0] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[1] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[2] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[3] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[4] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[5] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[6] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[7] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[8] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[9] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[10] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[11] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[12] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[13] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    _WIRE_4[14] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 21:31]
    reg resReg : SInt<32>[15], clock with : (reset => (reset, _WIRE_4)) @[WatermanSystolic.scala 21:23]
    wire _WIRE_5 : SInt<32>[15] @[WatermanSystolic.scala 22:32]
    _WIRE_5[0] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[1] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[2] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[3] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[4] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[5] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[6] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[7] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[8] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[9] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[10] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[11] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[12] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[13] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    _WIRE_5[14] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 22:32]
    reg diagReg : SInt<32>[15], clock with : (reset => (reset, _WIRE_5)) @[WatermanSystolic.scala 22:24]
    wire _WIRE_6 : SInt<32>[15] @[WatermanSystolic.scala 23:38]
    _WIRE_6[0] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[1] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[2] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[3] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[4] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[5] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[6] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[7] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[8] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[9] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[10] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[11] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[12] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[13] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    _WIRE_6[14] <= asSInt(UInt<32>("h00")) @[WatermanSystolic.scala 23:38]
    reg intermDiagReg : SInt<32>[15], clock with : (reset => (reset, _WIRE_6)) @[WatermanSystolic.scala 23:30]
    wire _WIRE_7 : UInt<1>[15] @[WatermanSystolic.scala 24:36]
    _WIRE_7[0] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[1] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[2] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[3] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[4] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[5] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[6] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[7] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[8] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[9] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[10] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[11] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[12] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[13] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    _WIRE_7[14] <= UInt<1>("h00") @[WatermanSystolic.scala 24:36]
    reg outValidReg : UInt<1>[15], clock with : (reset => (reset, _WIRE_7)) @[WatermanSystolic.scala 24:28]
    reg stepReg : SInt<7>, clock with : (reset => (reset, asSInt(UInt<7>("h00")))) @[WatermanSystolic.scala 25:24]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[WatermanSystolic.scala 28:25]
    inst calculateCell of calculateCell @[WatermanSystolic.scala 31:11]
    calculateCell.clock <= clock
    calculateCell.reset <= reset
    inst calculateCell_1 of calculateCell_1 @[WatermanSystolic.scala 31:11]
    calculateCell_1.clock <= clock
    calculateCell_1.reset <= reset
    inst calculateCell_2 of calculateCell_2 @[WatermanSystolic.scala 31:11]
    calculateCell_2.clock <= clock
    calculateCell_2.reset <= reset
    inst calculateCell_3 of calculateCell_3 @[WatermanSystolic.scala 31:11]
    calculateCell_3.clock <= clock
    calculateCell_3.reset <= reset
    inst calculateCell_4 of calculateCell_4 @[WatermanSystolic.scala 31:11]
    calculateCell_4.clock <= clock
    calculateCell_4.reset <= reset
    inst calculateCell_5 of calculateCell_5 @[WatermanSystolic.scala 31:11]
    calculateCell_5.clock <= clock
    calculateCell_5.reset <= reset
    inst calculateCell_6 of calculateCell_6 @[WatermanSystolic.scala 31:11]
    calculateCell_6.clock <= clock
    calculateCell_6.reset <= reset
    inst calculateCell_7 of calculateCell_7 @[WatermanSystolic.scala 31:11]
    calculateCell_7.clock <= clock
    calculateCell_7.reset <= reset
    inst calculateCell_8 of calculateCell_8 @[WatermanSystolic.scala 31:11]
    calculateCell_8.clock <= clock
    calculateCell_8.reset <= reset
    inst calculateCell_9 of calculateCell_9 @[WatermanSystolic.scala 31:11]
    calculateCell_9.clock <= clock
    calculateCell_9.reset <= reset
    inst calculateCell_10 of calculateCell_10 @[WatermanSystolic.scala 31:11]
    calculateCell_10.clock <= clock
    calculateCell_10.reset <= reset
    inst calculateCell_11 of calculateCell_11 @[WatermanSystolic.scala 31:11]
    calculateCell_11.clock <= clock
    calculateCell_11.reset <= reset
    inst calculateCell_12 of calculateCell_12 @[WatermanSystolic.scala 31:11]
    calculateCell_12.clock <= clock
    calculateCell_12.reset <= reset
    inst calculateCell_13 of calculateCell_13 @[WatermanSystolic.scala 31:11]
    calculateCell_13.clock <= clock
    calculateCell_13.reset <= reset
    inst calculateCell_14 of calculateCell_14 @[WatermanSystolic.scala 31:11]
    calculateCell_14.clock <= clock
    calculateCell_14.reset <= reset
    wire PEs : {flip upper : SInt<32>, flip left : SInt<32>, flip diagonal : SInt<32>, flip rowElement : UInt<2>, flip columnElement : UInt<2>, out : SInt<32>}[15] @[WatermanSystolic.scala 30:20]
    PEs[0].out <= calculateCell.io.out @[WatermanSystolic.scala 30:20]
    calculateCell.io.columnElement <= PEs[0].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell.io.rowElement <= PEs[0].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell.io.diagonal <= PEs[0].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell.io.left <= PEs[0].left @[WatermanSystolic.scala 30:20]
    calculateCell.io.upper <= PEs[0].upper @[WatermanSystolic.scala 30:20]
    PEs[1].out <= calculateCell_1.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_1.io.columnElement <= PEs[1].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_1.io.rowElement <= PEs[1].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_1.io.diagonal <= PEs[1].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_1.io.left <= PEs[1].left @[WatermanSystolic.scala 30:20]
    calculateCell_1.io.upper <= PEs[1].upper @[WatermanSystolic.scala 30:20]
    PEs[2].out <= calculateCell_2.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_2.io.columnElement <= PEs[2].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_2.io.rowElement <= PEs[2].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_2.io.diagonal <= PEs[2].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_2.io.left <= PEs[2].left @[WatermanSystolic.scala 30:20]
    calculateCell_2.io.upper <= PEs[2].upper @[WatermanSystolic.scala 30:20]
    PEs[3].out <= calculateCell_3.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_3.io.columnElement <= PEs[3].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_3.io.rowElement <= PEs[3].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_3.io.diagonal <= PEs[3].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_3.io.left <= PEs[3].left @[WatermanSystolic.scala 30:20]
    calculateCell_3.io.upper <= PEs[3].upper @[WatermanSystolic.scala 30:20]
    PEs[4].out <= calculateCell_4.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_4.io.columnElement <= PEs[4].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_4.io.rowElement <= PEs[4].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_4.io.diagonal <= PEs[4].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_4.io.left <= PEs[4].left @[WatermanSystolic.scala 30:20]
    calculateCell_4.io.upper <= PEs[4].upper @[WatermanSystolic.scala 30:20]
    PEs[5].out <= calculateCell_5.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_5.io.columnElement <= PEs[5].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_5.io.rowElement <= PEs[5].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_5.io.diagonal <= PEs[5].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_5.io.left <= PEs[5].left @[WatermanSystolic.scala 30:20]
    calculateCell_5.io.upper <= PEs[5].upper @[WatermanSystolic.scala 30:20]
    PEs[6].out <= calculateCell_6.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_6.io.columnElement <= PEs[6].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_6.io.rowElement <= PEs[6].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_6.io.diagonal <= PEs[6].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_6.io.left <= PEs[6].left @[WatermanSystolic.scala 30:20]
    calculateCell_6.io.upper <= PEs[6].upper @[WatermanSystolic.scala 30:20]
    PEs[7].out <= calculateCell_7.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_7.io.columnElement <= PEs[7].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_7.io.rowElement <= PEs[7].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_7.io.diagonal <= PEs[7].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_7.io.left <= PEs[7].left @[WatermanSystolic.scala 30:20]
    calculateCell_7.io.upper <= PEs[7].upper @[WatermanSystolic.scala 30:20]
    PEs[8].out <= calculateCell_8.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_8.io.columnElement <= PEs[8].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_8.io.rowElement <= PEs[8].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_8.io.diagonal <= PEs[8].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_8.io.left <= PEs[8].left @[WatermanSystolic.scala 30:20]
    calculateCell_8.io.upper <= PEs[8].upper @[WatermanSystolic.scala 30:20]
    PEs[9].out <= calculateCell_9.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_9.io.columnElement <= PEs[9].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_9.io.rowElement <= PEs[9].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_9.io.diagonal <= PEs[9].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_9.io.left <= PEs[9].left @[WatermanSystolic.scala 30:20]
    calculateCell_9.io.upper <= PEs[9].upper @[WatermanSystolic.scala 30:20]
    PEs[10].out <= calculateCell_10.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_10.io.columnElement <= PEs[10].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_10.io.rowElement <= PEs[10].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_10.io.diagonal <= PEs[10].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_10.io.left <= PEs[10].left @[WatermanSystolic.scala 30:20]
    calculateCell_10.io.upper <= PEs[10].upper @[WatermanSystolic.scala 30:20]
    PEs[11].out <= calculateCell_11.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_11.io.columnElement <= PEs[11].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_11.io.rowElement <= PEs[11].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_11.io.diagonal <= PEs[11].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_11.io.left <= PEs[11].left @[WatermanSystolic.scala 30:20]
    calculateCell_11.io.upper <= PEs[11].upper @[WatermanSystolic.scala 30:20]
    PEs[12].out <= calculateCell_12.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_12.io.columnElement <= PEs[12].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_12.io.rowElement <= PEs[12].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_12.io.diagonal <= PEs[12].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_12.io.left <= PEs[12].left @[WatermanSystolic.scala 30:20]
    calculateCell_12.io.upper <= PEs[12].upper @[WatermanSystolic.scala 30:20]
    PEs[13].out <= calculateCell_13.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_13.io.columnElement <= PEs[13].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_13.io.rowElement <= PEs[13].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_13.io.diagonal <= PEs[13].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_13.io.left <= PEs[13].left @[WatermanSystolic.scala 30:20]
    calculateCell_13.io.upper <= PEs[13].upper @[WatermanSystolic.scala 30:20]
    PEs[14].out <= calculateCell_14.io.out @[WatermanSystolic.scala 30:20]
    calculateCell_14.io.columnElement <= PEs[14].columnElement @[WatermanSystolic.scala 30:20]
    calculateCell_14.io.rowElement <= PEs[14].rowElement @[WatermanSystolic.scala 30:20]
    calculateCell_14.io.diagonal <= PEs[14].diagonal @[WatermanSystolic.scala 30:20]
    calculateCell_14.io.left <= PEs[14].left @[WatermanSystolic.scala 30:20]
    calculateCell_14.io.upper <= PEs[14].upper @[WatermanSystolic.scala 30:20]
    node _T = sub(stepReg, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:41]
    node _T_1 = tail(_T, 1) @[WatermanSystolic.scala 35:41]
    node _T_2 = asSInt(_T_1) @[WatermanSystolic.scala 35:41]
    node _T_3 = lt(_T_2, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_4 = sub(asSInt(UInt<1>("h00")), _T_2) @[WatermanSystolic.scala 35:48]
    node _T_5 = tail(_T_4, 1) @[WatermanSystolic.scala 35:48]
    node _T_6 = asSInt(_T_5) @[WatermanSystolic.scala 35:48]
    node _T_7 = mux(_T_3, _T_6, _T_2) @[WatermanSystolic.scala 35:48]
    node _T_8 = asUInt(_T_7) @[WatermanSystolic.scala 35:52]
    node _T_9 = bits(_T_8, 4, 0)
    PEs[0].upper <= columnsReg[_T_9] @[WatermanSystolic.scala 35:18]
    PEs[0].diagonal <= diagReg[UInt<1>("h00")] @[WatermanSystolic.scala 36:21]
    node _T_10 = sub(stepReg, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:43]
    node _T_11 = tail(_T_10, 1) @[WatermanSystolic.scala 37:43]
    node _T_12 = asSInt(_T_11) @[WatermanSystolic.scala 37:43]
    node _T_13 = lt(_T_12, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_14 = sub(asSInt(UInt<1>("h00")), _T_12) @[WatermanSystolic.scala 37:50]
    node _T_15 = tail(_T_14, 1) @[WatermanSystolic.scala 37:50]
    node _T_16 = asSInt(_T_15) @[WatermanSystolic.scala 37:50]
    node _T_17 = mux(_T_13, _T_16, _T_12) @[WatermanSystolic.scala 37:50]
    node _T_18 = asUInt(_T_17) @[WatermanSystolic.scala 37:54]
    node _T_19 = bits(_T_18, 4, 0)
    PEs[0].columnElement <= SReg[_T_19] @[WatermanSystolic.scala 37:26]
    PEs[0].left <= rowsReg[0] @[WatermanSystolic.scala 38:17]
    PEs[0].rowElement <= TReg[0] @[WatermanSystolic.scala 39:23]
    node _T_20 = sub(stepReg, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 35:41]
    node _T_21 = tail(_T_20, 1) @[WatermanSystolic.scala 35:41]
    node _T_22 = asSInt(_T_21) @[WatermanSystolic.scala 35:41]
    node _T_23 = lt(_T_22, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_24 = sub(asSInt(UInt<1>("h00")), _T_22) @[WatermanSystolic.scala 35:48]
    node _T_25 = tail(_T_24, 1) @[WatermanSystolic.scala 35:48]
    node _T_26 = asSInt(_T_25) @[WatermanSystolic.scala 35:48]
    node _T_27 = mux(_T_23, _T_26, _T_22) @[WatermanSystolic.scala 35:48]
    node _T_28 = asUInt(_T_27) @[WatermanSystolic.scala 35:52]
    node _T_29 = bits(_T_28, 4, 0)
    PEs[1].upper <= columnsReg[_T_29] @[WatermanSystolic.scala 35:18]
    PEs[1].diagonal <= diagReg[UInt<1>("h01")] @[WatermanSystolic.scala 36:21]
    node _T_30 = sub(stepReg, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 37:43]
    node _T_31 = tail(_T_30, 1) @[WatermanSystolic.scala 37:43]
    node _T_32 = asSInt(_T_31) @[WatermanSystolic.scala 37:43]
    node _T_33 = lt(_T_32, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_34 = sub(asSInt(UInt<1>("h00")), _T_32) @[WatermanSystolic.scala 37:50]
    node _T_35 = tail(_T_34, 1) @[WatermanSystolic.scala 37:50]
    node _T_36 = asSInt(_T_35) @[WatermanSystolic.scala 37:50]
    node _T_37 = mux(_T_33, _T_36, _T_32) @[WatermanSystolic.scala 37:50]
    node _T_38 = asUInt(_T_37) @[WatermanSystolic.scala 37:54]
    node _T_39 = bits(_T_38, 4, 0)
    PEs[1].columnElement <= SReg[_T_39] @[WatermanSystolic.scala 37:26]
    PEs[1].left <= rowsReg[1] @[WatermanSystolic.scala 38:17]
    PEs[1].rowElement <= TReg[1] @[WatermanSystolic.scala 39:23]
    node _T_40 = sub(stepReg, asSInt(UInt<3>("h02"))) @[WatermanSystolic.scala 35:41]
    node _T_41 = tail(_T_40, 1) @[WatermanSystolic.scala 35:41]
    node _T_42 = asSInt(_T_41) @[WatermanSystolic.scala 35:41]
    node _T_43 = lt(_T_42, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_44 = sub(asSInt(UInt<1>("h00")), _T_42) @[WatermanSystolic.scala 35:48]
    node _T_45 = tail(_T_44, 1) @[WatermanSystolic.scala 35:48]
    node _T_46 = asSInt(_T_45) @[WatermanSystolic.scala 35:48]
    node _T_47 = mux(_T_43, _T_46, _T_42) @[WatermanSystolic.scala 35:48]
    node _T_48 = asUInt(_T_47) @[WatermanSystolic.scala 35:52]
    node _T_49 = bits(_T_48, 4, 0)
    PEs[2].upper <= columnsReg[_T_49] @[WatermanSystolic.scala 35:18]
    PEs[2].diagonal <= diagReg[UInt<2>("h02")] @[WatermanSystolic.scala 36:21]
    node _T_50 = sub(stepReg, asSInt(UInt<3>("h02"))) @[WatermanSystolic.scala 37:43]
    node _T_51 = tail(_T_50, 1) @[WatermanSystolic.scala 37:43]
    node _T_52 = asSInt(_T_51) @[WatermanSystolic.scala 37:43]
    node _T_53 = lt(_T_52, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_54 = sub(asSInt(UInt<1>("h00")), _T_52) @[WatermanSystolic.scala 37:50]
    node _T_55 = tail(_T_54, 1) @[WatermanSystolic.scala 37:50]
    node _T_56 = asSInt(_T_55) @[WatermanSystolic.scala 37:50]
    node _T_57 = mux(_T_53, _T_56, _T_52) @[WatermanSystolic.scala 37:50]
    node _T_58 = asUInt(_T_57) @[WatermanSystolic.scala 37:54]
    node _T_59 = bits(_T_58, 4, 0)
    PEs[2].columnElement <= SReg[_T_59] @[WatermanSystolic.scala 37:26]
    PEs[2].left <= rowsReg[2] @[WatermanSystolic.scala 38:17]
    PEs[2].rowElement <= TReg[2] @[WatermanSystolic.scala 39:23]
    node _T_60 = sub(stepReg, asSInt(UInt<3>("h03"))) @[WatermanSystolic.scala 35:41]
    node _T_61 = tail(_T_60, 1) @[WatermanSystolic.scala 35:41]
    node _T_62 = asSInt(_T_61) @[WatermanSystolic.scala 35:41]
    node _T_63 = lt(_T_62, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_64 = sub(asSInt(UInt<1>("h00")), _T_62) @[WatermanSystolic.scala 35:48]
    node _T_65 = tail(_T_64, 1) @[WatermanSystolic.scala 35:48]
    node _T_66 = asSInt(_T_65) @[WatermanSystolic.scala 35:48]
    node _T_67 = mux(_T_63, _T_66, _T_62) @[WatermanSystolic.scala 35:48]
    node _T_68 = asUInt(_T_67) @[WatermanSystolic.scala 35:52]
    node _T_69 = bits(_T_68, 4, 0)
    PEs[3].upper <= columnsReg[_T_69] @[WatermanSystolic.scala 35:18]
    PEs[3].diagonal <= diagReg[UInt<2>("h03")] @[WatermanSystolic.scala 36:21]
    node _T_70 = sub(stepReg, asSInt(UInt<3>("h03"))) @[WatermanSystolic.scala 37:43]
    node _T_71 = tail(_T_70, 1) @[WatermanSystolic.scala 37:43]
    node _T_72 = asSInt(_T_71) @[WatermanSystolic.scala 37:43]
    node _T_73 = lt(_T_72, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_74 = sub(asSInt(UInt<1>("h00")), _T_72) @[WatermanSystolic.scala 37:50]
    node _T_75 = tail(_T_74, 1) @[WatermanSystolic.scala 37:50]
    node _T_76 = asSInt(_T_75) @[WatermanSystolic.scala 37:50]
    node _T_77 = mux(_T_73, _T_76, _T_72) @[WatermanSystolic.scala 37:50]
    node _T_78 = asUInt(_T_77) @[WatermanSystolic.scala 37:54]
    node _T_79 = bits(_T_78, 4, 0)
    PEs[3].columnElement <= SReg[_T_79] @[WatermanSystolic.scala 37:26]
    PEs[3].left <= rowsReg[3] @[WatermanSystolic.scala 38:17]
    PEs[3].rowElement <= TReg[3] @[WatermanSystolic.scala 39:23]
    node _T_80 = sub(stepReg, asSInt(UInt<4>("h04"))) @[WatermanSystolic.scala 35:41]
    node _T_81 = tail(_T_80, 1) @[WatermanSystolic.scala 35:41]
    node _T_82 = asSInt(_T_81) @[WatermanSystolic.scala 35:41]
    node _T_83 = lt(_T_82, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_84 = sub(asSInt(UInt<1>("h00")), _T_82) @[WatermanSystolic.scala 35:48]
    node _T_85 = tail(_T_84, 1) @[WatermanSystolic.scala 35:48]
    node _T_86 = asSInt(_T_85) @[WatermanSystolic.scala 35:48]
    node _T_87 = mux(_T_83, _T_86, _T_82) @[WatermanSystolic.scala 35:48]
    node _T_88 = asUInt(_T_87) @[WatermanSystolic.scala 35:52]
    node _T_89 = bits(_T_88, 4, 0)
    PEs[4].upper <= columnsReg[_T_89] @[WatermanSystolic.scala 35:18]
    PEs[4].diagonal <= diagReg[UInt<3>("h04")] @[WatermanSystolic.scala 36:21]
    node _T_90 = sub(stepReg, asSInt(UInt<4>("h04"))) @[WatermanSystolic.scala 37:43]
    node _T_91 = tail(_T_90, 1) @[WatermanSystolic.scala 37:43]
    node _T_92 = asSInt(_T_91) @[WatermanSystolic.scala 37:43]
    node _T_93 = lt(_T_92, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_94 = sub(asSInt(UInt<1>("h00")), _T_92) @[WatermanSystolic.scala 37:50]
    node _T_95 = tail(_T_94, 1) @[WatermanSystolic.scala 37:50]
    node _T_96 = asSInt(_T_95) @[WatermanSystolic.scala 37:50]
    node _T_97 = mux(_T_93, _T_96, _T_92) @[WatermanSystolic.scala 37:50]
    node _T_98 = asUInt(_T_97) @[WatermanSystolic.scala 37:54]
    node _T_99 = bits(_T_98, 4, 0)
    PEs[4].columnElement <= SReg[_T_99] @[WatermanSystolic.scala 37:26]
    PEs[4].left <= rowsReg[4] @[WatermanSystolic.scala 38:17]
    PEs[4].rowElement <= TReg[4] @[WatermanSystolic.scala 39:23]
    node _T_100 = sub(stepReg, asSInt(UInt<4>("h05"))) @[WatermanSystolic.scala 35:41]
    node _T_101 = tail(_T_100, 1) @[WatermanSystolic.scala 35:41]
    node _T_102 = asSInt(_T_101) @[WatermanSystolic.scala 35:41]
    node _T_103 = lt(_T_102, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_104 = sub(asSInt(UInt<1>("h00")), _T_102) @[WatermanSystolic.scala 35:48]
    node _T_105 = tail(_T_104, 1) @[WatermanSystolic.scala 35:48]
    node _T_106 = asSInt(_T_105) @[WatermanSystolic.scala 35:48]
    node _T_107 = mux(_T_103, _T_106, _T_102) @[WatermanSystolic.scala 35:48]
    node _T_108 = asUInt(_T_107) @[WatermanSystolic.scala 35:52]
    node _T_109 = bits(_T_108, 4, 0)
    PEs[5].upper <= columnsReg[_T_109] @[WatermanSystolic.scala 35:18]
    PEs[5].diagonal <= diagReg[UInt<3>("h05")] @[WatermanSystolic.scala 36:21]
    node _T_110 = sub(stepReg, asSInt(UInt<4>("h05"))) @[WatermanSystolic.scala 37:43]
    node _T_111 = tail(_T_110, 1) @[WatermanSystolic.scala 37:43]
    node _T_112 = asSInt(_T_111) @[WatermanSystolic.scala 37:43]
    node _T_113 = lt(_T_112, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_114 = sub(asSInt(UInt<1>("h00")), _T_112) @[WatermanSystolic.scala 37:50]
    node _T_115 = tail(_T_114, 1) @[WatermanSystolic.scala 37:50]
    node _T_116 = asSInt(_T_115) @[WatermanSystolic.scala 37:50]
    node _T_117 = mux(_T_113, _T_116, _T_112) @[WatermanSystolic.scala 37:50]
    node _T_118 = asUInt(_T_117) @[WatermanSystolic.scala 37:54]
    node _T_119 = bits(_T_118, 4, 0)
    PEs[5].columnElement <= SReg[_T_119] @[WatermanSystolic.scala 37:26]
    PEs[5].left <= rowsReg[5] @[WatermanSystolic.scala 38:17]
    PEs[5].rowElement <= TReg[5] @[WatermanSystolic.scala 39:23]
    node _T_120 = sub(stepReg, asSInt(UInt<4>("h06"))) @[WatermanSystolic.scala 35:41]
    node _T_121 = tail(_T_120, 1) @[WatermanSystolic.scala 35:41]
    node _T_122 = asSInt(_T_121) @[WatermanSystolic.scala 35:41]
    node _T_123 = lt(_T_122, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_124 = sub(asSInt(UInt<1>("h00")), _T_122) @[WatermanSystolic.scala 35:48]
    node _T_125 = tail(_T_124, 1) @[WatermanSystolic.scala 35:48]
    node _T_126 = asSInt(_T_125) @[WatermanSystolic.scala 35:48]
    node _T_127 = mux(_T_123, _T_126, _T_122) @[WatermanSystolic.scala 35:48]
    node _T_128 = asUInt(_T_127) @[WatermanSystolic.scala 35:52]
    node _T_129 = bits(_T_128, 4, 0)
    PEs[6].upper <= columnsReg[_T_129] @[WatermanSystolic.scala 35:18]
    PEs[6].diagonal <= diagReg[UInt<3>("h06")] @[WatermanSystolic.scala 36:21]
    node _T_130 = sub(stepReg, asSInt(UInt<4>("h06"))) @[WatermanSystolic.scala 37:43]
    node _T_131 = tail(_T_130, 1) @[WatermanSystolic.scala 37:43]
    node _T_132 = asSInt(_T_131) @[WatermanSystolic.scala 37:43]
    node _T_133 = lt(_T_132, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_134 = sub(asSInt(UInt<1>("h00")), _T_132) @[WatermanSystolic.scala 37:50]
    node _T_135 = tail(_T_134, 1) @[WatermanSystolic.scala 37:50]
    node _T_136 = asSInt(_T_135) @[WatermanSystolic.scala 37:50]
    node _T_137 = mux(_T_133, _T_136, _T_132) @[WatermanSystolic.scala 37:50]
    node _T_138 = asUInt(_T_137) @[WatermanSystolic.scala 37:54]
    node _T_139 = bits(_T_138, 4, 0)
    PEs[6].columnElement <= SReg[_T_139] @[WatermanSystolic.scala 37:26]
    PEs[6].left <= rowsReg[6] @[WatermanSystolic.scala 38:17]
    PEs[6].rowElement <= TReg[6] @[WatermanSystolic.scala 39:23]
    node _T_140 = sub(stepReg, asSInt(UInt<4>("h07"))) @[WatermanSystolic.scala 35:41]
    node _T_141 = tail(_T_140, 1) @[WatermanSystolic.scala 35:41]
    node _T_142 = asSInt(_T_141) @[WatermanSystolic.scala 35:41]
    node _T_143 = lt(_T_142, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_144 = sub(asSInt(UInt<1>("h00")), _T_142) @[WatermanSystolic.scala 35:48]
    node _T_145 = tail(_T_144, 1) @[WatermanSystolic.scala 35:48]
    node _T_146 = asSInt(_T_145) @[WatermanSystolic.scala 35:48]
    node _T_147 = mux(_T_143, _T_146, _T_142) @[WatermanSystolic.scala 35:48]
    node _T_148 = asUInt(_T_147) @[WatermanSystolic.scala 35:52]
    node _T_149 = bits(_T_148, 4, 0)
    PEs[7].upper <= columnsReg[_T_149] @[WatermanSystolic.scala 35:18]
    PEs[7].diagonal <= diagReg[UInt<3>("h07")] @[WatermanSystolic.scala 36:21]
    node _T_150 = sub(stepReg, asSInt(UInt<4>("h07"))) @[WatermanSystolic.scala 37:43]
    node _T_151 = tail(_T_150, 1) @[WatermanSystolic.scala 37:43]
    node _T_152 = asSInt(_T_151) @[WatermanSystolic.scala 37:43]
    node _T_153 = lt(_T_152, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_154 = sub(asSInt(UInt<1>("h00")), _T_152) @[WatermanSystolic.scala 37:50]
    node _T_155 = tail(_T_154, 1) @[WatermanSystolic.scala 37:50]
    node _T_156 = asSInt(_T_155) @[WatermanSystolic.scala 37:50]
    node _T_157 = mux(_T_153, _T_156, _T_152) @[WatermanSystolic.scala 37:50]
    node _T_158 = asUInt(_T_157) @[WatermanSystolic.scala 37:54]
    node _T_159 = bits(_T_158, 4, 0)
    PEs[7].columnElement <= SReg[_T_159] @[WatermanSystolic.scala 37:26]
    PEs[7].left <= rowsReg[7] @[WatermanSystolic.scala 38:17]
    PEs[7].rowElement <= TReg[7] @[WatermanSystolic.scala 39:23]
    node _T_160 = sub(stepReg, asSInt(UInt<5>("h08"))) @[WatermanSystolic.scala 35:41]
    node _T_161 = tail(_T_160, 1) @[WatermanSystolic.scala 35:41]
    node _T_162 = asSInt(_T_161) @[WatermanSystolic.scala 35:41]
    node _T_163 = lt(_T_162, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_164 = sub(asSInt(UInt<1>("h00")), _T_162) @[WatermanSystolic.scala 35:48]
    node _T_165 = tail(_T_164, 1) @[WatermanSystolic.scala 35:48]
    node _T_166 = asSInt(_T_165) @[WatermanSystolic.scala 35:48]
    node _T_167 = mux(_T_163, _T_166, _T_162) @[WatermanSystolic.scala 35:48]
    node _T_168 = asUInt(_T_167) @[WatermanSystolic.scala 35:52]
    node _T_169 = bits(_T_168, 4, 0)
    PEs[8].upper <= columnsReg[_T_169] @[WatermanSystolic.scala 35:18]
    PEs[8].diagonal <= diagReg[UInt<4>("h08")] @[WatermanSystolic.scala 36:21]
    node _T_170 = sub(stepReg, asSInt(UInt<5>("h08"))) @[WatermanSystolic.scala 37:43]
    node _T_171 = tail(_T_170, 1) @[WatermanSystolic.scala 37:43]
    node _T_172 = asSInt(_T_171) @[WatermanSystolic.scala 37:43]
    node _T_173 = lt(_T_172, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_174 = sub(asSInt(UInt<1>("h00")), _T_172) @[WatermanSystolic.scala 37:50]
    node _T_175 = tail(_T_174, 1) @[WatermanSystolic.scala 37:50]
    node _T_176 = asSInt(_T_175) @[WatermanSystolic.scala 37:50]
    node _T_177 = mux(_T_173, _T_176, _T_172) @[WatermanSystolic.scala 37:50]
    node _T_178 = asUInt(_T_177) @[WatermanSystolic.scala 37:54]
    node _T_179 = bits(_T_178, 4, 0)
    PEs[8].columnElement <= SReg[_T_179] @[WatermanSystolic.scala 37:26]
    PEs[8].left <= rowsReg[8] @[WatermanSystolic.scala 38:17]
    PEs[8].rowElement <= TReg[8] @[WatermanSystolic.scala 39:23]
    node _T_180 = sub(stepReg, asSInt(UInt<5>("h09"))) @[WatermanSystolic.scala 35:41]
    node _T_181 = tail(_T_180, 1) @[WatermanSystolic.scala 35:41]
    node _T_182 = asSInt(_T_181) @[WatermanSystolic.scala 35:41]
    node _T_183 = lt(_T_182, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_184 = sub(asSInt(UInt<1>("h00")), _T_182) @[WatermanSystolic.scala 35:48]
    node _T_185 = tail(_T_184, 1) @[WatermanSystolic.scala 35:48]
    node _T_186 = asSInt(_T_185) @[WatermanSystolic.scala 35:48]
    node _T_187 = mux(_T_183, _T_186, _T_182) @[WatermanSystolic.scala 35:48]
    node _T_188 = asUInt(_T_187) @[WatermanSystolic.scala 35:52]
    node _T_189 = bits(_T_188, 4, 0)
    PEs[9].upper <= columnsReg[_T_189] @[WatermanSystolic.scala 35:18]
    PEs[9].diagonal <= diagReg[UInt<4>("h09")] @[WatermanSystolic.scala 36:21]
    node _T_190 = sub(stepReg, asSInt(UInt<5>("h09"))) @[WatermanSystolic.scala 37:43]
    node _T_191 = tail(_T_190, 1) @[WatermanSystolic.scala 37:43]
    node _T_192 = asSInt(_T_191) @[WatermanSystolic.scala 37:43]
    node _T_193 = lt(_T_192, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_194 = sub(asSInt(UInt<1>("h00")), _T_192) @[WatermanSystolic.scala 37:50]
    node _T_195 = tail(_T_194, 1) @[WatermanSystolic.scala 37:50]
    node _T_196 = asSInt(_T_195) @[WatermanSystolic.scala 37:50]
    node _T_197 = mux(_T_193, _T_196, _T_192) @[WatermanSystolic.scala 37:50]
    node _T_198 = asUInt(_T_197) @[WatermanSystolic.scala 37:54]
    node _T_199 = bits(_T_198, 4, 0)
    PEs[9].columnElement <= SReg[_T_199] @[WatermanSystolic.scala 37:26]
    PEs[9].left <= rowsReg[9] @[WatermanSystolic.scala 38:17]
    PEs[9].rowElement <= TReg[9] @[WatermanSystolic.scala 39:23]
    node _T_200 = sub(stepReg, asSInt(UInt<5>("h0a"))) @[WatermanSystolic.scala 35:41]
    node _T_201 = tail(_T_200, 1) @[WatermanSystolic.scala 35:41]
    node _T_202 = asSInt(_T_201) @[WatermanSystolic.scala 35:41]
    node _T_203 = lt(_T_202, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_204 = sub(asSInt(UInt<1>("h00")), _T_202) @[WatermanSystolic.scala 35:48]
    node _T_205 = tail(_T_204, 1) @[WatermanSystolic.scala 35:48]
    node _T_206 = asSInt(_T_205) @[WatermanSystolic.scala 35:48]
    node _T_207 = mux(_T_203, _T_206, _T_202) @[WatermanSystolic.scala 35:48]
    node _T_208 = asUInt(_T_207) @[WatermanSystolic.scala 35:52]
    node _T_209 = bits(_T_208, 4, 0)
    PEs[10].upper <= columnsReg[_T_209] @[WatermanSystolic.scala 35:18]
    PEs[10].diagonal <= diagReg[UInt<4>("h0a")] @[WatermanSystolic.scala 36:21]
    node _T_210 = sub(stepReg, asSInt(UInt<5>("h0a"))) @[WatermanSystolic.scala 37:43]
    node _T_211 = tail(_T_210, 1) @[WatermanSystolic.scala 37:43]
    node _T_212 = asSInt(_T_211) @[WatermanSystolic.scala 37:43]
    node _T_213 = lt(_T_212, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_214 = sub(asSInt(UInt<1>("h00")), _T_212) @[WatermanSystolic.scala 37:50]
    node _T_215 = tail(_T_214, 1) @[WatermanSystolic.scala 37:50]
    node _T_216 = asSInt(_T_215) @[WatermanSystolic.scala 37:50]
    node _T_217 = mux(_T_213, _T_216, _T_212) @[WatermanSystolic.scala 37:50]
    node _T_218 = asUInt(_T_217) @[WatermanSystolic.scala 37:54]
    node _T_219 = bits(_T_218, 4, 0)
    PEs[10].columnElement <= SReg[_T_219] @[WatermanSystolic.scala 37:26]
    PEs[10].left <= rowsReg[10] @[WatermanSystolic.scala 38:17]
    PEs[10].rowElement <= TReg[10] @[WatermanSystolic.scala 39:23]
    node _T_220 = sub(stepReg, asSInt(UInt<5>("h0b"))) @[WatermanSystolic.scala 35:41]
    node _T_221 = tail(_T_220, 1) @[WatermanSystolic.scala 35:41]
    node _T_222 = asSInt(_T_221) @[WatermanSystolic.scala 35:41]
    node _T_223 = lt(_T_222, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_224 = sub(asSInt(UInt<1>("h00")), _T_222) @[WatermanSystolic.scala 35:48]
    node _T_225 = tail(_T_224, 1) @[WatermanSystolic.scala 35:48]
    node _T_226 = asSInt(_T_225) @[WatermanSystolic.scala 35:48]
    node _T_227 = mux(_T_223, _T_226, _T_222) @[WatermanSystolic.scala 35:48]
    node _T_228 = asUInt(_T_227) @[WatermanSystolic.scala 35:52]
    node _T_229 = bits(_T_228, 4, 0)
    PEs[11].upper <= columnsReg[_T_229] @[WatermanSystolic.scala 35:18]
    PEs[11].diagonal <= diagReg[UInt<4>("h0b")] @[WatermanSystolic.scala 36:21]
    node _T_230 = sub(stepReg, asSInt(UInt<5>("h0b"))) @[WatermanSystolic.scala 37:43]
    node _T_231 = tail(_T_230, 1) @[WatermanSystolic.scala 37:43]
    node _T_232 = asSInt(_T_231) @[WatermanSystolic.scala 37:43]
    node _T_233 = lt(_T_232, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_234 = sub(asSInt(UInt<1>("h00")), _T_232) @[WatermanSystolic.scala 37:50]
    node _T_235 = tail(_T_234, 1) @[WatermanSystolic.scala 37:50]
    node _T_236 = asSInt(_T_235) @[WatermanSystolic.scala 37:50]
    node _T_237 = mux(_T_233, _T_236, _T_232) @[WatermanSystolic.scala 37:50]
    node _T_238 = asUInt(_T_237) @[WatermanSystolic.scala 37:54]
    node _T_239 = bits(_T_238, 4, 0)
    PEs[11].columnElement <= SReg[_T_239] @[WatermanSystolic.scala 37:26]
    PEs[11].left <= rowsReg[11] @[WatermanSystolic.scala 38:17]
    PEs[11].rowElement <= TReg[11] @[WatermanSystolic.scala 39:23]
    node _T_240 = sub(stepReg, asSInt(UInt<5>("h0c"))) @[WatermanSystolic.scala 35:41]
    node _T_241 = tail(_T_240, 1) @[WatermanSystolic.scala 35:41]
    node _T_242 = asSInt(_T_241) @[WatermanSystolic.scala 35:41]
    node _T_243 = lt(_T_242, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_244 = sub(asSInt(UInt<1>("h00")), _T_242) @[WatermanSystolic.scala 35:48]
    node _T_245 = tail(_T_244, 1) @[WatermanSystolic.scala 35:48]
    node _T_246 = asSInt(_T_245) @[WatermanSystolic.scala 35:48]
    node _T_247 = mux(_T_243, _T_246, _T_242) @[WatermanSystolic.scala 35:48]
    node _T_248 = asUInt(_T_247) @[WatermanSystolic.scala 35:52]
    node _T_249 = bits(_T_248, 4, 0)
    PEs[12].upper <= columnsReg[_T_249] @[WatermanSystolic.scala 35:18]
    PEs[12].diagonal <= diagReg[UInt<4>("h0c")] @[WatermanSystolic.scala 36:21]
    node _T_250 = sub(stepReg, asSInt(UInt<5>("h0c"))) @[WatermanSystolic.scala 37:43]
    node _T_251 = tail(_T_250, 1) @[WatermanSystolic.scala 37:43]
    node _T_252 = asSInt(_T_251) @[WatermanSystolic.scala 37:43]
    node _T_253 = lt(_T_252, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_254 = sub(asSInt(UInt<1>("h00")), _T_252) @[WatermanSystolic.scala 37:50]
    node _T_255 = tail(_T_254, 1) @[WatermanSystolic.scala 37:50]
    node _T_256 = asSInt(_T_255) @[WatermanSystolic.scala 37:50]
    node _T_257 = mux(_T_253, _T_256, _T_252) @[WatermanSystolic.scala 37:50]
    node _T_258 = asUInt(_T_257) @[WatermanSystolic.scala 37:54]
    node _T_259 = bits(_T_258, 4, 0)
    PEs[12].columnElement <= SReg[_T_259] @[WatermanSystolic.scala 37:26]
    PEs[12].left <= rowsReg[12] @[WatermanSystolic.scala 38:17]
    PEs[12].rowElement <= TReg[12] @[WatermanSystolic.scala 39:23]
    node _T_260 = sub(stepReg, asSInt(UInt<5>("h0d"))) @[WatermanSystolic.scala 35:41]
    node _T_261 = tail(_T_260, 1) @[WatermanSystolic.scala 35:41]
    node _T_262 = asSInt(_T_261) @[WatermanSystolic.scala 35:41]
    node _T_263 = lt(_T_262, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_264 = sub(asSInt(UInt<1>("h00")), _T_262) @[WatermanSystolic.scala 35:48]
    node _T_265 = tail(_T_264, 1) @[WatermanSystolic.scala 35:48]
    node _T_266 = asSInt(_T_265) @[WatermanSystolic.scala 35:48]
    node _T_267 = mux(_T_263, _T_266, _T_262) @[WatermanSystolic.scala 35:48]
    node _T_268 = asUInt(_T_267) @[WatermanSystolic.scala 35:52]
    node _T_269 = bits(_T_268, 4, 0)
    PEs[13].upper <= columnsReg[_T_269] @[WatermanSystolic.scala 35:18]
    PEs[13].diagonal <= diagReg[UInt<4>("h0d")] @[WatermanSystolic.scala 36:21]
    node _T_270 = sub(stepReg, asSInt(UInt<5>("h0d"))) @[WatermanSystolic.scala 37:43]
    node _T_271 = tail(_T_270, 1) @[WatermanSystolic.scala 37:43]
    node _T_272 = asSInt(_T_271) @[WatermanSystolic.scala 37:43]
    node _T_273 = lt(_T_272, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_274 = sub(asSInt(UInt<1>("h00")), _T_272) @[WatermanSystolic.scala 37:50]
    node _T_275 = tail(_T_274, 1) @[WatermanSystolic.scala 37:50]
    node _T_276 = asSInt(_T_275) @[WatermanSystolic.scala 37:50]
    node _T_277 = mux(_T_273, _T_276, _T_272) @[WatermanSystolic.scala 37:50]
    node _T_278 = asUInt(_T_277) @[WatermanSystolic.scala 37:54]
    node _T_279 = bits(_T_278, 4, 0)
    PEs[13].columnElement <= SReg[_T_279] @[WatermanSystolic.scala 37:26]
    PEs[13].left <= rowsReg[13] @[WatermanSystolic.scala 38:17]
    PEs[13].rowElement <= TReg[13] @[WatermanSystolic.scala 39:23]
    node _T_280 = sub(stepReg, asSInt(UInt<5>("h0e"))) @[WatermanSystolic.scala 35:41]
    node _T_281 = tail(_T_280, 1) @[WatermanSystolic.scala 35:41]
    node _T_282 = asSInt(_T_281) @[WatermanSystolic.scala 35:41]
    node _T_283 = lt(_T_282, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 35:48]
    node _T_284 = sub(asSInt(UInt<1>("h00")), _T_282) @[WatermanSystolic.scala 35:48]
    node _T_285 = tail(_T_284, 1) @[WatermanSystolic.scala 35:48]
    node _T_286 = asSInt(_T_285) @[WatermanSystolic.scala 35:48]
    node _T_287 = mux(_T_283, _T_286, _T_282) @[WatermanSystolic.scala 35:48]
    node _T_288 = asUInt(_T_287) @[WatermanSystolic.scala 35:52]
    node _T_289 = bits(_T_288, 4, 0)
    PEs[14].upper <= columnsReg[_T_289] @[WatermanSystolic.scala 35:18]
    PEs[14].diagonal <= diagReg[UInt<4>("h0e")] @[WatermanSystolic.scala 36:21]
    node _T_290 = sub(stepReg, asSInt(UInt<5>("h0e"))) @[WatermanSystolic.scala 37:43]
    node _T_291 = tail(_T_290, 1) @[WatermanSystolic.scala 37:43]
    node _T_292 = asSInt(_T_291) @[WatermanSystolic.scala 37:43]
    node _T_293 = lt(_T_292, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 37:50]
    node _T_294 = sub(asSInt(UInt<1>("h00")), _T_292) @[WatermanSystolic.scala 37:50]
    node _T_295 = tail(_T_294, 1) @[WatermanSystolic.scala 37:50]
    node _T_296 = asSInt(_T_295) @[WatermanSystolic.scala 37:50]
    node _T_297 = mux(_T_293, _T_296, _T_292) @[WatermanSystolic.scala 37:50]
    node _T_298 = asUInt(_T_297) @[WatermanSystolic.scala 37:54]
    node _T_299 = bits(_T_298, 4, 0)
    PEs[14].columnElement <= SReg[_T_299] @[WatermanSystolic.scala 37:26]
    PEs[14].left <= rowsReg[14] @[WatermanSystolic.scala 38:17]
    PEs[14].rowElement <= TReg[14] @[WatermanSystolic.scala 39:23]
    inst leftForOutput of VectorElemOr @[WatermanSystolic.scala 42:29]
    leftForOutput.clock <= clock
    leftForOutput.reset <= reset
    leftForOutput.io.input[0] <= outValidReg[0] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[1] <= outValidReg[1] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[2] <= outValidReg[2] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[3] <= outValidReg[3] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[4] <= outValidReg[4] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[5] <= outValidReg[5] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[6] <= outValidReg[6] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[7] <= outValidReg[7] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[8] <= outValidReg[8] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[9] <= outValidReg[9] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[10] <= outValidReg[10] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[11] <= outValidReg[11] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[12] <= outValidReg[12] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[13] <= outValidReg[13] @[WatermanSystolic.scala 43:26]
    leftForOutput.io.input[14] <= outValidReg[14] @[WatermanSystolic.scala 43:26]
    node _T_300 = sub(stepReg, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:34]
    node _T_301 = tail(_T_300, 1) @[WatermanSystolic.scala 46:34]
    node _T_302 = asSInt(_T_301) @[WatermanSystolic.scala 46:34]
    node _T_303 = lt(_T_302, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_304 = sub(asSInt(UInt<1>("h00")), _T_302) @[WatermanSystolic.scala 46:41]
    node _T_305 = tail(_T_304, 1) @[WatermanSystolic.scala 46:41]
    node _T_306 = asSInt(_T_305) @[WatermanSystolic.scala 46:41]
    node _T_307 = mux(_T_303, _T_306, _T_302) @[WatermanSystolic.scala 46:41]
    node _T_308 = asUInt(_T_307) @[WatermanSystolic.scala 46:45]
    io.out[0].bits.x <= _T_308 @[WatermanSystolic.scala 46:22]
    io.out[0].bits.y <= UInt<1>("h00") @[WatermanSystolic.scala 47:22]
    io.out[0].bits.score <= resReg[0] @[WatermanSystolic.scala 48:26]
    io.out[0].valid <= outValidReg[0] @[WatermanSystolic.scala 49:21]
    node _T_309 = sub(stepReg, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 46:34]
    node _T_310 = tail(_T_309, 1) @[WatermanSystolic.scala 46:34]
    node _T_311 = asSInt(_T_310) @[WatermanSystolic.scala 46:34]
    node _T_312 = lt(_T_311, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_313 = sub(asSInt(UInt<1>("h00")), _T_311) @[WatermanSystolic.scala 46:41]
    node _T_314 = tail(_T_313, 1) @[WatermanSystolic.scala 46:41]
    node _T_315 = asSInt(_T_314) @[WatermanSystolic.scala 46:41]
    node _T_316 = mux(_T_312, _T_315, _T_311) @[WatermanSystolic.scala 46:41]
    node _T_317 = asUInt(_T_316) @[WatermanSystolic.scala 46:45]
    io.out[1].bits.x <= _T_317 @[WatermanSystolic.scala 46:22]
    io.out[1].bits.y <= UInt<1>("h01") @[WatermanSystolic.scala 47:22]
    io.out[1].bits.score <= resReg[1] @[WatermanSystolic.scala 48:26]
    io.out[1].valid <= outValidReg[1] @[WatermanSystolic.scala 49:21]
    node _T_318 = sub(stepReg, asSInt(UInt<3>("h02"))) @[WatermanSystolic.scala 46:34]
    node _T_319 = tail(_T_318, 1) @[WatermanSystolic.scala 46:34]
    node _T_320 = asSInt(_T_319) @[WatermanSystolic.scala 46:34]
    node _T_321 = lt(_T_320, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_322 = sub(asSInt(UInt<1>("h00")), _T_320) @[WatermanSystolic.scala 46:41]
    node _T_323 = tail(_T_322, 1) @[WatermanSystolic.scala 46:41]
    node _T_324 = asSInt(_T_323) @[WatermanSystolic.scala 46:41]
    node _T_325 = mux(_T_321, _T_324, _T_320) @[WatermanSystolic.scala 46:41]
    node _T_326 = asUInt(_T_325) @[WatermanSystolic.scala 46:45]
    io.out[2].bits.x <= _T_326 @[WatermanSystolic.scala 46:22]
    io.out[2].bits.y <= UInt<2>("h02") @[WatermanSystolic.scala 47:22]
    io.out[2].bits.score <= resReg[2] @[WatermanSystolic.scala 48:26]
    io.out[2].valid <= outValidReg[2] @[WatermanSystolic.scala 49:21]
    node _T_327 = sub(stepReg, asSInt(UInt<3>("h03"))) @[WatermanSystolic.scala 46:34]
    node _T_328 = tail(_T_327, 1) @[WatermanSystolic.scala 46:34]
    node _T_329 = asSInt(_T_328) @[WatermanSystolic.scala 46:34]
    node _T_330 = lt(_T_329, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_331 = sub(asSInt(UInt<1>("h00")), _T_329) @[WatermanSystolic.scala 46:41]
    node _T_332 = tail(_T_331, 1) @[WatermanSystolic.scala 46:41]
    node _T_333 = asSInt(_T_332) @[WatermanSystolic.scala 46:41]
    node _T_334 = mux(_T_330, _T_333, _T_329) @[WatermanSystolic.scala 46:41]
    node _T_335 = asUInt(_T_334) @[WatermanSystolic.scala 46:45]
    io.out[3].bits.x <= _T_335 @[WatermanSystolic.scala 46:22]
    io.out[3].bits.y <= UInt<2>("h03") @[WatermanSystolic.scala 47:22]
    io.out[3].bits.score <= resReg[3] @[WatermanSystolic.scala 48:26]
    io.out[3].valid <= outValidReg[3] @[WatermanSystolic.scala 49:21]
    node _T_336 = sub(stepReg, asSInt(UInt<4>("h04"))) @[WatermanSystolic.scala 46:34]
    node _T_337 = tail(_T_336, 1) @[WatermanSystolic.scala 46:34]
    node _T_338 = asSInt(_T_337) @[WatermanSystolic.scala 46:34]
    node _T_339 = lt(_T_338, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_340 = sub(asSInt(UInt<1>("h00")), _T_338) @[WatermanSystolic.scala 46:41]
    node _T_341 = tail(_T_340, 1) @[WatermanSystolic.scala 46:41]
    node _T_342 = asSInt(_T_341) @[WatermanSystolic.scala 46:41]
    node _T_343 = mux(_T_339, _T_342, _T_338) @[WatermanSystolic.scala 46:41]
    node _T_344 = asUInt(_T_343) @[WatermanSystolic.scala 46:45]
    io.out[4].bits.x <= _T_344 @[WatermanSystolic.scala 46:22]
    io.out[4].bits.y <= UInt<3>("h04") @[WatermanSystolic.scala 47:22]
    io.out[4].bits.score <= resReg[4] @[WatermanSystolic.scala 48:26]
    io.out[4].valid <= outValidReg[4] @[WatermanSystolic.scala 49:21]
    node _T_345 = sub(stepReg, asSInt(UInt<4>("h05"))) @[WatermanSystolic.scala 46:34]
    node _T_346 = tail(_T_345, 1) @[WatermanSystolic.scala 46:34]
    node _T_347 = asSInt(_T_346) @[WatermanSystolic.scala 46:34]
    node _T_348 = lt(_T_347, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_349 = sub(asSInt(UInt<1>("h00")), _T_347) @[WatermanSystolic.scala 46:41]
    node _T_350 = tail(_T_349, 1) @[WatermanSystolic.scala 46:41]
    node _T_351 = asSInt(_T_350) @[WatermanSystolic.scala 46:41]
    node _T_352 = mux(_T_348, _T_351, _T_347) @[WatermanSystolic.scala 46:41]
    node _T_353 = asUInt(_T_352) @[WatermanSystolic.scala 46:45]
    io.out[5].bits.x <= _T_353 @[WatermanSystolic.scala 46:22]
    io.out[5].bits.y <= UInt<3>("h05") @[WatermanSystolic.scala 47:22]
    io.out[5].bits.score <= resReg[5] @[WatermanSystolic.scala 48:26]
    io.out[5].valid <= outValidReg[5] @[WatermanSystolic.scala 49:21]
    node _T_354 = sub(stepReg, asSInt(UInt<4>("h06"))) @[WatermanSystolic.scala 46:34]
    node _T_355 = tail(_T_354, 1) @[WatermanSystolic.scala 46:34]
    node _T_356 = asSInt(_T_355) @[WatermanSystolic.scala 46:34]
    node _T_357 = lt(_T_356, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_358 = sub(asSInt(UInt<1>("h00")), _T_356) @[WatermanSystolic.scala 46:41]
    node _T_359 = tail(_T_358, 1) @[WatermanSystolic.scala 46:41]
    node _T_360 = asSInt(_T_359) @[WatermanSystolic.scala 46:41]
    node _T_361 = mux(_T_357, _T_360, _T_356) @[WatermanSystolic.scala 46:41]
    node _T_362 = asUInt(_T_361) @[WatermanSystolic.scala 46:45]
    io.out[6].bits.x <= _T_362 @[WatermanSystolic.scala 46:22]
    io.out[6].bits.y <= UInt<3>("h06") @[WatermanSystolic.scala 47:22]
    io.out[6].bits.score <= resReg[6] @[WatermanSystolic.scala 48:26]
    io.out[6].valid <= outValidReg[6] @[WatermanSystolic.scala 49:21]
    node _T_363 = sub(stepReg, asSInt(UInt<4>("h07"))) @[WatermanSystolic.scala 46:34]
    node _T_364 = tail(_T_363, 1) @[WatermanSystolic.scala 46:34]
    node _T_365 = asSInt(_T_364) @[WatermanSystolic.scala 46:34]
    node _T_366 = lt(_T_365, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_367 = sub(asSInt(UInt<1>("h00")), _T_365) @[WatermanSystolic.scala 46:41]
    node _T_368 = tail(_T_367, 1) @[WatermanSystolic.scala 46:41]
    node _T_369 = asSInt(_T_368) @[WatermanSystolic.scala 46:41]
    node _T_370 = mux(_T_366, _T_369, _T_365) @[WatermanSystolic.scala 46:41]
    node _T_371 = asUInt(_T_370) @[WatermanSystolic.scala 46:45]
    io.out[7].bits.x <= _T_371 @[WatermanSystolic.scala 46:22]
    io.out[7].bits.y <= UInt<3>("h07") @[WatermanSystolic.scala 47:22]
    io.out[7].bits.score <= resReg[7] @[WatermanSystolic.scala 48:26]
    io.out[7].valid <= outValidReg[7] @[WatermanSystolic.scala 49:21]
    node _T_372 = sub(stepReg, asSInt(UInt<5>("h08"))) @[WatermanSystolic.scala 46:34]
    node _T_373 = tail(_T_372, 1) @[WatermanSystolic.scala 46:34]
    node _T_374 = asSInt(_T_373) @[WatermanSystolic.scala 46:34]
    node _T_375 = lt(_T_374, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_376 = sub(asSInt(UInt<1>("h00")), _T_374) @[WatermanSystolic.scala 46:41]
    node _T_377 = tail(_T_376, 1) @[WatermanSystolic.scala 46:41]
    node _T_378 = asSInt(_T_377) @[WatermanSystolic.scala 46:41]
    node _T_379 = mux(_T_375, _T_378, _T_374) @[WatermanSystolic.scala 46:41]
    node _T_380 = asUInt(_T_379) @[WatermanSystolic.scala 46:45]
    io.out[8].bits.x <= _T_380 @[WatermanSystolic.scala 46:22]
    io.out[8].bits.y <= UInt<4>("h08") @[WatermanSystolic.scala 47:22]
    io.out[8].bits.score <= resReg[8] @[WatermanSystolic.scala 48:26]
    io.out[8].valid <= outValidReg[8] @[WatermanSystolic.scala 49:21]
    node _T_381 = sub(stepReg, asSInt(UInt<5>("h09"))) @[WatermanSystolic.scala 46:34]
    node _T_382 = tail(_T_381, 1) @[WatermanSystolic.scala 46:34]
    node _T_383 = asSInt(_T_382) @[WatermanSystolic.scala 46:34]
    node _T_384 = lt(_T_383, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_385 = sub(asSInt(UInt<1>("h00")), _T_383) @[WatermanSystolic.scala 46:41]
    node _T_386 = tail(_T_385, 1) @[WatermanSystolic.scala 46:41]
    node _T_387 = asSInt(_T_386) @[WatermanSystolic.scala 46:41]
    node _T_388 = mux(_T_384, _T_387, _T_383) @[WatermanSystolic.scala 46:41]
    node _T_389 = asUInt(_T_388) @[WatermanSystolic.scala 46:45]
    io.out[9].bits.x <= _T_389 @[WatermanSystolic.scala 46:22]
    io.out[9].bits.y <= UInt<4>("h09") @[WatermanSystolic.scala 47:22]
    io.out[9].bits.score <= resReg[9] @[WatermanSystolic.scala 48:26]
    io.out[9].valid <= outValidReg[9] @[WatermanSystolic.scala 49:21]
    node _T_390 = sub(stepReg, asSInt(UInt<5>("h0a"))) @[WatermanSystolic.scala 46:34]
    node _T_391 = tail(_T_390, 1) @[WatermanSystolic.scala 46:34]
    node _T_392 = asSInt(_T_391) @[WatermanSystolic.scala 46:34]
    node _T_393 = lt(_T_392, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_394 = sub(asSInt(UInt<1>("h00")), _T_392) @[WatermanSystolic.scala 46:41]
    node _T_395 = tail(_T_394, 1) @[WatermanSystolic.scala 46:41]
    node _T_396 = asSInt(_T_395) @[WatermanSystolic.scala 46:41]
    node _T_397 = mux(_T_393, _T_396, _T_392) @[WatermanSystolic.scala 46:41]
    node _T_398 = asUInt(_T_397) @[WatermanSystolic.scala 46:45]
    io.out[10].bits.x <= _T_398 @[WatermanSystolic.scala 46:22]
    io.out[10].bits.y <= UInt<4>("h0a") @[WatermanSystolic.scala 47:22]
    io.out[10].bits.score <= resReg[10] @[WatermanSystolic.scala 48:26]
    io.out[10].valid <= outValidReg[10] @[WatermanSystolic.scala 49:21]
    node _T_399 = sub(stepReg, asSInt(UInt<5>("h0b"))) @[WatermanSystolic.scala 46:34]
    node _T_400 = tail(_T_399, 1) @[WatermanSystolic.scala 46:34]
    node _T_401 = asSInt(_T_400) @[WatermanSystolic.scala 46:34]
    node _T_402 = lt(_T_401, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_403 = sub(asSInt(UInt<1>("h00")), _T_401) @[WatermanSystolic.scala 46:41]
    node _T_404 = tail(_T_403, 1) @[WatermanSystolic.scala 46:41]
    node _T_405 = asSInt(_T_404) @[WatermanSystolic.scala 46:41]
    node _T_406 = mux(_T_402, _T_405, _T_401) @[WatermanSystolic.scala 46:41]
    node _T_407 = asUInt(_T_406) @[WatermanSystolic.scala 46:45]
    io.out[11].bits.x <= _T_407 @[WatermanSystolic.scala 46:22]
    io.out[11].bits.y <= UInt<4>("h0b") @[WatermanSystolic.scala 47:22]
    io.out[11].bits.score <= resReg[11] @[WatermanSystolic.scala 48:26]
    io.out[11].valid <= outValidReg[11] @[WatermanSystolic.scala 49:21]
    node _T_408 = sub(stepReg, asSInt(UInt<5>("h0c"))) @[WatermanSystolic.scala 46:34]
    node _T_409 = tail(_T_408, 1) @[WatermanSystolic.scala 46:34]
    node _T_410 = asSInt(_T_409) @[WatermanSystolic.scala 46:34]
    node _T_411 = lt(_T_410, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_412 = sub(asSInt(UInt<1>("h00")), _T_410) @[WatermanSystolic.scala 46:41]
    node _T_413 = tail(_T_412, 1) @[WatermanSystolic.scala 46:41]
    node _T_414 = asSInt(_T_413) @[WatermanSystolic.scala 46:41]
    node _T_415 = mux(_T_411, _T_414, _T_410) @[WatermanSystolic.scala 46:41]
    node _T_416 = asUInt(_T_415) @[WatermanSystolic.scala 46:45]
    io.out[12].bits.x <= _T_416 @[WatermanSystolic.scala 46:22]
    io.out[12].bits.y <= UInt<4>("h0c") @[WatermanSystolic.scala 47:22]
    io.out[12].bits.score <= resReg[12] @[WatermanSystolic.scala 48:26]
    io.out[12].valid <= outValidReg[12] @[WatermanSystolic.scala 49:21]
    node _T_417 = sub(stepReg, asSInt(UInt<5>("h0d"))) @[WatermanSystolic.scala 46:34]
    node _T_418 = tail(_T_417, 1) @[WatermanSystolic.scala 46:34]
    node _T_419 = asSInt(_T_418) @[WatermanSystolic.scala 46:34]
    node _T_420 = lt(_T_419, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_421 = sub(asSInt(UInt<1>("h00")), _T_419) @[WatermanSystolic.scala 46:41]
    node _T_422 = tail(_T_421, 1) @[WatermanSystolic.scala 46:41]
    node _T_423 = asSInt(_T_422) @[WatermanSystolic.scala 46:41]
    node _T_424 = mux(_T_420, _T_423, _T_419) @[WatermanSystolic.scala 46:41]
    node _T_425 = asUInt(_T_424) @[WatermanSystolic.scala 46:45]
    io.out[13].bits.x <= _T_425 @[WatermanSystolic.scala 46:22]
    io.out[13].bits.y <= UInt<4>("h0d") @[WatermanSystolic.scala 47:22]
    io.out[13].bits.score <= resReg[13] @[WatermanSystolic.scala 48:26]
    io.out[13].valid <= outValidReg[13] @[WatermanSystolic.scala 49:21]
    node _T_426 = sub(stepReg, asSInt(UInt<5>("h0e"))) @[WatermanSystolic.scala 46:34]
    node _T_427 = tail(_T_426, 1) @[WatermanSystolic.scala 46:34]
    node _T_428 = asSInt(_T_427) @[WatermanSystolic.scala 46:34]
    node _T_429 = lt(_T_428, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 46:41]
    node _T_430 = sub(asSInt(UInt<1>("h00")), _T_428) @[WatermanSystolic.scala 46:41]
    node _T_431 = tail(_T_430, 1) @[WatermanSystolic.scala 46:41]
    node _T_432 = asSInt(_T_431) @[WatermanSystolic.scala 46:41]
    node _T_433 = mux(_T_429, _T_432, _T_428) @[WatermanSystolic.scala 46:41]
    node _T_434 = asUInt(_T_433) @[WatermanSystolic.scala 46:45]
    io.out[14].bits.x <= _T_434 @[WatermanSystolic.scala 46:22]
    io.out[14].bits.y <= UInt<4>("h0e") @[WatermanSystolic.scala 47:22]
    io.out[14].bits.score <= resReg[14] @[WatermanSystolic.scala 48:26]
    io.out[14].valid <= outValidReg[14] @[WatermanSystolic.scala 49:21]
    node _T_435 = eq(stateReg, UInt<2>("h00")) @[WatermanSystolic.scala 51:27]
    io.in.ready <= _T_435 @[WatermanSystolic.scala 51:15]
    node _T_436 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_436 : @[Conditional.scala 40:58]
      when io.in.valid : @[WatermanSystolic.scala 55:25]
        SReg[0] <= io.in.bits.S[0] @[WatermanSystolic.scala 57:19]
        columnsReg[0] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[1] <= io.in.bits.S[1] @[WatermanSystolic.scala 57:19]
        columnsReg[1] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[2] <= io.in.bits.S[2] @[WatermanSystolic.scala 57:19]
        columnsReg[2] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[3] <= io.in.bits.S[3] @[WatermanSystolic.scala 57:19]
        columnsReg[3] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[4] <= io.in.bits.S[4] @[WatermanSystolic.scala 57:19]
        columnsReg[4] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[5] <= io.in.bits.S[5] @[WatermanSystolic.scala 57:19]
        columnsReg[5] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[6] <= io.in.bits.S[6] @[WatermanSystolic.scala 57:19]
        columnsReg[6] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[7] <= io.in.bits.S[7] @[WatermanSystolic.scala 57:19]
        columnsReg[7] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[8] <= io.in.bits.S[8] @[WatermanSystolic.scala 57:19]
        columnsReg[8] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[9] <= io.in.bits.S[9] @[WatermanSystolic.scala 57:19]
        columnsReg[9] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[10] <= io.in.bits.S[10] @[WatermanSystolic.scala 57:19]
        columnsReg[10] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[11] <= io.in.bits.S[11] @[WatermanSystolic.scala 57:19]
        columnsReg[11] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[12] <= io.in.bits.S[12] @[WatermanSystolic.scala 57:19]
        columnsReg[12] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[13] <= io.in.bits.S[13] @[WatermanSystolic.scala 57:19]
        columnsReg[13] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[14] <= io.in.bits.S[14] @[WatermanSystolic.scala 57:19]
        columnsReg[14] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[15] <= io.in.bits.S[15] @[WatermanSystolic.scala 57:19]
        columnsReg[15] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[16] <= io.in.bits.S[16] @[WatermanSystolic.scala 57:19]
        columnsReg[16] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[17] <= io.in.bits.S[17] @[WatermanSystolic.scala 57:19]
        columnsReg[17] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[18] <= io.in.bits.S[18] @[WatermanSystolic.scala 57:19]
        columnsReg[18] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[19] <= io.in.bits.S[19] @[WatermanSystolic.scala 57:19]
        columnsReg[19] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        SReg[20] <= io.in.bits.S[20] @[WatermanSystolic.scala 57:19]
        columnsReg[20] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 58:25]
        TReg[0] <= io.in.bits.T[0] @[WatermanSystolic.scala 61:19]
        rowsReg[0] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[0] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[0] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[1] <= io.in.bits.T[1] @[WatermanSystolic.scala 61:19]
        rowsReg[1] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[1] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[1] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[2] <= io.in.bits.T[2] @[WatermanSystolic.scala 61:19]
        rowsReg[2] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[2] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[2] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[3] <= io.in.bits.T[3] @[WatermanSystolic.scala 61:19]
        rowsReg[3] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[3] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[3] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[4] <= io.in.bits.T[4] @[WatermanSystolic.scala 61:19]
        rowsReg[4] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[4] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[4] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[5] <= io.in.bits.T[5] @[WatermanSystolic.scala 61:19]
        rowsReg[5] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[5] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[5] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[6] <= io.in.bits.T[6] @[WatermanSystolic.scala 61:19]
        rowsReg[6] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[6] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[6] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[7] <= io.in.bits.T[7] @[WatermanSystolic.scala 61:19]
        rowsReg[7] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[7] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[7] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[8] <= io.in.bits.T[8] @[WatermanSystolic.scala 61:19]
        rowsReg[8] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[8] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[8] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[9] <= io.in.bits.T[9] @[WatermanSystolic.scala 61:19]
        rowsReg[9] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[9] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[9] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[10] <= io.in.bits.T[10] @[WatermanSystolic.scala 61:19]
        rowsReg[10] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[10] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[10] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[11] <= io.in.bits.T[11] @[WatermanSystolic.scala 61:19]
        rowsReg[11] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[11] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[11] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[12] <= io.in.bits.T[12] @[WatermanSystolic.scala 61:19]
        rowsReg[12] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[12] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[12] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[13] <= io.in.bits.T[13] @[WatermanSystolic.scala 61:19]
        rowsReg[13] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[13] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[13] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        TReg[14] <= io.in.bits.T[14] @[WatermanSystolic.scala 61:19]
        rowsReg[14] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 62:22]
        diagReg[14] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 63:22]
        intermDiagReg[14] <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 64:28]
        stepReg <= asSInt(UInt<1>("h00")) @[WatermanSystolic.scala 66:17]
        stateReg <= UInt<2>("h01") @[WatermanSystolic.scala 67:18]
        skip @[WatermanSystolic.scala 55:25]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_437 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_437 : @[Conditional.scala 39:67]
        node _T_438 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_439 = tail(_T_438, 1) @[WatermanSystolic.scala 72:31]
        node _T_440 = asSInt(_T_439) @[WatermanSystolic.scala 72:31]
        node _T_441 = add(_T_440, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_442 = tail(_T_441, 1) @[WatermanSystolic.scala 72:49]
        node _T_443 = asSInt(_T_442) @[WatermanSystolic.scala 72:49]
        node _T_444 = geq(asSInt(UInt<1>("h00")), _T_443) @[WatermanSystolic.scala 72:19]
        node _T_445 = leq(asSInt(UInt<1>("h00")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_446 = and(_T_444, _T_445) @[WatermanSystolic.scala 72:57]
        when _T_446 : @[WatermanSystolic.scala 72:78]
          resReg[0] <= PEs[0].out @[WatermanSystolic.scala 73:21]
          outValidReg[0] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_447 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_448 = tail(_T_447, 1) @[WatermanSystolic.scala 72:31]
        node _T_449 = asSInt(_T_448) @[WatermanSystolic.scala 72:31]
        node _T_450 = add(_T_449, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_451 = tail(_T_450, 1) @[WatermanSystolic.scala 72:49]
        node _T_452 = asSInt(_T_451) @[WatermanSystolic.scala 72:49]
        node _T_453 = geq(asSInt(UInt<2>("h01")), _T_452) @[WatermanSystolic.scala 72:19]
        node _T_454 = leq(asSInt(UInt<2>("h01")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_455 = and(_T_453, _T_454) @[WatermanSystolic.scala 72:57]
        when _T_455 : @[WatermanSystolic.scala 72:78]
          resReg[1] <= PEs[1].out @[WatermanSystolic.scala 73:21]
          outValidReg[1] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_456 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_457 = tail(_T_456, 1) @[WatermanSystolic.scala 72:31]
        node _T_458 = asSInt(_T_457) @[WatermanSystolic.scala 72:31]
        node _T_459 = add(_T_458, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_460 = tail(_T_459, 1) @[WatermanSystolic.scala 72:49]
        node _T_461 = asSInt(_T_460) @[WatermanSystolic.scala 72:49]
        node _T_462 = geq(asSInt(UInt<3>("h02")), _T_461) @[WatermanSystolic.scala 72:19]
        node _T_463 = leq(asSInt(UInt<3>("h02")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_464 = and(_T_462, _T_463) @[WatermanSystolic.scala 72:57]
        when _T_464 : @[WatermanSystolic.scala 72:78]
          resReg[2] <= PEs[2].out @[WatermanSystolic.scala 73:21]
          outValidReg[2] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_465 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_466 = tail(_T_465, 1) @[WatermanSystolic.scala 72:31]
        node _T_467 = asSInt(_T_466) @[WatermanSystolic.scala 72:31]
        node _T_468 = add(_T_467, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_469 = tail(_T_468, 1) @[WatermanSystolic.scala 72:49]
        node _T_470 = asSInt(_T_469) @[WatermanSystolic.scala 72:49]
        node _T_471 = geq(asSInt(UInt<3>("h03")), _T_470) @[WatermanSystolic.scala 72:19]
        node _T_472 = leq(asSInt(UInt<3>("h03")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_473 = and(_T_471, _T_472) @[WatermanSystolic.scala 72:57]
        when _T_473 : @[WatermanSystolic.scala 72:78]
          resReg[3] <= PEs[3].out @[WatermanSystolic.scala 73:21]
          outValidReg[3] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_474 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_475 = tail(_T_474, 1) @[WatermanSystolic.scala 72:31]
        node _T_476 = asSInt(_T_475) @[WatermanSystolic.scala 72:31]
        node _T_477 = add(_T_476, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_478 = tail(_T_477, 1) @[WatermanSystolic.scala 72:49]
        node _T_479 = asSInt(_T_478) @[WatermanSystolic.scala 72:49]
        node _T_480 = geq(asSInt(UInt<4>("h04")), _T_479) @[WatermanSystolic.scala 72:19]
        node _T_481 = leq(asSInt(UInt<4>("h04")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_482 = and(_T_480, _T_481) @[WatermanSystolic.scala 72:57]
        when _T_482 : @[WatermanSystolic.scala 72:78]
          resReg[4] <= PEs[4].out @[WatermanSystolic.scala 73:21]
          outValidReg[4] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_483 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_484 = tail(_T_483, 1) @[WatermanSystolic.scala 72:31]
        node _T_485 = asSInt(_T_484) @[WatermanSystolic.scala 72:31]
        node _T_486 = add(_T_485, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_487 = tail(_T_486, 1) @[WatermanSystolic.scala 72:49]
        node _T_488 = asSInt(_T_487) @[WatermanSystolic.scala 72:49]
        node _T_489 = geq(asSInt(UInt<4>("h05")), _T_488) @[WatermanSystolic.scala 72:19]
        node _T_490 = leq(asSInt(UInt<4>("h05")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_491 = and(_T_489, _T_490) @[WatermanSystolic.scala 72:57]
        when _T_491 : @[WatermanSystolic.scala 72:78]
          resReg[5] <= PEs[5].out @[WatermanSystolic.scala 73:21]
          outValidReg[5] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_492 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_493 = tail(_T_492, 1) @[WatermanSystolic.scala 72:31]
        node _T_494 = asSInt(_T_493) @[WatermanSystolic.scala 72:31]
        node _T_495 = add(_T_494, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_496 = tail(_T_495, 1) @[WatermanSystolic.scala 72:49]
        node _T_497 = asSInt(_T_496) @[WatermanSystolic.scala 72:49]
        node _T_498 = geq(asSInt(UInt<4>("h06")), _T_497) @[WatermanSystolic.scala 72:19]
        node _T_499 = leq(asSInt(UInt<4>("h06")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_500 = and(_T_498, _T_499) @[WatermanSystolic.scala 72:57]
        when _T_500 : @[WatermanSystolic.scala 72:78]
          resReg[6] <= PEs[6].out @[WatermanSystolic.scala 73:21]
          outValidReg[6] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_501 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_502 = tail(_T_501, 1) @[WatermanSystolic.scala 72:31]
        node _T_503 = asSInt(_T_502) @[WatermanSystolic.scala 72:31]
        node _T_504 = add(_T_503, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_505 = tail(_T_504, 1) @[WatermanSystolic.scala 72:49]
        node _T_506 = asSInt(_T_505) @[WatermanSystolic.scala 72:49]
        node _T_507 = geq(asSInt(UInt<4>("h07")), _T_506) @[WatermanSystolic.scala 72:19]
        node _T_508 = leq(asSInt(UInt<4>("h07")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_509 = and(_T_507, _T_508) @[WatermanSystolic.scala 72:57]
        when _T_509 : @[WatermanSystolic.scala 72:78]
          resReg[7] <= PEs[7].out @[WatermanSystolic.scala 73:21]
          outValidReg[7] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_510 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_511 = tail(_T_510, 1) @[WatermanSystolic.scala 72:31]
        node _T_512 = asSInt(_T_511) @[WatermanSystolic.scala 72:31]
        node _T_513 = add(_T_512, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_514 = tail(_T_513, 1) @[WatermanSystolic.scala 72:49]
        node _T_515 = asSInt(_T_514) @[WatermanSystolic.scala 72:49]
        node _T_516 = geq(asSInt(UInt<5>("h08")), _T_515) @[WatermanSystolic.scala 72:19]
        node _T_517 = leq(asSInt(UInt<5>("h08")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_518 = and(_T_516, _T_517) @[WatermanSystolic.scala 72:57]
        when _T_518 : @[WatermanSystolic.scala 72:78]
          resReg[8] <= PEs[8].out @[WatermanSystolic.scala 73:21]
          outValidReg[8] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_519 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_520 = tail(_T_519, 1) @[WatermanSystolic.scala 72:31]
        node _T_521 = asSInt(_T_520) @[WatermanSystolic.scala 72:31]
        node _T_522 = add(_T_521, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_523 = tail(_T_522, 1) @[WatermanSystolic.scala 72:49]
        node _T_524 = asSInt(_T_523) @[WatermanSystolic.scala 72:49]
        node _T_525 = geq(asSInt(UInt<5>("h09")), _T_524) @[WatermanSystolic.scala 72:19]
        node _T_526 = leq(asSInt(UInt<5>("h09")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_527 = and(_T_525, _T_526) @[WatermanSystolic.scala 72:57]
        when _T_527 : @[WatermanSystolic.scala 72:78]
          resReg[9] <= PEs[9].out @[WatermanSystolic.scala 73:21]
          outValidReg[9] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_528 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_529 = tail(_T_528, 1) @[WatermanSystolic.scala 72:31]
        node _T_530 = asSInt(_T_529) @[WatermanSystolic.scala 72:31]
        node _T_531 = add(_T_530, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_532 = tail(_T_531, 1) @[WatermanSystolic.scala 72:49]
        node _T_533 = asSInt(_T_532) @[WatermanSystolic.scala 72:49]
        node _T_534 = geq(asSInt(UInt<5>("h0a")), _T_533) @[WatermanSystolic.scala 72:19]
        node _T_535 = leq(asSInt(UInt<5>("h0a")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_536 = and(_T_534, _T_535) @[WatermanSystolic.scala 72:57]
        when _T_536 : @[WatermanSystolic.scala 72:78]
          resReg[10] <= PEs[10].out @[WatermanSystolic.scala 73:21]
          outValidReg[10] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_537 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_538 = tail(_T_537, 1) @[WatermanSystolic.scala 72:31]
        node _T_539 = asSInt(_T_538) @[WatermanSystolic.scala 72:31]
        node _T_540 = add(_T_539, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_541 = tail(_T_540, 1) @[WatermanSystolic.scala 72:49]
        node _T_542 = asSInt(_T_541) @[WatermanSystolic.scala 72:49]
        node _T_543 = geq(asSInt(UInt<5>("h0b")), _T_542) @[WatermanSystolic.scala 72:19]
        node _T_544 = leq(asSInt(UInt<5>("h0b")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_545 = and(_T_543, _T_544) @[WatermanSystolic.scala 72:57]
        when _T_545 : @[WatermanSystolic.scala 72:78]
          resReg[11] <= PEs[11].out @[WatermanSystolic.scala 73:21]
          outValidReg[11] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_546 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_547 = tail(_T_546, 1) @[WatermanSystolic.scala 72:31]
        node _T_548 = asSInt(_T_547) @[WatermanSystolic.scala 72:31]
        node _T_549 = add(_T_548, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_550 = tail(_T_549, 1) @[WatermanSystolic.scala 72:49]
        node _T_551 = asSInt(_T_550) @[WatermanSystolic.scala 72:49]
        node _T_552 = geq(asSInt(UInt<5>("h0c")), _T_551) @[WatermanSystolic.scala 72:19]
        node _T_553 = leq(asSInt(UInt<5>("h0c")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_554 = and(_T_552, _T_553) @[WatermanSystolic.scala 72:57]
        when _T_554 : @[WatermanSystolic.scala 72:78]
          resReg[12] <= PEs[12].out @[WatermanSystolic.scala 73:21]
          outValidReg[12] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_555 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_556 = tail(_T_555, 1) @[WatermanSystolic.scala 72:31]
        node _T_557 = asSInt(_T_556) @[WatermanSystolic.scala 72:31]
        node _T_558 = add(_T_557, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_559 = tail(_T_558, 1) @[WatermanSystolic.scala 72:49]
        node _T_560 = asSInt(_T_559) @[WatermanSystolic.scala 72:49]
        node _T_561 = geq(asSInt(UInt<5>("h0d")), _T_560) @[WatermanSystolic.scala 72:19]
        node _T_562 = leq(asSInt(UInt<5>("h0d")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_563 = and(_T_561, _T_562) @[WatermanSystolic.scala 72:57]
        when _T_563 : @[WatermanSystolic.scala 72:78]
          resReg[13] <= PEs[13].out @[WatermanSystolic.scala 73:21]
          outValidReg[13] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        node _T_564 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 72:31]
        node _T_565 = tail(_T_564, 1) @[WatermanSystolic.scala 72:31]
        node _T_566 = asSInt(_T_565) @[WatermanSystolic.scala 72:31]
        node _T_567 = add(_T_566, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 72:49]
        node _T_568 = tail(_T_567, 1) @[WatermanSystolic.scala 72:49]
        node _T_569 = asSInt(_T_568) @[WatermanSystolic.scala 72:49]
        node _T_570 = geq(asSInt(UInt<5>("h0e")), _T_569) @[WatermanSystolic.scala 72:19]
        node _T_571 = leq(asSInt(UInt<5>("h0e")), stepReg) @[WatermanSystolic.scala 72:65]
        node _T_572 = and(_T_570, _T_571) @[WatermanSystolic.scala 72:57]
        when _T_572 : @[WatermanSystolic.scala 72:78]
          resReg[14] <= PEs[14].out @[WatermanSystolic.scala 73:21]
          outValidReg[14] <= UInt<1>("h01") @[WatermanSystolic.scala 74:26]
          skip @[WatermanSystolic.scala 72:78]
        stateReg <= UInt<2>("h02") @[WatermanSystolic.scala 77:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_573 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_573 : @[Conditional.scala 39:67]
          when leftForOutput.io.out : @[WatermanSystolic.scala 80:34]
            node _T_574 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_575 = tail(_T_574, 1) @[WatermanSystolic.scala 82:33]
            node _T_576 = asSInt(_T_575) @[WatermanSystolic.scala 82:33]
            node _T_577 = add(_T_576, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_578 = tail(_T_577, 1) @[WatermanSystolic.scala 82:51]
            node _T_579 = asSInt(_T_578) @[WatermanSystolic.scala 82:51]
            node _T_580 = geq(asSInt(UInt<1>("h00")), _T_579) @[WatermanSystolic.scala 82:21]
            node _T_581 = leq(asSInt(UInt<1>("h00")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_582 = and(_T_580, _T_581) @[WatermanSystolic.scala 82:59]
            when _T_582 : @[WatermanSystolic.scala 82:80]
              when io.out[0].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[0] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_583 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_584 = tail(_T_583, 1) @[WatermanSystolic.scala 82:33]
            node _T_585 = asSInt(_T_584) @[WatermanSystolic.scala 82:33]
            node _T_586 = add(_T_585, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_587 = tail(_T_586, 1) @[WatermanSystolic.scala 82:51]
            node _T_588 = asSInt(_T_587) @[WatermanSystolic.scala 82:51]
            node _T_589 = geq(asSInt(UInt<2>("h01")), _T_588) @[WatermanSystolic.scala 82:21]
            node _T_590 = leq(asSInt(UInt<2>("h01")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_591 = and(_T_589, _T_590) @[WatermanSystolic.scala 82:59]
            when _T_591 : @[WatermanSystolic.scala 82:80]
              when io.out[1].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[1] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_592 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_593 = tail(_T_592, 1) @[WatermanSystolic.scala 82:33]
            node _T_594 = asSInt(_T_593) @[WatermanSystolic.scala 82:33]
            node _T_595 = add(_T_594, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_596 = tail(_T_595, 1) @[WatermanSystolic.scala 82:51]
            node _T_597 = asSInt(_T_596) @[WatermanSystolic.scala 82:51]
            node _T_598 = geq(asSInt(UInt<3>("h02")), _T_597) @[WatermanSystolic.scala 82:21]
            node _T_599 = leq(asSInt(UInt<3>("h02")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_600 = and(_T_598, _T_599) @[WatermanSystolic.scala 82:59]
            when _T_600 : @[WatermanSystolic.scala 82:80]
              when io.out[2].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[2] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_601 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_602 = tail(_T_601, 1) @[WatermanSystolic.scala 82:33]
            node _T_603 = asSInt(_T_602) @[WatermanSystolic.scala 82:33]
            node _T_604 = add(_T_603, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_605 = tail(_T_604, 1) @[WatermanSystolic.scala 82:51]
            node _T_606 = asSInt(_T_605) @[WatermanSystolic.scala 82:51]
            node _T_607 = geq(asSInt(UInt<3>("h03")), _T_606) @[WatermanSystolic.scala 82:21]
            node _T_608 = leq(asSInt(UInt<3>("h03")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_609 = and(_T_607, _T_608) @[WatermanSystolic.scala 82:59]
            when _T_609 : @[WatermanSystolic.scala 82:80]
              when io.out[3].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[3] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_610 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_611 = tail(_T_610, 1) @[WatermanSystolic.scala 82:33]
            node _T_612 = asSInt(_T_611) @[WatermanSystolic.scala 82:33]
            node _T_613 = add(_T_612, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_614 = tail(_T_613, 1) @[WatermanSystolic.scala 82:51]
            node _T_615 = asSInt(_T_614) @[WatermanSystolic.scala 82:51]
            node _T_616 = geq(asSInt(UInt<4>("h04")), _T_615) @[WatermanSystolic.scala 82:21]
            node _T_617 = leq(asSInt(UInt<4>("h04")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_618 = and(_T_616, _T_617) @[WatermanSystolic.scala 82:59]
            when _T_618 : @[WatermanSystolic.scala 82:80]
              when io.out[4].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[4] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_619 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_620 = tail(_T_619, 1) @[WatermanSystolic.scala 82:33]
            node _T_621 = asSInt(_T_620) @[WatermanSystolic.scala 82:33]
            node _T_622 = add(_T_621, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_623 = tail(_T_622, 1) @[WatermanSystolic.scala 82:51]
            node _T_624 = asSInt(_T_623) @[WatermanSystolic.scala 82:51]
            node _T_625 = geq(asSInt(UInt<4>("h05")), _T_624) @[WatermanSystolic.scala 82:21]
            node _T_626 = leq(asSInt(UInt<4>("h05")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_627 = and(_T_625, _T_626) @[WatermanSystolic.scala 82:59]
            when _T_627 : @[WatermanSystolic.scala 82:80]
              when io.out[5].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[5] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_628 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_629 = tail(_T_628, 1) @[WatermanSystolic.scala 82:33]
            node _T_630 = asSInt(_T_629) @[WatermanSystolic.scala 82:33]
            node _T_631 = add(_T_630, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_632 = tail(_T_631, 1) @[WatermanSystolic.scala 82:51]
            node _T_633 = asSInt(_T_632) @[WatermanSystolic.scala 82:51]
            node _T_634 = geq(asSInt(UInt<4>("h06")), _T_633) @[WatermanSystolic.scala 82:21]
            node _T_635 = leq(asSInt(UInt<4>("h06")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_636 = and(_T_634, _T_635) @[WatermanSystolic.scala 82:59]
            when _T_636 : @[WatermanSystolic.scala 82:80]
              when io.out[6].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[6] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_637 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_638 = tail(_T_637, 1) @[WatermanSystolic.scala 82:33]
            node _T_639 = asSInt(_T_638) @[WatermanSystolic.scala 82:33]
            node _T_640 = add(_T_639, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_641 = tail(_T_640, 1) @[WatermanSystolic.scala 82:51]
            node _T_642 = asSInt(_T_641) @[WatermanSystolic.scala 82:51]
            node _T_643 = geq(asSInt(UInt<4>("h07")), _T_642) @[WatermanSystolic.scala 82:21]
            node _T_644 = leq(asSInt(UInt<4>("h07")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_645 = and(_T_643, _T_644) @[WatermanSystolic.scala 82:59]
            when _T_645 : @[WatermanSystolic.scala 82:80]
              when io.out[7].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[7] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_646 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_647 = tail(_T_646, 1) @[WatermanSystolic.scala 82:33]
            node _T_648 = asSInt(_T_647) @[WatermanSystolic.scala 82:33]
            node _T_649 = add(_T_648, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_650 = tail(_T_649, 1) @[WatermanSystolic.scala 82:51]
            node _T_651 = asSInt(_T_650) @[WatermanSystolic.scala 82:51]
            node _T_652 = geq(asSInt(UInt<5>("h08")), _T_651) @[WatermanSystolic.scala 82:21]
            node _T_653 = leq(asSInt(UInt<5>("h08")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_654 = and(_T_652, _T_653) @[WatermanSystolic.scala 82:59]
            when _T_654 : @[WatermanSystolic.scala 82:80]
              when io.out[8].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[8] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_655 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_656 = tail(_T_655, 1) @[WatermanSystolic.scala 82:33]
            node _T_657 = asSInt(_T_656) @[WatermanSystolic.scala 82:33]
            node _T_658 = add(_T_657, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_659 = tail(_T_658, 1) @[WatermanSystolic.scala 82:51]
            node _T_660 = asSInt(_T_659) @[WatermanSystolic.scala 82:51]
            node _T_661 = geq(asSInt(UInt<5>("h09")), _T_660) @[WatermanSystolic.scala 82:21]
            node _T_662 = leq(asSInt(UInt<5>("h09")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_663 = and(_T_661, _T_662) @[WatermanSystolic.scala 82:59]
            when _T_663 : @[WatermanSystolic.scala 82:80]
              when io.out[9].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[9] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_664 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_665 = tail(_T_664, 1) @[WatermanSystolic.scala 82:33]
            node _T_666 = asSInt(_T_665) @[WatermanSystolic.scala 82:33]
            node _T_667 = add(_T_666, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_668 = tail(_T_667, 1) @[WatermanSystolic.scala 82:51]
            node _T_669 = asSInt(_T_668) @[WatermanSystolic.scala 82:51]
            node _T_670 = geq(asSInt(UInt<5>("h0a")), _T_669) @[WatermanSystolic.scala 82:21]
            node _T_671 = leq(asSInt(UInt<5>("h0a")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_672 = and(_T_670, _T_671) @[WatermanSystolic.scala 82:59]
            when _T_672 : @[WatermanSystolic.scala 82:80]
              when io.out[10].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[10] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_673 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_674 = tail(_T_673, 1) @[WatermanSystolic.scala 82:33]
            node _T_675 = asSInt(_T_674) @[WatermanSystolic.scala 82:33]
            node _T_676 = add(_T_675, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_677 = tail(_T_676, 1) @[WatermanSystolic.scala 82:51]
            node _T_678 = asSInt(_T_677) @[WatermanSystolic.scala 82:51]
            node _T_679 = geq(asSInt(UInt<5>("h0b")), _T_678) @[WatermanSystolic.scala 82:21]
            node _T_680 = leq(asSInt(UInt<5>("h0b")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_681 = and(_T_679, _T_680) @[WatermanSystolic.scala 82:59]
            when _T_681 : @[WatermanSystolic.scala 82:80]
              when io.out[11].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[11] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_682 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_683 = tail(_T_682, 1) @[WatermanSystolic.scala 82:33]
            node _T_684 = asSInt(_T_683) @[WatermanSystolic.scala 82:33]
            node _T_685 = add(_T_684, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_686 = tail(_T_685, 1) @[WatermanSystolic.scala 82:51]
            node _T_687 = asSInt(_T_686) @[WatermanSystolic.scala 82:51]
            node _T_688 = geq(asSInt(UInt<5>("h0c")), _T_687) @[WatermanSystolic.scala 82:21]
            node _T_689 = leq(asSInt(UInt<5>("h0c")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_690 = and(_T_688, _T_689) @[WatermanSystolic.scala 82:59]
            when _T_690 : @[WatermanSystolic.scala 82:80]
              when io.out[12].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[12] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_691 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_692 = tail(_T_691, 1) @[WatermanSystolic.scala 82:33]
            node _T_693 = asSInt(_T_692) @[WatermanSystolic.scala 82:33]
            node _T_694 = add(_T_693, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_695 = tail(_T_694, 1) @[WatermanSystolic.scala 82:51]
            node _T_696 = asSInt(_T_695) @[WatermanSystolic.scala 82:51]
            node _T_697 = geq(asSInt(UInt<5>("h0d")), _T_696) @[WatermanSystolic.scala 82:21]
            node _T_698 = leq(asSInt(UInt<5>("h0d")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_699 = and(_T_697, _T_698) @[WatermanSystolic.scala 82:59]
            when _T_699 : @[WatermanSystolic.scala 82:80]
              when io.out[13].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[13] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            node _T_700 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 82:33]
            node _T_701 = tail(_T_700, 1) @[WatermanSystolic.scala 82:33]
            node _T_702 = asSInt(_T_701) @[WatermanSystolic.scala 82:33]
            node _T_703 = add(_T_702, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 82:51]
            node _T_704 = tail(_T_703, 1) @[WatermanSystolic.scala 82:51]
            node _T_705 = asSInt(_T_704) @[WatermanSystolic.scala 82:51]
            node _T_706 = geq(asSInt(UInt<5>("h0e")), _T_705) @[WatermanSystolic.scala 82:21]
            node _T_707 = leq(asSInt(UInt<5>("h0e")), stepReg) @[WatermanSystolic.scala 82:67]
            node _T_708 = and(_T_706, _T_707) @[WatermanSystolic.scala 82:59]
            when _T_708 : @[WatermanSystolic.scala 82:80]
              when io.out[14].ready : @[WatermanSystolic.scala 83:35]
                outValidReg[14] <= UInt<1>("h00") @[WatermanSystolic.scala 84:30]
                skip @[WatermanSystolic.scala 83:35]
              skip @[WatermanSystolic.scala 82:80]
            skip @[WatermanSystolic.scala 80:34]
          else : @[WatermanSystolic.scala 88:20]
            stateReg <= UInt<2>("h03") @[WatermanSystolic.scala 89:18]
            skip @[WatermanSystolic.scala 88:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_709 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_709 : @[Conditional.scala 39:67]
            node _T_710 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_711 = tail(_T_710, 1) @[WatermanSystolic.scala 94:31]
            node _T_712 = asSInt(_T_711) @[WatermanSystolic.scala 94:31]
            node _T_713 = add(_T_712, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_714 = tail(_T_713, 1) @[WatermanSystolic.scala 94:49]
            node _T_715 = asSInt(_T_714) @[WatermanSystolic.scala 94:49]
            node _T_716 = geq(asSInt(UInt<1>("h00")), _T_715) @[WatermanSystolic.scala 94:19]
            node _T_717 = leq(asSInt(UInt<1>("h00")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_718 = and(_T_716, _T_717) @[WatermanSystolic.scala 94:57]
            when _T_718 : @[WatermanSystolic.scala 94:78]
              node _T_719 = sub(stepReg, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:31]
              node _T_720 = tail(_T_719, 1) @[WatermanSystolic.scala 95:31]
              node _T_721 = asSInt(_T_720) @[WatermanSystolic.scala 95:31]
              node _T_722 = lt(_T_721, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_723 = sub(asSInt(UInt<1>("h00")), _T_721) @[WatermanSystolic.scala 95:38]
              node _T_724 = tail(_T_723, 1) @[WatermanSystolic.scala 95:38]
              node _T_725 = asSInt(_T_724) @[WatermanSystolic.scala 95:38]
              node _T_726 = mux(_T_722, _T_725, _T_721) @[WatermanSystolic.scala 95:38]
              node _T_727 = asUInt(_T_726) @[WatermanSystolic.scala 95:42]
              node _T_728 = bits(_T_727, 4, 0)
              columnsReg[_T_728] <= resReg[0] @[WatermanSystolic.scala 95:50]
              rowsReg[0] <= resReg[0] @[WatermanSystolic.scala 96:22]
              diagReg[0] <= intermDiagReg[0] @[WatermanSystolic.scala 97:22]
              intermDiagReg[1] <= resReg[0] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_729 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_730 = tail(_T_729, 1) @[WatermanSystolic.scala 94:31]
            node _T_731 = asSInt(_T_730) @[WatermanSystolic.scala 94:31]
            node _T_732 = add(_T_731, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_733 = tail(_T_732, 1) @[WatermanSystolic.scala 94:49]
            node _T_734 = asSInt(_T_733) @[WatermanSystolic.scala 94:49]
            node _T_735 = geq(asSInt(UInt<2>("h01")), _T_734) @[WatermanSystolic.scala 94:19]
            node _T_736 = leq(asSInt(UInt<2>("h01")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_737 = and(_T_735, _T_736) @[WatermanSystolic.scala 94:57]
            when _T_737 : @[WatermanSystolic.scala 94:78]
              node _T_738 = sub(stepReg, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 95:31]
              node _T_739 = tail(_T_738, 1) @[WatermanSystolic.scala 95:31]
              node _T_740 = asSInt(_T_739) @[WatermanSystolic.scala 95:31]
              node _T_741 = lt(_T_740, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_742 = sub(asSInt(UInt<1>("h00")), _T_740) @[WatermanSystolic.scala 95:38]
              node _T_743 = tail(_T_742, 1) @[WatermanSystolic.scala 95:38]
              node _T_744 = asSInt(_T_743) @[WatermanSystolic.scala 95:38]
              node _T_745 = mux(_T_741, _T_744, _T_740) @[WatermanSystolic.scala 95:38]
              node _T_746 = asUInt(_T_745) @[WatermanSystolic.scala 95:42]
              node _T_747 = bits(_T_746, 4, 0)
              columnsReg[_T_747] <= resReg[1] @[WatermanSystolic.scala 95:50]
              rowsReg[1] <= resReg[1] @[WatermanSystolic.scala 96:22]
              diagReg[1] <= intermDiagReg[1] @[WatermanSystolic.scala 97:22]
              intermDiagReg[2] <= resReg[1] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_748 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_749 = tail(_T_748, 1) @[WatermanSystolic.scala 94:31]
            node _T_750 = asSInt(_T_749) @[WatermanSystolic.scala 94:31]
            node _T_751 = add(_T_750, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_752 = tail(_T_751, 1) @[WatermanSystolic.scala 94:49]
            node _T_753 = asSInt(_T_752) @[WatermanSystolic.scala 94:49]
            node _T_754 = geq(asSInt(UInt<3>("h02")), _T_753) @[WatermanSystolic.scala 94:19]
            node _T_755 = leq(asSInt(UInt<3>("h02")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_756 = and(_T_754, _T_755) @[WatermanSystolic.scala 94:57]
            when _T_756 : @[WatermanSystolic.scala 94:78]
              node _T_757 = sub(stepReg, asSInt(UInt<3>("h02"))) @[WatermanSystolic.scala 95:31]
              node _T_758 = tail(_T_757, 1) @[WatermanSystolic.scala 95:31]
              node _T_759 = asSInt(_T_758) @[WatermanSystolic.scala 95:31]
              node _T_760 = lt(_T_759, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_761 = sub(asSInt(UInt<1>("h00")), _T_759) @[WatermanSystolic.scala 95:38]
              node _T_762 = tail(_T_761, 1) @[WatermanSystolic.scala 95:38]
              node _T_763 = asSInt(_T_762) @[WatermanSystolic.scala 95:38]
              node _T_764 = mux(_T_760, _T_763, _T_759) @[WatermanSystolic.scala 95:38]
              node _T_765 = asUInt(_T_764) @[WatermanSystolic.scala 95:42]
              node _T_766 = bits(_T_765, 4, 0)
              columnsReg[_T_766] <= resReg[2] @[WatermanSystolic.scala 95:50]
              rowsReg[2] <= resReg[2] @[WatermanSystolic.scala 96:22]
              diagReg[2] <= intermDiagReg[2] @[WatermanSystolic.scala 97:22]
              intermDiagReg[3] <= resReg[2] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_767 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_768 = tail(_T_767, 1) @[WatermanSystolic.scala 94:31]
            node _T_769 = asSInt(_T_768) @[WatermanSystolic.scala 94:31]
            node _T_770 = add(_T_769, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_771 = tail(_T_770, 1) @[WatermanSystolic.scala 94:49]
            node _T_772 = asSInt(_T_771) @[WatermanSystolic.scala 94:49]
            node _T_773 = geq(asSInt(UInt<3>("h03")), _T_772) @[WatermanSystolic.scala 94:19]
            node _T_774 = leq(asSInt(UInt<3>("h03")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_775 = and(_T_773, _T_774) @[WatermanSystolic.scala 94:57]
            when _T_775 : @[WatermanSystolic.scala 94:78]
              node _T_776 = sub(stepReg, asSInt(UInt<3>("h03"))) @[WatermanSystolic.scala 95:31]
              node _T_777 = tail(_T_776, 1) @[WatermanSystolic.scala 95:31]
              node _T_778 = asSInt(_T_777) @[WatermanSystolic.scala 95:31]
              node _T_779 = lt(_T_778, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_780 = sub(asSInt(UInt<1>("h00")), _T_778) @[WatermanSystolic.scala 95:38]
              node _T_781 = tail(_T_780, 1) @[WatermanSystolic.scala 95:38]
              node _T_782 = asSInt(_T_781) @[WatermanSystolic.scala 95:38]
              node _T_783 = mux(_T_779, _T_782, _T_778) @[WatermanSystolic.scala 95:38]
              node _T_784 = asUInt(_T_783) @[WatermanSystolic.scala 95:42]
              node _T_785 = bits(_T_784, 4, 0)
              columnsReg[_T_785] <= resReg[3] @[WatermanSystolic.scala 95:50]
              rowsReg[3] <= resReg[3] @[WatermanSystolic.scala 96:22]
              diagReg[3] <= intermDiagReg[3] @[WatermanSystolic.scala 97:22]
              intermDiagReg[4] <= resReg[3] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_786 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_787 = tail(_T_786, 1) @[WatermanSystolic.scala 94:31]
            node _T_788 = asSInt(_T_787) @[WatermanSystolic.scala 94:31]
            node _T_789 = add(_T_788, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_790 = tail(_T_789, 1) @[WatermanSystolic.scala 94:49]
            node _T_791 = asSInt(_T_790) @[WatermanSystolic.scala 94:49]
            node _T_792 = geq(asSInt(UInt<4>("h04")), _T_791) @[WatermanSystolic.scala 94:19]
            node _T_793 = leq(asSInt(UInt<4>("h04")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_794 = and(_T_792, _T_793) @[WatermanSystolic.scala 94:57]
            when _T_794 : @[WatermanSystolic.scala 94:78]
              node _T_795 = sub(stepReg, asSInt(UInt<4>("h04"))) @[WatermanSystolic.scala 95:31]
              node _T_796 = tail(_T_795, 1) @[WatermanSystolic.scala 95:31]
              node _T_797 = asSInt(_T_796) @[WatermanSystolic.scala 95:31]
              node _T_798 = lt(_T_797, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_799 = sub(asSInt(UInt<1>("h00")), _T_797) @[WatermanSystolic.scala 95:38]
              node _T_800 = tail(_T_799, 1) @[WatermanSystolic.scala 95:38]
              node _T_801 = asSInt(_T_800) @[WatermanSystolic.scala 95:38]
              node _T_802 = mux(_T_798, _T_801, _T_797) @[WatermanSystolic.scala 95:38]
              node _T_803 = asUInt(_T_802) @[WatermanSystolic.scala 95:42]
              node _T_804 = bits(_T_803, 4, 0)
              columnsReg[_T_804] <= resReg[4] @[WatermanSystolic.scala 95:50]
              rowsReg[4] <= resReg[4] @[WatermanSystolic.scala 96:22]
              diagReg[4] <= intermDiagReg[4] @[WatermanSystolic.scala 97:22]
              intermDiagReg[5] <= resReg[4] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_805 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_806 = tail(_T_805, 1) @[WatermanSystolic.scala 94:31]
            node _T_807 = asSInt(_T_806) @[WatermanSystolic.scala 94:31]
            node _T_808 = add(_T_807, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_809 = tail(_T_808, 1) @[WatermanSystolic.scala 94:49]
            node _T_810 = asSInt(_T_809) @[WatermanSystolic.scala 94:49]
            node _T_811 = geq(asSInt(UInt<4>("h05")), _T_810) @[WatermanSystolic.scala 94:19]
            node _T_812 = leq(asSInt(UInt<4>("h05")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_813 = and(_T_811, _T_812) @[WatermanSystolic.scala 94:57]
            when _T_813 : @[WatermanSystolic.scala 94:78]
              node _T_814 = sub(stepReg, asSInt(UInt<4>("h05"))) @[WatermanSystolic.scala 95:31]
              node _T_815 = tail(_T_814, 1) @[WatermanSystolic.scala 95:31]
              node _T_816 = asSInt(_T_815) @[WatermanSystolic.scala 95:31]
              node _T_817 = lt(_T_816, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_818 = sub(asSInt(UInt<1>("h00")), _T_816) @[WatermanSystolic.scala 95:38]
              node _T_819 = tail(_T_818, 1) @[WatermanSystolic.scala 95:38]
              node _T_820 = asSInt(_T_819) @[WatermanSystolic.scala 95:38]
              node _T_821 = mux(_T_817, _T_820, _T_816) @[WatermanSystolic.scala 95:38]
              node _T_822 = asUInt(_T_821) @[WatermanSystolic.scala 95:42]
              node _T_823 = bits(_T_822, 4, 0)
              columnsReg[_T_823] <= resReg[5] @[WatermanSystolic.scala 95:50]
              rowsReg[5] <= resReg[5] @[WatermanSystolic.scala 96:22]
              diagReg[5] <= intermDiagReg[5] @[WatermanSystolic.scala 97:22]
              intermDiagReg[6] <= resReg[5] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_824 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_825 = tail(_T_824, 1) @[WatermanSystolic.scala 94:31]
            node _T_826 = asSInt(_T_825) @[WatermanSystolic.scala 94:31]
            node _T_827 = add(_T_826, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_828 = tail(_T_827, 1) @[WatermanSystolic.scala 94:49]
            node _T_829 = asSInt(_T_828) @[WatermanSystolic.scala 94:49]
            node _T_830 = geq(asSInt(UInt<4>("h06")), _T_829) @[WatermanSystolic.scala 94:19]
            node _T_831 = leq(asSInt(UInt<4>("h06")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_832 = and(_T_830, _T_831) @[WatermanSystolic.scala 94:57]
            when _T_832 : @[WatermanSystolic.scala 94:78]
              node _T_833 = sub(stepReg, asSInt(UInt<4>("h06"))) @[WatermanSystolic.scala 95:31]
              node _T_834 = tail(_T_833, 1) @[WatermanSystolic.scala 95:31]
              node _T_835 = asSInt(_T_834) @[WatermanSystolic.scala 95:31]
              node _T_836 = lt(_T_835, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_837 = sub(asSInt(UInt<1>("h00")), _T_835) @[WatermanSystolic.scala 95:38]
              node _T_838 = tail(_T_837, 1) @[WatermanSystolic.scala 95:38]
              node _T_839 = asSInt(_T_838) @[WatermanSystolic.scala 95:38]
              node _T_840 = mux(_T_836, _T_839, _T_835) @[WatermanSystolic.scala 95:38]
              node _T_841 = asUInt(_T_840) @[WatermanSystolic.scala 95:42]
              node _T_842 = bits(_T_841, 4, 0)
              columnsReg[_T_842] <= resReg[6] @[WatermanSystolic.scala 95:50]
              rowsReg[6] <= resReg[6] @[WatermanSystolic.scala 96:22]
              diagReg[6] <= intermDiagReg[6] @[WatermanSystolic.scala 97:22]
              intermDiagReg[7] <= resReg[6] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_843 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_844 = tail(_T_843, 1) @[WatermanSystolic.scala 94:31]
            node _T_845 = asSInt(_T_844) @[WatermanSystolic.scala 94:31]
            node _T_846 = add(_T_845, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_847 = tail(_T_846, 1) @[WatermanSystolic.scala 94:49]
            node _T_848 = asSInt(_T_847) @[WatermanSystolic.scala 94:49]
            node _T_849 = geq(asSInt(UInt<4>("h07")), _T_848) @[WatermanSystolic.scala 94:19]
            node _T_850 = leq(asSInt(UInt<4>("h07")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_851 = and(_T_849, _T_850) @[WatermanSystolic.scala 94:57]
            when _T_851 : @[WatermanSystolic.scala 94:78]
              node _T_852 = sub(stepReg, asSInt(UInt<4>("h07"))) @[WatermanSystolic.scala 95:31]
              node _T_853 = tail(_T_852, 1) @[WatermanSystolic.scala 95:31]
              node _T_854 = asSInt(_T_853) @[WatermanSystolic.scala 95:31]
              node _T_855 = lt(_T_854, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_856 = sub(asSInt(UInt<1>("h00")), _T_854) @[WatermanSystolic.scala 95:38]
              node _T_857 = tail(_T_856, 1) @[WatermanSystolic.scala 95:38]
              node _T_858 = asSInt(_T_857) @[WatermanSystolic.scala 95:38]
              node _T_859 = mux(_T_855, _T_858, _T_854) @[WatermanSystolic.scala 95:38]
              node _T_860 = asUInt(_T_859) @[WatermanSystolic.scala 95:42]
              node _T_861 = bits(_T_860, 4, 0)
              columnsReg[_T_861] <= resReg[7] @[WatermanSystolic.scala 95:50]
              rowsReg[7] <= resReg[7] @[WatermanSystolic.scala 96:22]
              diagReg[7] <= intermDiagReg[7] @[WatermanSystolic.scala 97:22]
              intermDiagReg[8] <= resReg[7] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_862 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_863 = tail(_T_862, 1) @[WatermanSystolic.scala 94:31]
            node _T_864 = asSInt(_T_863) @[WatermanSystolic.scala 94:31]
            node _T_865 = add(_T_864, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_866 = tail(_T_865, 1) @[WatermanSystolic.scala 94:49]
            node _T_867 = asSInt(_T_866) @[WatermanSystolic.scala 94:49]
            node _T_868 = geq(asSInt(UInt<5>("h08")), _T_867) @[WatermanSystolic.scala 94:19]
            node _T_869 = leq(asSInt(UInt<5>("h08")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_870 = and(_T_868, _T_869) @[WatermanSystolic.scala 94:57]
            when _T_870 : @[WatermanSystolic.scala 94:78]
              node _T_871 = sub(stepReg, asSInt(UInt<5>("h08"))) @[WatermanSystolic.scala 95:31]
              node _T_872 = tail(_T_871, 1) @[WatermanSystolic.scala 95:31]
              node _T_873 = asSInt(_T_872) @[WatermanSystolic.scala 95:31]
              node _T_874 = lt(_T_873, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_875 = sub(asSInt(UInt<1>("h00")), _T_873) @[WatermanSystolic.scala 95:38]
              node _T_876 = tail(_T_875, 1) @[WatermanSystolic.scala 95:38]
              node _T_877 = asSInt(_T_876) @[WatermanSystolic.scala 95:38]
              node _T_878 = mux(_T_874, _T_877, _T_873) @[WatermanSystolic.scala 95:38]
              node _T_879 = asUInt(_T_878) @[WatermanSystolic.scala 95:42]
              node _T_880 = bits(_T_879, 4, 0)
              columnsReg[_T_880] <= resReg[8] @[WatermanSystolic.scala 95:50]
              rowsReg[8] <= resReg[8] @[WatermanSystolic.scala 96:22]
              diagReg[8] <= intermDiagReg[8] @[WatermanSystolic.scala 97:22]
              intermDiagReg[9] <= resReg[8] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_881 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_882 = tail(_T_881, 1) @[WatermanSystolic.scala 94:31]
            node _T_883 = asSInt(_T_882) @[WatermanSystolic.scala 94:31]
            node _T_884 = add(_T_883, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_885 = tail(_T_884, 1) @[WatermanSystolic.scala 94:49]
            node _T_886 = asSInt(_T_885) @[WatermanSystolic.scala 94:49]
            node _T_887 = geq(asSInt(UInt<5>("h09")), _T_886) @[WatermanSystolic.scala 94:19]
            node _T_888 = leq(asSInt(UInt<5>("h09")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_889 = and(_T_887, _T_888) @[WatermanSystolic.scala 94:57]
            when _T_889 : @[WatermanSystolic.scala 94:78]
              node _T_890 = sub(stepReg, asSInt(UInt<5>("h09"))) @[WatermanSystolic.scala 95:31]
              node _T_891 = tail(_T_890, 1) @[WatermanSystolic.scala 95:31]
              node _T_892 = asSInt(_T_891) @[WatermanSystolic.scala 95:31]
              node _T_893 = lt(_T_892, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_894 = sub(asSInt(UInt<1>("h00")), _T_892) @[WatermanSystolic.scala 95:38]
              node _T_895 = tail(_T_894, 1) @[WatermanSystolic.scala 95:38]
              node _T_896 = asSInt(_T_895) @[WatermanSystolic.scala 95:38]
              node _T_897 = mux(_T_893, _T_896, _T_892) @[WatermanSystolic.scala 95:38]
              node _T_898 = asUInt(_T_897) @[WatermanSystolic.scala 95:42]
              node _T_899 = bits(_T_898, 4, 0)
              columnsReg[_T_899] <= resReg[9] @[WatermanSystolic.scala 95:50]
              rowsReg[9] <= resReg[9] @[WatermanSystolic.scala 96:22]
              diagReg[9] <= intermDiagReg[9] @[WatermanSystolic.scala 97:22]
              intermDiagReg[10] <= resReg[9] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_900 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_901 = tail(_T_900, 1) @[WatermanSystolic.scala 94:31]
            node _T_902 = asSInt(_T_901) @[WatermanSystolic.scala 94:31]
            node _T_903 = add(_T_902, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_904 = tail(_T_903, 1) @[WatermanSystolic.scala 94:49]
            node _T_905 = asSInt(_T_904) @[WatermanSystolic.scala 94:49]
            node _T_906 = geq(asSInt(UInt<5>("h0a")), _T_905) @[WatermanSystolic.scala 94:19]
            node _T_907 = leq(asSInt(UInt<5>("h0a")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_908 = and(_T_906, _T_907) @[WatermanSystolic.scala 94:57]
            when _T_908 : @[WatermanSystolic.scala 94:78]
              node _T_909 = sub(stepReg, asSInt(UInt<5>("h0a"))) @[WatermanSystolic.scala 95:31]
              node _T_910 = tail(_T_909, 1) @[WatermanSystolic.scala 95:31]
              node _T_911 = asSInt(_T_910) @[WatermanSystolic.scala 95:31]
              node _T_912 = lt(_T_911, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_913 = sub(asSInt(UInt<1>("h00")), _T_911) @[WatermanSystolic.scala 95:38]
              node _T_914 = tail(_T_913, 1) @[WatermanSystolic.scala 95:38]
              node _T_915 = asSInt(_T_914) @[WatermanSystolic.scala 95:38]
              node _T_916 = mux(_T_912, _T_915, _T_911) @[WatermanSystolic.scala 95:38]
              node _T_917 = asUInt(_T_916) @[WatermanSystolic.scala 95:42]
              node _T_918 = bits(_T_917, 4, 0)
              columnsReg[_T_918] <= resReg[10] @[WatermanSystolic.scala 95:50]
              rowsReg[10] <= resReg[10] @[WatermanSystolic.scala 96:22]
              diagReg[10] <= intermDiagReg[10] @[WatermanSystolic.scala 97:22]
              intermDiagReg[11] <= resReg[10] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_919 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_920 = tail(_T_919, 1) @[WatermanSystolic.scala 94:31]
            node _T_921 = asSInt(_T_920) @[WatermanSystolic.scala 94:31]
            node _T_922 = add(_T_921, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_923 = tail(_T_922, 1) @[WatermanSystolic.scala 94:49]
            node _T_924 = asSInt(_T_923) @[WatermanSystolic.scala 94:49]
            node _T_925 = geq(asSInt(UInt<5>("h0b")), _T_924) @[WatermanSystolic.scala 94:19]
            node _T_926 = leq(asSInt(UInt<5>("h0b")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_927 = and(_T_925, _T_926) @[WatermanSystolic.scala 94:57]
            when _T_927 : @[WatermanSystolic.scala 94:78]
              node _T_928 = sub(stepReg, asSInt(UInt<5>("h0b"))) @[WatermanSystolic.scala 95:31]
              node _T_929 = tail(_T_928, 1) @[WatermanSystolic.scala 95:31]
              node _T_930 = asSInt(_T_929) @[WatermanSystolic.scala 95:31]
              node _T_931 = lt(_T_930, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_932 = sub(asSInt(UInt<1>("h00")), _T_930) @[WatermanSystolic.scala 95:38]
              node _T_933 = tail(_T_932, 1) @[WatermanSystolic.scala 95:38]
              node _T_934 = asSInt(_T_933) @[WatermanSystolic.scala 95:38]
              node _T_935 = mux(_T_931, _T_934, _T_930) @[WatermanSystolic.scala 95:38]
              node _T_936 = asUInt(_T_935) @[WatermanSystolic.scala 95:42]
              node _T_937 = bits(_T_936, 4, 0)
              columnsReg[_T_937] <= resReg[11] @[WatermanSystolic.scala 95:50]
              rowsReg[11] <= resReg[11] @[WatermanSystolic.scala 96:22]
              diagReg[11] <= intermDiagReg[11] @[WatermanSystolic.scala 97:22]
              intermDiagReg[12] <= resReg[11] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_938 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_939 = tail(_T_938, 1) @[WatermanSystolic.scala 94:31]
            node _T_940 = asSInt(_T_939) @[WatermanSystolic.scala 94:31]
            node _T_941 = add(_T_940, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_942 = tail(_T_941, 1) @[WatermanSystolic.scala 94:49]
            node _T_943 = asSInt(_T_942) @[WatermanSystolic.scala 94:49]
            node _T_944 = geq(asSInt(UInt<5>("h0c")), _T_943) @[WatermanSystolic.scala 94:19]
            node _T_945 = leq(asSInt(UInt<5>("h0c")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_946 = and(_T_944, _T_945) @[WatermanSystolic.scala 94:57]
            when _T_946 : @[WatermanSystolic.scala 94:78]
              node _T_947 = sub(stepReg, asSInt(UInt<5>("h0c"))) @[WatermanSystolic.scala 95:31]
              node _T_948 = tail(_T_947, 1) @[WatermanSystolic.scala 95:31]
              node _T_949 = asSInt(_T_948) @[WatermanSystolic.scala 95:31]
              node _T_950 = lt(_T_949, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_951 = sub(asSInt(UInt<1>("h00")), _T_949) @[WatermanSystolic.scala 95:38]
              node _T_952 = tail(_T_951, 1) @[WatermanSystolic.scala 95:38]
              node _T_953 = asSInt(_T_952) @[WatermanSystolic.scala 95:38]
              node _T_954 = mux(_T_950, _T_953, _T_949) @[WatermanSystolic.scala 95:38]
              node _T_955 = asUInt(_T_954) @[WatermanSystolic.scala 95:42]
              node _T_956 = bits(_T_955, 4, 0)
              columnsReg[_T_956] <= resReg[12] @[WatermanSystolic.scala 95:50]
              rowsReg[12] <= resReg[12] @[WatermanSystolic.scala 96:22]
              diagReg[12] <= intermDiagReg[12] @[WatermanSystolic.scala 97:22]
              intermDiagReg[13] <= resReg[12] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_957 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_958 = tail(_T_957, 1) @[WatermanSystolic.scala 94:31]
            node _T_959 = asSInt(_T_958) @[WatermanSystolic.scala 94:31]
            node _T_960 = add(_T_959, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_961 = tail(_T_960, 1) @[WatermanSystolic.scala 94:49]
            node _T_962 = asSInt(_T_961) @[WatermanSystolic.scala 94:49]
            node _T_963 = geq(asSInt(UInt<5>("h0d")), _T_962) @[WatermanSystolic.scala 94:19]
            node _T_964 = leq(asSInt(UInt<5>("h0d")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_965 = and(_T_963, _T_964) @[WatermanSystolic.scala 94:57]
            when _T_965 : @[WatermanSystolic.scala 94:78]
              node _T_966 = sub(stepReg, asSInt(UInt<5>("h0d"))) @[WatermanSystolic.scala 95:31]
              node _T_967 = tail(_T_966, 1) @[WatermanSystolic.scala 95:31]
              node _T_968 = asSInt(_T_967) @[WatermanSystolic.scala 95:31]
              node _T_969 = lt(_T_968, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_970 = sub(asSInt(UInt<1>("h00")), _T_968) @[WatermanSystolic.scala 95:38]
              node _T_971 = tail(_T_970, 1) @[WatermanSystolic.scala 95:38]
              node _T_972 = asSInt(_T_971) @[WatermanSystolic.scala 95:38]
              node _T_973 = mux(_T_969, _T_972, _T_968) @[WatermanSystolic.scala 95:38]
              node _T_974 = asUInt(_T_973) @[WatermanSystolic.scala 95:42]
              node _T_975 = bits(_T_974, 4, 0)
              columnsReg[_T_975] <= resReg[13] @[WatermanSystolic.scala 95:50]
              rowsReg[13] <= resReg[13] @[WatermanSystolic.scala 96:22]
              diagReg[13] <= intermDiagReg[13] @[WatermanSystolic.scala 97:22]
              intermDiagReg[14] <= resReg[13] @[WatermanSystolic.scala 99:34]
              skip @[WatermanSystolic.scala 94:78]
            node _T_976 = sub(stepReg, asSInt(UInt<6>("h015"))) @[WatermanSystolic.scala 94:31]
            node _T_977 = tail(_T_976, 1) @[WatermanSystolic.scala 94:31]
            node _T_978 = asSInt(_T_977) @[WatermanSystolic.scala 94:31]
            node _T_979 = add(_T_978, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 94:49]
            node _T_980 = tail(_T_979, 1) @[WatermanSystolic.scala 94:49]
            node _T_981 = asSInt(_T_980) @[WatermanSystolic.scala 94:49]
            node _T_982 = geq(asSInt(UInt<5>("h0e")), _T_981) @[WatermanSystolic.scala 94:19]
            node _T_983 = leq(asSInt(UInt<5>("h0e")), stepReg) @[WatermanSystolic.scala 94:65]
            node _T_984 = and(_T_982, _T_983) @[WatermanSystolic.scala 94:57]
            when _T_984 : @[WatermanSystolic.scala 94:78]
              node _T_985 = sub(stepReg, asSInt(UInt<5>("h0e"))) @[WatermanSystolic.scala 95:31]
              node _T_986 = tail(_T_985, 1) @[WatermanSystolic.scala 95:31]
              node _T_987 = asSInt(_T_986) @[WatermanSystolic.scala 95:31]
              node _T_988 = lt(_T_987, asSInt(UInt<1>("h00"))) @[WatermanSystolic.scala 95:38]
              node _T_989 = sub(asSInt(UInt<1>("h00")), _T_987) @[WatermanSystolic.scala 95:38]
              node _T_990 = tail(_T_989, 1) @[WatermanSystolic.scala 95:38]
              node _T_991 = asSInt(_T_990) @[WatermanSystolic.scala 95:38]
              node _T_992 = mux(_T_988, _T_991, _T_987) @[WatermanSystolic.scala 95:38]
              node _T_993 = asUInt(_T_992) @[WatermanSystolic.scala 95:42]
              node _T_994 = bits(_T_993, 4, 0)
              columnsReg[_T_994] <= resReg[14] @[WatermanSystolic.scala 95:50]
              rowsReg[14] <= resReg[14] @[WatermanSystolic.scala 96:22]
              diagReg[14] <= intermDiagReg[14] @[WatermanSystolic.scala 97:22]
              skip @[WatermanSystolic.scala 94:78]
            node _T_995 = add(stepReg, asSInt(UInt<2>("h01"))) @[WatermanSystolic.scala 103:26]
            node _T_996 = tail(_T_995, 1) @[WatermanSystolic.scala 103:26]
            node _T_997 = asSInt(_T_996) @[WatermanSystolic.scala 103:26]
            stepReg <= _T_997 @[WatermanSystolic.scala 103:15]
            node _T_998 = eq(stepReg, asSInt(UInt<7>("h022"))) @[WatermanSystolic.scala 104:20]
            when _T_998 : @[WatermanSystolic.scala 104:60]
              stateReg <= UInt<2>("h00") @[WatermanSystolic.scala 105:18]
              skip @[WatermanSystolic.scala 104:60]
            else : @[WatermanSystolic.scala 106:20]
              stateReg <= UInt<2>("h01") @[WatermanSystolic.scala 107:18]
              skip @[WatermanSystolic.scala 106:20]
            skip @[Conditional.scala 39:67]
    
