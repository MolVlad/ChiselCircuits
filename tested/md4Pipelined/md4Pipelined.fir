;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit md4Pipelined : 
  module changeWordOrder : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_8 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_9 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_10 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_11 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_12 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_13 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_14 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_15 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_16 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_17 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_18 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_19 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module ChangeOrderMD4Input : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 251:27]
    wire result : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 251:27]
    wire _WIRE : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 252:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 252:54]
    wire _WIRE_1 : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 252:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 252:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 252:54]
    wire _WIRE_2 : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 252:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 252:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 252:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 252:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 252:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 252:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 252:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 252:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 252:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 252:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 252:29]
    reg data : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 252:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 253:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 254:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 255:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 255:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 255:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 255:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 257:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 257:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 257:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 258:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 258:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 259:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 259:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 259:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 259:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 259:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 260:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 260:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 260:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 260:9]
    input.X <= data[head].X @[md4Pipelined.scala 260:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 263:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 263:20]
    when _T_4 : @[md4Pipelined.scala 263:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 264:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 265:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 265:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 265:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 265:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 265:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 266:13]
      tail <= _T_5 @[md4Pipelined.scala 266:10]
      skip @[md4Pipelined.scala 263:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 270:21]
    when _T_6 : @[md4Pipelined.scala 270:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 271:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 272:13]
      head <= _T_7 @[md4Pipelined.scala 272:10]
      skip @[md4Pipelined.scala 270:36]
    inst changeWordOrder of changeWordOrder @[md4Pipelined.scala 277:11]
    changeWordOrder.clock <= clock
    changeWordOrder.reset <= reset
    inst changeWordOrder_1 of changeWordOrder_1 @[md4Pipelined.scala 277:11]
    changeWordOrder_1.clock <= clock
    changeWordOrder_1.reset <= reset
    inst changeWordOrder_2 of changeWordOrder_2 @[md4Pipelined.scala 277:11]
    changeWordOrder_2.clock <= clock
    changeWordOrder_2.reset <= reset
    inst changeWordOrder_3 of changeWordOrder_3 @[md4Pipelined.scala 277:11]
    changeWordOrder_3.clock <= clock
    changeWordOrder_3.reset <= reset
    inst changeWordOrder_4 of changeWordOrder_4 @[md4Pipelined.scala 277:11]
    changeWordOrder_4.clock <= clock
    changeWordOrder_4.reset <= reset
    inst changeWordOrder_5 of changeWordOrder_5 @[md4Pipelined.scala 277:11]
    changeWordOrder_5.clock <= clock
    changeWordOrder_5.reset <= reset
    inst changeWordOrder_6 of changeWordOrder_6 @[md4Pipelined.scala 277:11]
    changeWordOrder_6.clock <= clock
    changeWordOrder_6.reset <= reset
    inst changeWordOrder_7 of changeWordOrder_7 @[md4Pipelined.scala 277:11]
    changeWordOrder_7.clock <= clock
    changeWordOrder_7.reset <= reset
    inst changeWordOrder_8 of changeWordOrder_8 @[md4Pipelined.scala 277:11]
    changeWordOrder_8.clock <= clock
    changeWordOrder_8.reset <= reset
    inst changeWordOrder_9 of changeWordOrder_9 @[md4Pipelined.scala 277:11]
    changeWordOrder_9.clock <= clock
    changeWordOrder_9.reset <= reset
    inst changeWordOrder_10 of changeWordOrder_10 @[md4Pipelined.scala 277:11]
    changeWordOrder_10.clock <= clock
    changeWordOrder_10.reset <= reset
    inst changeWordOrder_11 of changeWordOrder_11 @[md4Pipelined.scala 277:11]
    changeWordOrder_11.clock <= clock
    changeWordOrder_11.reset <= reset
    inst changeWordOrder_12 of changeWordOrder_12 @[md4Pipelined.scala 277:11]
    changeWordOrder_12.clock <= clock
    changeWordOrder_12.reset <= reset
    inst changeWordOrder_13 of changeWordOrder_13 @[md4Pipelined.scala 277:11]
    changeWordOrder_13.clock <= clock
    changeWordOrder_13.reset <= reset
    inst changeWordOrder_14 of changeWordOrder_14 @[md4Pipelined.scala 277:11]
    changeWordOrder_14.clock <= clock
    changeWordOrder_14.reset <= reset
    inst changeWordOrder_15 of changeWordOrder_15 @[md4Pipelined.scala 277:11]
    changeWordOrder_15.clock <= clock
    changeWordOrder_15.reset <= reset
    wire PEs : {flip in : UInt<32>, out : UInt<32>}[16] @[md4Pipelined.scala 276:20]
    PEs[0].out <= changeWordOrder.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder.io.in <= PEs[0].in @[md4Pipelined.scala 276:20]
    PEs[1].out <= changeWordOrder_1.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_1.io.in <= PEs[1].in @[md4Pipelined.scala 276:20]
    PEs[2].out <= changeWordOrder_2.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_2.io.in <= PEs[2].in @[md4Pipelined.scala 276:20]
    PEs[3].out <= changeWordOrder_3.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_3.io.in <= PEs[3].in @[md4Pipelined.scala 276:20]
    PEs[4].out <= changeWordOrder_4.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_4.io.in <= PEs[4].in @[md4Pipelined.scala 276:20]
    PEs[5].out <= changeWordOrder_5.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_5.io.in <= PEs[5].in @[md4Pipelined.scala 276:20]
    PEs[6].out <= changeWordOrder_6.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_6.io.in <= PEs[6].in @[md4Pipelined.scala 276:20]
    PEs[7].out <= changeWordOrder_7.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_7.io.in <= PEs[7].in @[md4Pipelined.scala 276:20]
    PEs[8].out <= changeWordOrder_8.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_8.io.in <= PEs[8].in @[md4Pipelined.scala 276:20]
    PEs[9].out <= changeWordOrder_9.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_9.io.in <= PEs[9].in @[md4Pipelined.scala 276:20]
    PEs[10].out <= changeWordOrder_10.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_10.io.in <= PEs[10].in @[md4Pipelined.scala 276:20]
    PEs[11].out <= changeWordOrder_11.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_11.io.in <= PEs[11].in @[md4Pipelined.scala 276:20]
    PEs[12].out <= changeWordOrder_12.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_12.io.in <= PEs[12].in @[md4Pipelined.scala 276:20]
    PEs[13].out <= changeWordOrder_13.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_13.io.in <= PEs[13].in @[md4Pipelined.scala 276:20]
    PEs[14].out <= changeWordOrder_14.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_14.io.in <= PEs[14].in @[md4Pipelined.scala 276:20]
    PEs[15].out <= changeWordOrder_15.io.out @[md4Pipelined.scala 276:20]
    changeWordOrder_15.io.in <= PEs[15].in @[md4Pipelined.scala 276:20]
    node _T_8 = bits(input.X, 31, 0) @[md4Pipelined.scala 280:25]
    PEs[0].in <= _T_8 @[md4Pipelined.scala 280:15]
    node _T_9 = bits(input.X, 63, 32) @[md4Pipelined.scala 280:25]
    PEs[1].in <= _T_9 @[md4Pipelined.scala 280:15]
    node _T_10 = bits(input.X, 95, 64) @[md4Pipelined.scala 280:25]
    PEs[2].in <= _T_10 @[md4Pipelined.scala 280:15]
    node _T_11 = bits(input.X, 127, 96) @[md4Pipelined.scala 280:25]
    PEs[3].in <= _T_11 @[md4Pipelined.scala 280:15]
    node _T_12 = bits(input.X, 159, 128) @[md4Pipelined.scala 280:25]
    PEs[4].in <= _T_12 @[md4Pipelined.scala 280:15]
    node _T_13 = bits(input.X, 191, 160) @[md4Pipelined.scala 280:25]
    PEs[5].in <= _T_13 @[md4Pipelined.scala 280:15]
    node _T_14 = bits(input.X, 223, 192) @[md4Pipelined.scala 280:25]
    PEs[6].in <= _T_14 @[md4Pipelined.scala 280:15]
    node _T_15 = bits(input.X, 255, 224) @[md4Pipelined.scala 280:25]
    PEs[7].in <= _T_15 @[md4Pipelined.scala 280:15]
    node _T_16 = bits(input.X, 287, 256) @[md4Pipelined.scala 280:25]
    PEs[8].in <= _T_16 @[md4Pipelined.scala 280:15]
    node _T_17 = bits(input.X, 319, 288) @[md4Pipelined.scala 280:25]
    PEs[9].in <= _T_17 @[md4Pipelined.scala 280:15]
    node _T_18 = bits(input.X, 351, 320) @[md4Pipelined.scala 280:25]
    PEs[10].in <= _T_18 @[md4Pipelined.scala 280:15]
    node _T_19 = bits(input.X, 383, 352) @[md4Pipelined.scala 280:25]
    PEs[11].in <= _T_19 @[md4Pipelined.scala 280:15]
    node _T_20 = bits(input.X, 415, 384) @[md4Pipelined.scala 280:25]
    PEs[12].in <= _T_20 @[md4Pipelined.scala 280:15]
    node _T_21 = bits(input.X, 447, 416) @[md4Pipelined.scala 280:25]
    PEs[13].in <= _T_21 @[md4Pipelined.scala 280:15]
    node _T_22 = bits(input.X, 479, 448) @[md4Pipelined.scala 280:25]
    PEs[14].in <= _T_22 @[md4Pipelined.scala 280:15]
    node _T_23 = bits(input.X, 511, 480) @[md4Pipelined.scala 280:25]
    PEs[15].in <= _T_23 @[md4Pipelined.scala 280:15]
    node lo_lo_lo = cat(PEs[1].out, PEs[0].out) @[Cat.scala 30:58]
    node lo_lo_hi = cat(PEs[3].out, PEs[2].out) @[Cat.scala 30:58]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[Cat.scala 30:58]
    node lo_hi_lo = cat(PEs[5].out, PEs[4].out) @[Cat.scala 30:58]
    node lo_hi_hi = cat(PEs[7].out, PEs[6].out) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_lo = cat(PEs[9].out, PEs[8].out) @[Cat.scala 30:58]
    node hi_lo_hi = cat(PEs[11].out, PEs[10].out) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[Cat.scala 30:58]
    node hi_hi_lo = cat(PEs[13].out, PEs[12].out) @[Cat.scala 30:58]
    node hi_hi_hi = cat(PEs[15].out, PEs[14].out) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi, lo) @[Cat.scala 30:58]
    result.X <= _T_24 @[md4Pipelined.scala 282:12]
    inst changeWordOrder_16 of changeWordOrder_16 @[md4Pipelined.scala 286:19]
    changeWordOrder_16.clock <= clock
    changeWordOrder_16.reset <= reset
    changeWordOrder_16.io.in <= input.A0 @[md4Pipelined.scala 287:10]
    result.A0 <= changeWordOrder_16.io.out @[md4Pipelined.scala 288:13]
    inst changeWordOrder_17 of changeWordOrder_17 @[md4Pipelined.scala 290:19]
    changeWordOrder_17.clock <= clock
    changeWordOrder_17.reset <= reset
    changeWordOrder_17.io.in <= input.B0 @[md4Pipelined.scala 291:10]
    result.B0 <= changeWordOrder_17.io.out @[md4Pipelined.scala 292:13]
    inst changeWordOrder_18 of changeWordOrder_18 @[md4Pipelined.scala 294:19]
    changeWordOrder_18.clock <= clock
    changeWordOrder_18.reset <= reset
    changeWordOrder_18.io.in <= input.C0 @[md4Pipelined.scala 295:10]
    result.C0 <= changeWordOrder_18.io.out @[md4Pipelined.scala 296:13]
    inst changeWordOrder_19 of changeWordOrder_19 @[md4Pipelined.scala 298:19]
    changeWordOrder_19.clock <= clock
    changeWordOrder_19.reset <= reset
    changeWordOrder_19.io.in <= input.D0 @[md4Pipelined.scala 299:10]
    result.D0 <= changeWordOrder_19.io.out @[md4Pipelined.scala 300:13]
    
  module changeWordOrder_20 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_21 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_22 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module changeWordOrder_23 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : UInt<32>}
    
    wire byte0 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte1 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte2 : UInt<8> @[changeWordOrder.scala 12:40]
    wire byte3 : UInt<8> @[changeWordOrder.scala 12:40]
    node _T = bits(io.in, 7, 0) @[changeWordOrder.scala 13:17]
    byte0 <= _T @[changeWordOrder.scala 13:9]
    node _T_1 = bits(io.in, 15, 8) @[changeWordOrder.scala 14:17]
    byte1 <= _T_1 @[changeWordOrder.scala 14:9]
    node _T_2 = bits(io.in, 23, 16) @[changeWordOrder.scala 15:17]
    byte2 <= _T_2 @[changeWordOrder.scala 15:9]
    node _T_3 = bits(io.in, 31, 24) @[changeWordOrder.scala 16:17]
    byte3 <= _T_3 @[changeWordOrder.scala 16:9]
    node lo = cat(byte2, byte3) @[Cat.scala 30:58]
    node hi = cat(byte0, byte1) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.out <= _T_4 @[changeWordOrder.scala 18:10]
    
  module BufferedChangeHashOrder : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}}
    
    wire input : UInt<128> @[md4Pipelined.scala 317:27]
    wire result : UInt<128> @[md4Pipelined.scala 317:27]
    wire _WIRE : UInt<128>[2] @[md4Pipelined.scala 318:29]
    _WIRE[0] <= UInt<128>("h00") @[md4Pipelined.scala 318:29]
    _WIRE[1] <= UInt<128>("h00") @[md4Pipelined.scala 318:29]
    reg data : UInt<128>[2], clock with : (reset => (reset, _WIRE)) @[md4Pipelined.scala 318:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 319:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 320:21]
    wire _WIRE_1 : UInt<1>[2] @[md4Pipelined.scala 321:29]
    _WIRE_1[0] <= UInt<1>("h00") @[md4Pipelined.scala 321:29]
    _WIRE_1[1] <= UInt<1>("h00") @[md4Pipelined.scala 321:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_1)) @[md4Pipelined.scala 321:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 323:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 323:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 323:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 324:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 324:16]
    io.out.bits <= result @[md4Pipelined.scala 325:15]
    input <= data[head] @[md4Pipelined.scala 326:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 329:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 329:20]
    when _T_4 : @[md4Pipelined.scala 329:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 330:16]
      data[tail] <= io.in.bits @[md4Pipelined.scala 331:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 332:13]
      tail <= _T_5 @[md4Pipelined.scala 332:10]
      skip @[md4Pipelined.scala 329:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 336:21]
    when _T_6 : @[md4Pipelined.scala 336:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 337:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 338:13]
      head <= _T_7 @[md4Pipelined.scala 338:10]
      skip @[md4Pipelined.scala 336:36]
    inst changeWordOrder of changeWordOrder_20 @[md4Pipelined.scala 343:11]
    changeWordOrder.clock <= clock
    changeWordOrder.reset <= reset
    inst changeWordOrder_1 of changeWordOrder_21 @[md4Pipelined.scala 343:11]
    changeWordOrder_1.clock <= clock
    changeWordOrder_1.reset <= reset
    inst changeWordOrder_2 of changeWordOrder_22 @[md4Pipelined.scala 343:11]
    changeWordOrder_2.clock <= clock
    changeWordOrder_2.reset <= reset
    inst changeWordOrder_3 of changeWordOrder_23 @[md4Pipelined.scala 343:11]
    changeWordOrder_3.clock <= clock
    changeWordOrder_3.reset <= reset
    wire PEs : {flip in : UInt<32>, out : UInt<32>}[4] @[md4Pipelined.scala 342:20]
    PEs[0].out <= changeWordOrder.io.out @[md4Pipelined.scala 342:20]
    changeWordOrder.io.in <= PEs[0].in @[md4Pipelined.scala 342:20]
    PEs[1].out <= changeWordOrder_1.io.out @[md4Pipelined.scala 342:20]
    changeWordOrder_1.io.in <= PEs[1].in @[md4Pipelined.scala 342:20]
    PEs[2].out <= changeWordOrder_2.io.out @[md4Pipelined.scala 342:20]
    changeWordOrder_2.io.in <= PEs[2].in @[md4Pipelined.scala 342:20]
    PEs[3].out <= changeWordOrder_3.io.out @[md4Pipelined.scala 342:20]
    changeWordOrder_3.io.in <= PEs[3].in @[md4Pipelined.scala 342:20]
    node _T_8 = bits(input, 31, 0) @[md4Pipelined.scala 346:23]
    PEs[0].in <= _T_8 @[md4Pipelined.scala 346:15]
    node _T_9 = bits(input, 63, 32) @[md4Pipelined.scala 346:23]
    PEs[1].in <= _T_9 @[md4Pipelined.scala 346:15]
    node _T_10 = bits(input, 95, 64) @[md4Pipelined.scala 346:23]
    PEs[2].in <= _T_10 @[md4Pipelined.scala 346:15]
    node _T_11 = bits(input, 127, 96) @[md4Pipelined.scala 346:23]
    PEs[3].in <= _T_11 @[md4Pipelined.scala 346:15]
    node lo = cat(PEs[1].out, PEs[0].out) @[Cat.scala 30:58]
    node hi = cat(PEs[3].out, PEs[2].out) @[Cat.scala 30:58]
    node _T_12 = cat(hi, lo) @[Cat.scala 30:58]
    result <= _T_12 @[md4Pipelined.scala 348:10]
    
  module BufferedProcessingElement : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 511, 480) @[md4Pipelined.scala 181:30]
    xk <= _T_26 @[md4Pipelined.scala 181:20]
    
  module BufferedProcessingElement_1 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 24, 0) @[md4Pipelined.scala 152:35]
    node lo = bits(sum, 31, 25) @[md4Pipelined.scala 152:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 152:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 479, 448) @[md4Pipelined.scala 182:30]
    xk <= _T_26 @[md4Pipelined.scala 182:20]
    
  module BufferedProcessingElement_2 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 161:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 161:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 161:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 447, 416) @[md4Pipelined.scala 183:30]
    xk <= _T_26 @[md4Pipelined.scala 183:20]
    
  module BufferedProcessingElement_3 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 12, 0) @[md4Pipelined.scala 170:35]
    node lo = bits(sum, 31, 13) @[md4Pipelined.scala 170:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 170:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 415, 384) @[md4Pipelined.scala 184:30]
    xk <= _T_26 @[md4Pipelined.scala 184:20]
    
  module BufferedProcessingElement_4 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 383, 352) @[md4Pipelined.scala 185:30]
    xk <= _T_26 @[md4Pipelined.scala 185:20]
    
  module BufferedProcessingElement_5 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 24, 0) @[md4Pipelined.scala 152:35]
    node lo = bits(sum, 31, 25) @[md4Pipelined.scala 152:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 152:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 351, 320) @[md4Pipelined.scala 186:30]
    xk <= _T_26 @[md4Pipelined.scala 186:20]
    
  module BufferedProcessingElement_6 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 161:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 161:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 161:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 319, 288) @[md4Pipelined.scala 187:30]
    xk <= _T_26 @[md4Pipelined.scala 187:20]
    
  module BufferedProcessingElement_7 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 12, 0) @[md4Pipelined.scala 170:35]
    node lo = bits(sum, 31, 13) @[md4Pipelined.scala 170:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 170:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 287, 256) @[md4Pipelined.scala 188:30]
    xk <= _T_26 @[md4Pipelined.scala 188:20]
    
  module BufferedProcessingElement_8 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 255, 224) @[md4Pipelined.scala 189:30]
    xk <= _T_26 @[md4Pipelined.scala 189:20]
    
  module BufferedProcessingElement_9 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 24, 0) @[md4Pipelined.scala 152:35]
    node lo = bits(sum, 31, 25) @[md4Pipelined.scala 152:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 152:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 223, 192) @[md4Pipelined.scala 190:30]
    xk <= _T_26 @[md4Pipelined.scala 190:20]
    
  module BufferedProcessingElement_10 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 161:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 161:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 161:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 191, 160) @[md4Pipelined.scala 191:31]
    xk <= _T_26 @[md4Pipelined.scala 191:21]
    
  module BufferedProcessingElement_11 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 12, 0) @[md4Pipelined.scala 170:35]
    node lo = bits(sum, 31, 13) @[md4Pipelined.scala 170:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 170:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 159, 128) @[md4Pipelined.scala 192:31]
    xk <= _T_26 @[md4Pipelined.scala 192:21]
    
  module BufferedProcessingElement_12 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 127, 96) @[md4Pipelined.scala 193:31]
    xk <= _T_26 @[md4Pipelined.scala 193:21]
    
  module BufferedProcessingElement_13 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 24, 0) @[md4Pipelined.scala 152:35]
    node lo = bits(sum, 31, 25) @[md4Pipelined.scala 152:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 152:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 95, 64) @[md4Pipelined.scala 194:31]
    xk <= _T_26 @[md4Pipelined.scala 194:21]
    
  module BufferedProcessingElement_14 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 161:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 161:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 161:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 63, 32) @[md4Pipelined.scala 195:31]
    xk <= _T_26 @[md4Pipelined.scala 195:21]
    
  module BufferedProcessingElement_15 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 12, 0) @[md4Pipelined.scala 170:35]
    node lo = bits(sum, 31, 13) @[md4Pipelined.scala 170:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 170:25]
    const <= UInt<1>("h00") @[md4Pipelined.scala 177:11]
    function <= F @[md4Pipelined.scala 178:14]
    node _T_26 = bits(input.X, 31, 0) @[md4Pipelined.scala 196:31]
    xk <= _T_26 @[md4Pipelined.scala 196:21]
    
  module BufferedProcessingElement_16 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 511, 480) @[md4Pipelined.scala 203:30]
    xk <= _T_26 @[md4Pipelined.scala 203:20]
    
  module BufferedProcessingElement_17 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 26, 0) @[md4Pipelined.scala 153:35]
    node lo = bits(sum, 31, 27) @[md4Pipelined.scala 153:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 153:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 383, 352) @[md4Pipelined.scala 204:30]
    xk <= _T_26 @[md4Pipelined.scala 204:20]
    
  module BufferedProcessingElement_18 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 162:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 162:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 162:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 255, 224) @[md4Pipelined.scala 205:30]
    xk <= _T_26 @[md4Pipelined.scala 205:20]
    
  module BufferedProcessingElement_19 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 18, 0) @[md4Pipelined.scala 171:35]
    node lo = bits(sum, 31, 19) @[md4Pipelined.scala 171:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 171:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 127, 96) @[md4Pipelined.scala 206:30]
    xk <= _T_26 @[md4Pipelined.scala 206:20]
    
  module BufferedProcessingElement_20 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 479, 448) @[md4Pipelined.scala 207:30]
    xk <= _T_26 @[md4Pipelined.scala 207:20]
    
  module BufferedProcessingElement_21 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 26, 0) @[md4Pipelined.scala 153:35]
    node lo = bits(sum, 31, 27) @[md4Pipelined.scala 153:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 153:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 351, 320) @[md4Pipelined.scala 208:30]
    xk <= _T_26 @[md4Pipelined.scala 208:20]
    
  module BufferedProcessingElement_22 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 162:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 162:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 162:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 223, 192) @[md4Pipelined.scala 209:30]
    xk <= _T_26 @[md4Pipelined.scala 209:20]
    
  module BufferedProcessingElement_23 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 18, 0) @[md4Pipelined.scala 171:35]
    node lo = bits(sum, 31, 19) @[md4Pipelined.scala 171:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 171:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 95, 64) @[md4Pipelined.scala 210:30]
    xk <= _T_26 @[md4Pipelined.scala 210:20]
    
  module BufferedProcessingElement_24 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 447, 416) @[md4Pipelined.scala 211:30]
    xk <= _T_26 @[md4Pipelined.scala 211:20]
    
  module BufferedProcessingElement_25 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 26, 0) @[md4Pipelined.scala 153:35]
    node lo = bits(sum, 31, 27) @[md4Pipelined.scala 153:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 153:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 319, 288) @[md4Pipelined.scala 212:30]
    xk <= _T_26 @[md4Pipelined.scala 212:20]
    
  module BufferedProcessingElement_26 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 162:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 162:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 162:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 191, 160) @[md4Pipelined.scala 213:31]
    xk <= _T_26 @[md4Pipelined.scala 213:21]
    
  module BufferedProcessingElement_27 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 18, 0) @[md4Pipelined.scala 171:35]
    node lo = bits(sum, 31, 19) @[md4Pipelined.scala 171:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 171:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 63, 32) @[md4Pipelined.scala 214:31]
    xk <= _T_26 @[md4Pipelined.scala 214:21]
    
  module BufferedProcessingElement_28 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 415, 384) @[md4Pipelined.scala 215:31]
    xk <= _T_26 @[md4Pipelined.scala 215:21]
    
  module BufferedProcessingElement_29 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 26, 0) @[md4Pipelined.scala 153:35]
    node lo = bits(sum, 31, 27) @[md4Pipelined.scala 153:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 153:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 287, 256) @[md4Pipelined.scala 216:31]
    xk <= _T_26 @[md4Pipelined.scala 216:21]
    
  module BufferedProcessingElement_30 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 162:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 162:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 162:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 159, 128) @[md4Pipelined.scala 217:31]
    xk <= _T_26 @[md4Pipelined.scala 217:21]
    
  module BufferedProcessingElement_31 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 18, 0) @[md4Pipelined.scala 171:35]
    node lo = bits(sum, 31, 19) @[md4Pipelined.scala 171:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 171:25]
    const <= UInt<31>("h05a827999") @[md4Pipelined.scala 199:11]
    function <= G @[md4Pipelined.scala 200:14]
    node _T_26 = bits(input.X, 31, 0) @[md4Pipelined.scala 218:31]
    xk <= _T_26 @[md4Pipelined.scala 218:21]
    
  module BufferedProcessingElement_32 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 511, 480) @[md4Pipelined.scala 225:30]
    xk <= _T_26 @[md4Pipelined.scala 225:20]
    
  module BufferedProcessingElement_33 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 154:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 154:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 154:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 255, 224) @[md4Pipelined.scala 226:30]
    xk <= _T_26 @[md4Pipelined.scala 226:20]
    
  module BufferedProcessingElement_34 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 163:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 163:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 163:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 383, 352) @[md4Pipelined.scala 227:30]
    xk <= _T_26 @[md4Pipelined.scala 227:20]
    
  module BufferedProcessingElement_35 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 16, 0) @[md4Pipelined.scala 172:35]
    node lo = bits(sum, 31, 17) @[md4Pipelined.scala 172:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 172:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 127, 96) @[md4Pipelined.scala 228:30]
    xk <= _T_26 @[md4Pipelined.scala 228:20]
    
  module BufferedProcessingElement_36 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 447, 416) @[md4Pipelined.scala 229:30]
    xk <= _T_26 @[md4Pipelined.scala 229:20]
    
  module BufferedProcessingElement_37 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 154:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 154:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 154:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 191, 160) @[md4Pipelined.scala 230:30]
    xk <= _T_26 @[md4Pipelined.scala 230:20]
    
  module BufferedProcessingElement_38 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 163:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 163:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 163:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 319, 288) @[md4Pipelined.scala 231:30]
    xk <= _T_26 @[md4Pipelined.scala 231:20]
    
  module BufferedProcessingElement_39 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 16, 0) @[md4Pipelined.scala 172:35]
    node lo = bits(sum, 31, 17) @[md4Pipelined.scala 172:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 172:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 63, 32) @[md4Pipelined.scala 232:30]
    xk <= _T_26 @[md4Pipelined.scala 232:20]
    
  module BufferedProcessingElement_40 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 479, 448) @[md4Pipelined.scala 233:30]
    xk <= _T_26 @[md4Pipelined.scala 233:20]
    
  module BufferedProcessingElement_41 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 154:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 154:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 154:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 223, 192) @[md4Pipelined.scala 234:30]
    xk <= _T_26 @[md4Pipelined.scala 234:20]
    
  module BufferedProcessingElement_42 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 163:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 163:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 163:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 351, 320) @[md4Pipelined.scala 235:31]
    xk <= _T_26 @[md4Pipelined.scala 235:21]
    
  module BufferedProcessingElement_43 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 16, 0) @[md4Pipelined.scala 172:35]
    node lo = bits(sum, 31, 17) @[md4Pipelined.scala 172:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 172:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 95, 64) @[md4Pipelined.scala 236:31]
    xk <= _T_26 @[md4Pipelined.scala 236:21]
    
  module BufferedProcessingElement_44 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.A @[md4Pipelined.scala 144:7]
    b <= input.B @[md4Pipelined.scala 144:21]
    c <= input.C @[md4Pipelined.scala 144:35]
    d <= input.D @[md4Pipelined.scala 144:49]
    result.A <= rotated @[md4Pipelined.scala 145:14]
    result.B <= input.B @[md4Pipelined.scala 145:35]
    result.C <= input.C @[md4Pipelined.scala 145:56]
    result.D <= input.D @[md4Pipelined.scala 145:77]
    node hi = bits(sum, 28, 0) @[md4Pipelined.scala 146:23]
    node lo = bits(sum, 31, 29) @[md4Pipelined.scala 146:35]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 146:13]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 415, 384) @[md4Pipelined.scala 237:31]
    xk <= _T_26 @[md4Pipelined.scala 237:21]
    
  module BufferedProcessingElement_45 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.D @[md4Pipelined.scala 148:7]
    b <= input.A @[md4Pipelined.scala 148:21]
    c <= input.B @[md4Pipelined.scala 148:35]
    d <= input.C @[md4Pipelined.scala 148:49]
    result.A <= input.A @[md4Pipelined.scala 149:14]
    result.B <= input.B @[md4Pipelined.scala 149:35]
    result.C <= input.C @[md4Pipelined.scala 149:56]
    result.D <= rotated @[md4Pipelined.scala 149:77]
    node hi = bits(sum, 22, 0) @[md4Pipelined.scala 154:35]
    node lo = bits(sum, 31, 23) @[md4Pipelined.scala 154:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 154:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 159, 128) @[md4Pipelined.scala 238:31]
    xk <= _T_26 @[md4Pipelined.scala 238:21]
    
  module BufferedProcessingElement_46 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.C @[md4Pipelined.scala 157:7]
    b <= input.D @[md4Pipelined.scala 157:21]
    c <= input.A @[md4Pipelined.scala 157:35]
    d <= input.B @[md4Pipelined.scala 157:49]
    result.A <= input.A @[md4Pipelined.scala 158:14]
    result.B <= input.B @[md4Pipelined.scala 158:35]
    result.C <= rotated @[md4Pipelined.scala 158:56]
    result.D <= input.D @[md4Pipelined.scala 158:77]
    node hi = bits(sum, 20, 0) @[md4Pipelined.scala 163:35]
    node lo = bits(sum, 31, 21) @[md4Pipelined.scala 163:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 163:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 287, 256) @[md4Pipelined.scala 239:31]
    xk <= _T_26 @[md4Pipelined.scala 239:21]
    
  module BufferedProcessingElement_47 : 
    input clock : Clock
    input reset : Reset
    output io : {out : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}}
    
    wire input : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire result : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 100:27]
    wire _WIRE : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_1 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>} @[md4Pipelined.scala 101:54]
    _WIRE_1.D0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A0 <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.D <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.C <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.B <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.A <= UInt<32>("h00") @[md4Pipelined.scala 101:54]
    _WIRE_1.X <= UInt<512>("h00") @[md4Pipelined.scala 101:54]
    wire _WIRE_2 : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2] @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D0 <= _WIRE.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C0 <= _WIRE.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B0 <= _WIRE.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A0 <= _WIRE.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[0].D <= _WIRE.D @[md4Pipelined.scala 101:29]
    _WIRE_2[0].C <= _WIRE.C @[md4Pipelined.scala 101:29]
    _WIRE_2[0].B <= _WIRE.B @[md4Pipelined.scala 101:29]
    _WIRE_2[0].A <= _WIRE.A @[md4Pipelined.scala 101:29]
    _WIRE_2[0].X <= _WIRE.X @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D0 <= _WIRE_1.D0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C0 <= _WIRE_1.C0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B0 <= _WIRE_1.B0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A0 <= _WIRE_1.A0 @[md4Pipelined.scala 101:29]
    _WIRE_2[1].D <= _WIRE_1.D @[md4Pipelined.scala 101:29]
    _WIRE_2[1].C <= _WIRE_1.C @[md4Pipelined.scala 101:29]
    _WIRE_2[1].B <= _WIRE_1.B @[md4Pipelined.scala 101:29]
    _WIRE_2[1].A <= _WIRE_1.A @[md4Pipelined.scala 101:29]
    _WIRE_2[1].X <= _WIRE_1.X @[md4Pipelined.scala 101:29]
    reg data : {X : UInt<512>, A : UInt<32>, B : UInt<32>, C : UInt<32>, D : UInt<32>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}[2], clock with : (reset => (reset, _WIRE_2)) @[md4Pipelined.scala 101:21]
    reg head : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 102:21]
    reg tail : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[md4Pipelined.scala 103:21]
    wire _WIRE_3 : UInt<1>[2] @[md4Pipelined.scala 104:29]
    _WIRE_3[0] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    _WIRE_3[1] <= UInt<1>("h00") @[md4Pipelined.scala 104:29]
    reg full : UInt<1>[2], clock with : (reset => (reset, _WIRE_3)) @[md4Pipelined.scala 104:21]
    node _T = and(full[0], full[1]) @[md4Pipelined.scala 106:28]
    node _T_1 = eq(_T, UInt<1>("h00")) @[md4Pipelined.scala 106:18]
    io.in.ready <= _T_1 @[md4Pipelined.scala 106:15]
    node _T_2 = or(full[0], full[1]) @[md4Pipelined.scala 107:27]
    io.out.valid <= _T_2 @[md4Pipelined.scala 107:16]
    io.out.bits.D0 <= result.D0 @[md4Pipelined.scala 108:15]
    io.out.bits.C0 <= result.C0 @[md4Pipelined.scala 108:15]
    io.out.bits.B0 <= result.B0 @[md4Pipelined.scala 108:15]
    io.out.bits.A0 <= result.A0 @[md4Pipelined.scala 108:15]
    io.out.bits.D <= result.D @[md4Pipelined.scala 108:15]
    io.out.bits.C <= result.C @[md4Pipelined.scala 108:15]
    io.out.bits.B <= result.B @[md4Pipelined.scala 108:15]
    io.out.bits.A <= result.A @[md4Pipelined.scala 108:15]
    io.out.bits.X <= result.X @[md4Pipelined.scala 108:15]
    input.D0 <= data[head].D0 @[md4Pipelined.scala 109:9]
    input.C0 <= data[head].C0 @[md4Pipelined.scala 109:9]
    input.B0 <= data[head].B0 @[md4Pipelined.scala 109:9]
    input.A0 <= data[head].A0 @[md4Pipelined.scala 109:9]
    input.D <= data[head].D @[md4Pipelined.scala 109:9]
    input.C <= data[head].C @[md4Pipelined.scala 109:9]
    input.B <= data[head].B @[md4Pipelined.scala 109:9]
    input.A <= data[head].A @[md4Pipelined.scala 109:9]
    input.X <= data[head].X @[md4Pipelined.scala 109:9]
    node _T_3 = eq(full[tail], UInt<1>("h00")) @[md4Pipelined.scala 112:23]
    node _T_4 = and(io.in.valid, _T_3) @[md4Pipelined.scala 112:20]
    when _T_4 : @[md4Pipelined.scala 112:36]
      full[tail] <= UInt<1>("h01") @[md4Pipelined.scala 113:16]
      data[tail].D0 <= io.in.bits.D0 @[md4Pipelined.scala 114:16]
      data[tail].C0 <= io.in.bits.C0 @[md4Pipelined.scala 114:16]
      data[tail].B0 <= io.in.bits.B0 @[md4Pipelined.scala 114:16]
      data[tail].A0 <= io.in.bits.A0 @[md4Pipelined.scala 114:16]
      data[tail].D <= io.in.bits.D @[md4Pipelined.scala 114:16]
      data[tail].C <= io.in.bits.C @[md4Pipelined.scala 114:16]
      data[tail].B <= io.in.bits.B @[md4Pipelined.scala 114:16]
      data[tail].A <= io.in.bits.A @[md4Pipelined.scala 114:16]
      data[tail].X <= io.in.bits.X @[md4Pipelined.scala 114:16]
      node _T_5 = eq(tail, UInt<1>("h00")) @[md4Pipelined.scala 115:13]
      tail <= _T_5 @[md4Pipelined.scala 115:10]
      skip @[md4Pipelined.scala 112:36]
    node _T_6 = and(io.out.ready, full[head]) @[md4Pipelined.scala 119:21]
    when _T_6 : @[md4Pipelined.scala 119:36]
      full[head] <= UInt<1>("h00") @[md4Pipelined.scala 120:16]
      node _T_7 = eq(head, UInt<1>("h00")) @[md4Pipelined.scala 121:13]
      head <= _T_7 @[md4Pipelined.scala 121:10]
      skip @[md4Pipelined.scala 119:36]
    result.A0 <= input.A0 @[md4Pipelined.scala 125:13]
    result.B0 <= input.B0 @[md4Pipelined.scala 126:13]
    result.C0 <= input.C0 @[md4Pipelined.scala 127:13]
    result.D0 <= input.D0 @[md4Pipelined.scala 128:13]
    result.X <= input.X @[md4Pipelined.scala 129:12]
    wire const : UInt<32> @[md4Pipelined.scala 131:19]
    wire function : UInt<32> @[md4Pipelined.scala 132:22]
    wire F : UInt<32> @[md4Pipelined.scala 133:21]
    wire G : UInt<32> @[md4Pipelined.scala 133:21]
    wire H : UInt<32> @[md4Pipelined.scala 133:21]
    wire a : UInt<32> @[md4Pipelined.scala 134:28]
    wire b : UInt<32> @[md4Pipelined.scala 134:28]
    wire c : UInt<32> @[md4Pipelined.scala 134:28]
    wire d : UInt<32> @[md4Pipelined.scala 134:28]
    wire xk : UInt<32> @[md4Pipelined.scala 134:28]
    wire sum : UInt<32> @[md4Pipelined.scala 135:26]
    wire rotated : UInt<32> @[md4Pipelined.scala 135:26]
    node _T_8 = and(b, c) @[md4Pipelined.scala 137:11]
    node _T_9 = not(b) @[md4Pipelined.scala 137:20]
    node _T_10 = and(_T_9, d) @[md4Pipelined.scala 137:31]
    node _T_11 = or(_T_8, _T_10) @[md4Pipelined.scala 137:16]
    F <= _T_11 @[md4Pipelined.scala 137:5]
    node _T_12 = and(b, c) @[md4Pipelined.scala 138:11]
    node _T_13 = and(b, d) @[md4Pipelined.scala 138:21]
    node _T_14 = or(_T_12, _T_13) @[md4Pipelined.scala 138:16]
    node _T_15 = and(c, d) @[md4Pipelined.scala 138:31]
    node _T_16 = or(_T_14, _T_15) @[md4Pipelined.scala 138:26]
    G <= _T_16 @[md4Pipelined.scala 138:5]
    node _T_17 = xor(b, c) @[md4Pipelined.scala 139:10]
    node _T_18 = xor(_T_17, d) @[md4Pipelined.scala 139:14]
    H <= _T_18 @[md4Pipelined.scala 139:5]
    node _T_19 = add(a, function) @[md4Pipelined.scala 141:12]
    node _T_20 = tail(_T_19, 1) @[md4Pipelined.scala 141:12]
    node _T_21 = add(_T_20, xk) @[md4Pipelined.scala 141:23]
    node _T_22 = tail(_T_21, 1) @[md4Pipelined.scala 141:23]
    node _T_23 = add(_T_22, const) @[md4Pipelined.scala 141:28]
    node _T_24 = tail(_T_23, 1) @[md4Pipelined.scala 141:28]
    sum <= _T_24 @[md4Pipelined.scala 141:7]
    a <= input.B @[md4Pipelined.scala 166:7]
    b <= input.C @[md4Pipelined.scala 166:21]
    c <= input.D @[md4Pipelined.scala 166:35]
    d <= input.A @[md4Pipelined.scala 166:49]
    result.A <= input.A @[md4Pipelined.scala 167:14]
    result.B <= rotated @[md4Pipelined.scala 167:35]
    result.C <= input.C @[md4Pipelined.scala 167:56]
    result.D <= input.D @[md4Pipelined.scala 167:77]
    node hi = bits(sum, 16, 0) @[md4Pipelined.scala 172:35]
    node lo = bits(sum, 31, 17) @[md4Pipelined.scala 172:47]
    node _T_25 = cat(hi, lo) @[Cat.scala 30:58]
    rotated <= _T_25 @[md4Pipelined.scala 172:25]
    const <= UInt<31>("h06ed9eba1") @[md4Pipelined.scala 221:11]
    function <= H @[md4Pipelined.scala 222:14]
    node _T_26 = bits(input.X, 31, 0) @[md4Pipelined.scala 240:31]
    xk <= _T_26 @[md4Pipelined.scala 240:21]
    
  module md4Pipelined : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {X : UInt<512>, A0 : UInt<32>, B0 : UInt<32>, C0 : UInt<32>, D0 : UInt<32>}}, hash : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128>}}
    
    inst changeInput of ChangeOrderMD4Input @[md4Pipelined.scala 12:27]
    changeInput.clock <= clock
    changeInput.reset <= reset
    changeInput.io.in.valid <= io.in.valid @[md4Pipelined.scala 13:27]
    changeInput.io.in.bits.X <= io.in.bits.X @[md4Pipelined.scala 14:28]
    changeInput.io.in.bits.A0 <= io.in.bits.A0 @[md4Pipelined.scala 15:29]
    changeInput.io.in.bits.B0 <= io.in.bits.B0 @[md4Pipelined.scala 16:29]
    changeInput.io.in.bits.C0 <= io.in.bits.C0 @[md4Pipelined.scala 17:29]
    changeInput.io.in.bits.D0 <= io.in.bits.D0 @[md4Pipelined.scala 18:29]
    io.in.ready <= changeInput.io.in.ready @[md4Pipelined.scala 19:15]
    inst changeOutput of BufferedChangeHashOrder @[md4Pipelined.scala 21:28]
    changeOutput.clock <= clock
    changeOutput.reset <= reset
    io.hash.bits <= changeOutput.io.out.bits @[md4Pipelined.scala 22:16]
    io.hash.valid <= changeOutput.io.out.valid @[md4Pipelined.scala 23:17]
    changeOutput.io.out.ready <= io.hash.ready @[md4Pipelined.scala 24:29]
    inst PEs_0_0 of BufferedProcessingElement @[md4Pipelined.scala 28:22]
    PEs_0_0.clock <= clock
    PEs_0_0.reset <= reset
    PEs_0_0.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_1 of BufferedProcessingElement_1 @[md4Pipelined.scala 28:22]
    PEs_0_1.clock <= clock
    PEs_0_1.reset <= reset
    PEs_0_1.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_1.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_2 of BufferedProcessingElement_2 @[md4Pipelined.scala 28:22]
    PEs_0_2.clock <= clock
    PEs_0_2.reset <= reset
    PEs_0_2.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_2.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_3 of BufferedProcessingElement_3 @[md4Pipelined.scala 28:22]
    PEs_0_3.clock <= clock
    PEs_0_3.reset <= reset
    PEs_0_3.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_3.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_4 of BufferedProcessingElement_4 @[md4Pipelined.scala 28:22]
    PEs_0_4.clock <= clock
    PEs_0_4.reset <= reset
    PEs_0_4.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_4.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_5 of BufferedProcessingElement_5 @[md4Pipelined.scala 28:22]
    PEs_0_5.clock <= clock
    PEs_0_5.reset <= reset
    PEs_0_5.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_5.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_6 of BufferedProcessingElement_6 @[md4Pipelined.scala 28:22]
    PEs_0_6.clock <= clock
    PEs_0_6.reset <= reset
    PEs_0_6.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_6.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_7 of BufferedProcessingElement_7 @[md4Pipelined.scala 28:22]
    PEs_0_7.clock <= clock
    PEs_0_7.reset <= reset
    PEs_0_7.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_7.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_8 of BufferedProcessingElement_8 @[md4Pipelined.scala 28:22]
    PEs_0_8.clock <= clock
    PEs_0_8.reset <= reset
    PEs_0_8.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_8.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_9 of BufferedProcessingElement_9 @[md4Pipelined.scala 28:22]
    PEs_0_9.clock <= clock
    PEs_0_9.reset <= reset
    PEs_0_9.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_9.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_10 of BufferedProcessingElement_10 @[md4Pipelined.scala 28:22]
    PEs_0_10.clock <= clock
    PEs_0_10.reset <= reset
    PEs_0_10.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_10.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_11 of BufferedProcessingElement_11 @[md4Pipelined.scala 28:22]
    PEs_0_11.clock <= clock
    PEs_0_11.reset <= reset
    PEs_0_11.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_11.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_12 of BufferedProcessingElement_12 @[md4Pipelined.scala 28:22]
    PEs_0_12.clock <= clock
    PEs_0_12.reset <= reset
    PEs_0_12.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_12.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_13 of BufferedProcessingElement_13 @[md4Pipelined.scala 28:22]
    PEs_0_13.clock <= clock
    PEs_0_13.reset <= reset
    PEs_0_13.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_13.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_14 of BufferedProcessingElement_14 @[md4Pipelined.scala 28:22]
    PEs_0_14.clock <= clock
    PEs_0_14.reset <= reset
    PEs_0_14.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_14.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_0_15 of BufferedProcessingElement_15 @[md4Pipelined.scala 28:22]
    PEs_0_15.clock <= clock
    PEs_0_15.reset <= reset
    PEs_0_15.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_0_15.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_0 of BufferedProcessingElement_16 @[md4Pipelined.scala 28:22]
    PEs_1_0.clock <= clock
    PEs_1_0.reset <= reset
    PEs_1_0.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_0.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_1 of BufferedProcessingElement_17 @[md4Pipelined.scala 28:22]
    PEs_1_1.clock <= clock
    PEs_1_1.reset <= reset
    PEs_1_1.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_1.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_2 of BufferedProcessingElement_18 @[md4Pipelined.scala 28:22]
    PEs_1_2.clock <= clock
    PEs_1_2.reset <= reset
    PEs_1_2.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_2.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_3 of BufferedProcessingElement_19 @[md4Pipelined.scala 28:22]
    PEs_1_3.clock <= clock
    PEs_1_3.reset <= reset
    PEs_1_3.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_3.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_4 of BufferedProcessingElement_20 @[md4Pipelined.scala 28:22]
    PEs_1_4.clock <= clock
    PEs_1_4.reset <= reset
    PEs_1_4.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_4.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_5 of BufferedProcessingElement_21 @[md4Pipelined.scala 28:22]
    PEs_1_5.clock <= clock
    PEs_1_5.reset <= reset
    PEs_1_5.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_5.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_6 of BufferedProcessingElement_22 @[md4Pipelined.scala 28:22]
    PEs_1_6.clock <= clock
    PEs_1_6.reset <= reset
    PEs_1_6.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_6.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_7 of BufferedProcessingElement_23 @[md4Pipelined.scala 28:22]
    PEs_1_7.clock <= clock
    PEs_1_7.reset <= reset
    PEs_1_7.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_7.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_8 of BufferedProcessingElement_24 @[md4Pipelined.scala 28:22]
    PEs_1_8.clock <= clock
    PEs_1_8.reset <= reset
    PEs_1_8.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_8.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_9 of BufferedProcessingElement_25 @[md4Pipelined.scala 28:22]
    PEs_1_9.clock <= clock
    PEs_1_9.reset <= reset
    PEs_1_9.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_9.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_10 of BufferedProcessingElement_26 @[md4Pipelined.scala 28:22]
    PEs_1_10.clock <= clock
    PEs_1_10.reset <= reset
    PEs_1_10.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_10.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_11 of BufferedProcessingElement_27 @[md4Pipelined.scala 28:22]
    PEs_1_11.clock <= clock
    PEs_1_11.reset <= reset
    PEs_1_11.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_11.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_12 of BufferedProcessingElement_28 @[md4Pipelined.scala 28:22]
    PEs_1_12.clock <= clock
    PEs_1_12.reset <= reset
    PEs_1_12.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_12.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_13 of BufferedProcessingElement_29 @[md4Pipelined.scala 28:22]
    PEs_1_13.clock <= clock
    PEs_1_13.reset <= reset
    PEs_1_13.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_13.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_14 of BufferedProcessingElement_30 @[md4Pipelined.scala 28:22]
    PEs_1_14.clock <= clock
    PEs_1_14.reset <= reset
    PEs_1_14.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_14.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_1_15 of BufferedProcessingElement_31 @[md4Pipelined.scala 28:22]
    PEs_1_15.clock <= clock
    PEs_1_15.reset <= reset
    PEs_1_15.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_1_15.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_0 of BufferedProcessingElement_32 @[md4Pipelined.scala 28:22]
    PEs_2_0.clock <= clock
    PEs_2_0.reset <= reset
    PEs_2_0.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_0.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_1 of BufferedProcessingElement_33 @[md4Pipelined.scala 28:22]
    PEs_2_1.clock <= clock
    PEs_2_1.reset <= reset
    PEs_2_1.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_1.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_2 of BufferedProcessingElement_34 @[md4Pipelined.scala 28:22]
    PEs_2_2.clock <= clock
    PEs_2_2.reset <= reset
    PEs_2_2.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_2.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_3 of BufferedProcessingElement_35 @[md4Pipelined.scala 28:22]
    PEs_2_3.clock <= clock
    PEs_2_3.reset <= reset
    PEs_2_3.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_3.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_4 of BufferedProcessingElement_36 @[md4Pipelined.scala 28:22]
    PEs_2_4.clock <= clock
    PEs_2_4.reset <= reset
    PEs_2_4.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_4.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_5 of BufferedProcessingElement_37 @[md4Pipelined.scala 28:22]
    PEs_2_5.clock <= clock
    PEs_2_5.reset <= reset
    PEs_2_5.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_5.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_6 of BufferedProcessingElement_38 @[md4Pipelined.scala 28:22]
    PEs_2_6.clock <= clock
    PEs_2_6.reset <= reset
    PEs_2_6.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_6.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_7 of BufferedProcessingElement_39 @[md4Pipelined.scala 28:22]
    PEs_2_7.clock <= clock
    PEs_2_7.reset <= reset
    PEs_2_7.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_7.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_8 of BufferedProcessingElement_40 @[md4Pipelined.scala 28:22]
    PEs_2_8.clock <= clock
    PEs_2_8.reset <= reset
    PEs_2_8.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_8.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_9 of BufferedProcessingElement_41 @[md4Pipelined.scala 28:22]
    PEs_2_9.clock <= clock
    PEs_2_9.reset <= reset
    PEs_2_9.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_9.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_10 of BufferedProcessingElement_42 @[md4Pipelined.scala 28:22]
    PEs_2_10.clock <= clock
    PEs_2_10.reset <= reset
    PEs_2_10.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_10.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_11 of BufferedProcessingElement_43 @[md4Pipelined.scala 28:22]
    PEs_2_11.clock <= clock
    PEs_2_11.reset <= reset
    PEs_2_11.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_11.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_12 of BufferedProcessingElement_44 @[md4Pipelined.scala 28:22]
    PEs_2_12.clock <= clock
    PEs_2_12.reset <= reset
    PEs_2_12.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_12.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_13 of BufferedProcessingElement_45 @[md4Pipelined.scala 28:22]
    PEs_2_13.clock <= clock
    PEs_2_13.reset <= reset
    PEs_2_13.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_13.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_14 of BufferedProcessingElement_46 @[md4Pipelined.scala 28:22]
    PEs_2_14.clock <= clock
    PEs_2_14.reset <= reset
    PEs_2_14.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_14.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    inst PEs_2_15 of BufferedProcessingElement_47 @[md4Pipelined.scala 28:22]
    PEs_2_15.clock <= clock
    PEs_2_15.reset <= reset
    PEs_2_15.io.in.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.in.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.D0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.C0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.B0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.A0 is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.D is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.C is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.B is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.A is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.bits.X is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.valid is invalid @[md4Pipelined.scala 29:13]
    PEs_2_15.io.out.ready is invalid @[md4Pipelined.scala 29:13]
    PEs_0_0.io.in.valid <= changeInput.io.out.valid @[md4Pipelined.scala 37:31]
    PEs_0_0.io.in.bits.X <= changeInput.io.out.bits.X @[md4Pipelined.scala 38:32]
    PEs_0_0.io.in.bits.A0 <= changeInput.io.out.bits.A0 @[md4Pipelined.scala 39:33]
    PEs_0_0.io.in.bits.B0 <= changeInput.io.out.bits.B0 @[md4Pipelined.scala 40:33]
    PEs_0_0.io.in.bits.C0 <= changeInput.io.out.bits.C0 @[md4Pipelined.scala 41:33]
    PEs_0_0.io.in.bits.D0 <= changeInput.io.out.bits.D0 @[md4Pipelined.scala 42:33]
    PEs_0_0.io.in.bits.A <= changeInput.io.out.bits.A0 @[md4Pipelined.scala 43:32]
    PEs_0_0.io.in.bits.B <= changeInput.io.out.bits.B0 @[md4Pipelined.scala 44:32]
    PEs_0_0.io.in.bits.C <= changeInput.io.out.bits.C0 @[md4Pipelined.scala 45:32]
    PEs_0_0.io.in.bits.D <= changeInput.io.out.bits.D0 @[md4Pipelined.scala 46:32]
    changeInput.io.out.ready <= PEs_0_0.io.in.ready @[md4Pipelined.scala 47:34]
    PEs_0_2.io.in.valid <= PEs_0_1.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_2.io.in.bits.X <= PEs_0_1.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_2.io.in.bits.A0 <= PEs_0_1.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_2.io.in.bits.B0 <= PEs_0_1.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_2.io.in.bits.C0 <= PEs_0_1.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_2.io.in.bits.D0 <= PEs_0_1.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_2.io.in.bits.A <= PEs_0_1.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_2.io.in.bits.B <= PEs_0_1.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_2.io.in.bits.C <= PEs_0_1.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_2.io.in.bits.D <= PEs_0_1.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_1.io.out.ready <= PEs_0_2.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_3.io.in.valid <= PEs_0_2.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_3.io.in.bits.X <= PEs_0_2.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_3.io.in.bits.A0 <= PEs_0_2.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_3.io.in.bits.B0 <= PEs_0_2.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_3.io.in.bits.C0 <= PEs_0_2.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_3.io.in.bits.D0 <= PEs_0_2.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_3.io.in.bits.A <= PEs_0_2.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_3.io.in.bits.B <= PEs_0_2.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_3.io.in.bits.C <= PEs_0_2.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_3.io.in.bits.D <= PEs_0_2.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_2.io.out.ready <= PEs_0_3.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_4.io.in.valid <= PEs_0_3.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_4.io.in.bits.X <= PEs_0_3.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_4.io.in.bits.A0 <= PEs_0_3.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_4.io.in.bits.B0 <= PEs_0_3.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_4.io.in.bits.C0 <= PEs_0_3.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_4.io.in.bits.D0 <= PEs_0_3.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_4.io.in.bits.A <= PEs_0_3.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_4.io.in.bits.B <= PEs_0_3.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_4.io.in.bits.C <= PEs_0_3.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_4.io.in.bits.D <= PEs_0_3.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_3.io.out.ready <= PEs_0_4.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_5.io.in.valid <= PEs_0_4.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_5.io.in.bits.X <= PEs_0_4.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_5.io.in.bits.A0 <= PEs_0_4.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_5.io.in.bits.B0 <= PEs_0_4.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_5.io.in.bits.C0 <= PEs_0_4.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_5.io.in.bits.D0 <= PEs_0_4.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_5.io.in.bits.A <= PEs_0_4.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_5.io.in.bits.B <= PEs_0_4.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_5.io.in.bits.C <= PEs_0_4.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_5.io.in.bits.D <= PEs_0_4.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_4.io.out.ready <= PEs_0_5.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_6.io.in.valid <= PEs_0_5.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_6.io.in.bits.X <= PEs_0_5.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_6.io.in.bits.A0 <= PEs_0_5.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_6.io.in.bits.B0 <= PEs_0_5.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_6.io.in.bits.C0 <= PEs_0_5.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_6.io.in.bits.D0 <= PEs_0_5.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_6.io.in.bits.A <= PEs_0_5.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_6.io.in.bits.B <= PEs_0_5.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_6.io.in.bits.C <= PEs_0_5.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_6.io.in.bits.D <= PEs_0_5.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_5.io.out.ready <= PEs_0_6.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_7.io.in.valid <= PEs_0_6.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_7.io.in.bits.X <= PEs_0_6.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_7.io.in.bits.A0 <= PEs_0_6.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_7.io.in.bits.B0 <= PEs_0_6.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_7.io.in.bits.C0 <= PEs_0_6.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_7.io.in.bits.D0 <= PEs_0_6.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_7.io.in.bits.A <= PEs_0_6.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_7.io.in.bits.B <= PEs_0_6.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_7.io.in.bits.C <= PEs_0_6.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_7.io.in.bits.D <= PEs_0_6.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_6.io.out.ready <= PEs_0_7.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_8.io.in.valid <= PEs_0_7.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_8.io.in.bits.X <= PEs_0_7.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_8.io.in.bits.A0 <= PEs_0_7.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_8.io.in.bits.B0 <= PEs_0_7.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_8.io.in.bits.C0 <= PEs_0_7.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_8.io.in.bits.D0 <= PEs_0_7.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_8.io.in.bits.A <= PEs_0_7.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_8.io.in.bits.B <= PEs_0_7.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_8.io.in.bits.C <= PEs_0_7.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_8.io.in.bits.D <= PEs_0_7.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_7.io.out.ready <= PEs_0_8.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_9.io.in.valid <= PEs_0_8.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_9.io.in.bits.X <= PEs_0_8.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_9.io.in.bits.A0 <= PEs_0_8.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_9.io.in.bits.B0 <= PEs_0_8.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_9.io.in.bits.C0 <= PEs_0_8.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_9.io.in.bits.D0 <= PEs_0_8.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_9.io.in.bits.A <= PEs_0_8.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_9.io.in.bits.B <= PEs_0_8.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_9.io.in.bits.C <= PEs_0_8.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_9.io.in.bits.D <= PEs_0_8.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_8.io.out.ready <= PEs_0_9.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_10.io.in.valid <= PEs_0_9.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_10.io.in.bits.X <= PEs_0_9.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_10.io.in.bits.A0 <= PEs_0_9.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_10.io.in.bits.B0 <= PEs_0_9.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_10.io.in.bits.C0 <= PEs_0_9.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_10.io.in.bits.D0 <= PEs_0_9.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_10.io.in.bits.A <= PEs_0_9.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_10.io.in.bits.B <= PEs_0_9.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_10.io.in.bits.C <= PEs_0_9.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_10.io.in.bits.D <= PEs_0_9.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_9.io.out.ready <= PEs_0_10.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_11.io.in.valid <= PEs_0_10.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_11.io.in.bits.X <= PEs_0_10.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_11.io.in.bits.A0 <= PEs_0_10.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_11.io.in.bits.B0 <= PEs_0_10.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_11.io.in.bits.C0 <= PEs_0_10.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_11.io.in.bits.D0 <= PEs_0_10.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_11.io.in.bits.A <= PEs_0_10.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_11.io.in.bits.B <= PEs_0_10.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_11.io.in.bits.C <= PEs_0_10.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_11.io.in.bits.D <= PEs_0_10.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_10.io.out.ready <= PEs_0_11.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_12.io.in.valid <= PEs_0_11.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_12.io.in.bits.X <= PEs_0_11.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_12.io.in.bits.A0 <= PEs_0_11.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_12.io.in.bits.B0 <= PEs_0_11.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_12.io.in.bits.C0 <= PEs_0_11.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_12.io.in.bits.D0 <= PEs_0_11.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_12.io.in.bits.A <= PEs_0_11.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_12.io.in.bits.B <= PEs_0_11.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_12.io.in.bits.C <= PEs_0_11.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_12.io.in.bits.D <= PEs_0_11.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_11.io.out.ready <= PEs_0_12.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_13.io.in.valid <= PEs_0_12.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_13.io.in.bits.X <= PEs_0_12.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_13.io.in.bits.A0 <= PEs_0_12.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_13.io.in.bits.B0 <= PEs_0_12.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_13.io.in.bits.C0 <= PEs_0_12.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_13.io.in.bits.D0 <= PEs_0_12.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_13.io.in.bits.A <= PEs_0_12.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_13.io.in.bits.B <= PEs_0_12.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_13.io.in.bits.C <= PEs_0_12.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_13.io.in.bits.D <= PEs_0_12.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_12.io.out.ready <= PEs_0_13.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_14.io.in.valid <= PEs_0_13.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_14.io.in.bits.X <= PEs_0_13.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_14.io.in.bits.A0 <= PEs_0_13.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_14.io.in.bits.B0 <= PEs_0_13.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_14.io.in.bits.C0 <= PEs_0_13.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_14.io.in.bits.D0 <= PEs_0_13.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_14.io.in.bits.A <= PEs_0_13.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_14.io.in.bits.B <= PEs_0_13.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_14.io.in.bits.C <= PEs_0_13.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_14.io.in.bits.D <= PEs_0_13.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_13.io.out.ready <= PEs_0_14.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_0_15.io.in.valid <= PEs_0_14.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_0_15.io.in.bits.X <= PEs_0_14.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_0_15.io.in.bits.A0 <= PEs_0_14.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_0_15.io.in.bits.B0 <= PEs_0_14.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_0_15.io.in.bits.C0 <= PEs_0_14.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_0_15.io.in.bits.D0 <= PEs_0_14.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_0_15.io.in.bits.A <= PEs_0_14.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_0_15.io.in.bits.B <= PEs_0_14.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_0_15.io.in.bits.C <= PEs_0_14.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_0_15.io.in.bits.D <= PEs_0_14.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_0_14.io.out.ready <= PEs_0_15.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_0.io.in.valid <= PEs_0_15.io.out.valid @[md4Pipelined.scala 53:33]
    PEs_1_0.io.in.bits.X <= PEs_0_15.io.out.bits.X @[md4Pipelined.scala 54:34]
    PEs_1_0.io.in.bits.A0 <= PEs_0_15.io.out.bits.A0 @[md4Pipelined.scala 55:35]
    PEs_1_0.io.in.bits.B0 <= PEs_0_15.io.out.bits.B0 @[md4Pipelined.scala 56:35]
    PEs_1_0.io.in.bits.C0 <= PEs_0_15.io.out.bits.C0 @[md4Pipelined.scala 57:35]
    PEs_1_0.io.in.bits.D0 <= PEs_0_15.io.out.bits.D0 @[md4Pipelined.scala 58:35]
    PEs_1_0.io.in.bits.A <= PEs_0_15.io.out.bits.A0 @[md4Pipelined.scala 59:34]
    PEs_1_0.io.in.bits.B <= PEs_0_15.io.out.bits.B0 @[md4Pipelined.scala 60:34]
    PEs_1_0.io.in.bits.C <= PEs_0_15.io.out.bits.C0 @[md4Pipelined.scala 61:34]
    PEs_1_0.io.in.bits.D <= PEs_0_15.io.out.bits.D0 @[md4Pipelined.scala 62:34]
    PEs_0_15.io.out.ready <= PEs_1_0.io.in.ready @[md4Pipelined.scala 63:32]
    PEs_1_1.io.in.valid <= PEs_1_0.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_1.io.in.bits.X <= PEs_1_0.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_1.io.in.bits.A0 <= PEs_1_0.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_1.io.in.bits.B0 <= PEs_1_0.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_1.io.in.bits.C0 <= PEs_1_0.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_1.io.in.bits.D0 <= PEs_1_0.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_1.io.in.bits.A <= PEs_1_0.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_1.io.in.bits.B <= PEs_1_0.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_1.io.in.bits.C <= PEs_1_0.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_1.io.in.bits.D <= PEs_1_0.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_0.io.out.ready <= PEs_1_1.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_2.io.in.valid <= PEs_1_1.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_2.io.in.bits.X <= PEs_1_1.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_2.io.in.bits.A0 <= PEs_1_1.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_2.io.in.bits.B0 <= PEs_1_1.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_2.io.in.bits.C0 <= PEs_1_1.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_2.io.in.bits.D0 <= PEs_1_1.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_2.io.in.bits.A <= PEs_1_1.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_2.io.in.bits.B <= PEs_1_1.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_2.io.in.bits.C <= PEs_1_1.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_2.io.in.bits.D <= PEs_1_1.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_1.io.out.ready <= PEs_1_2.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_3.io.in.valid <= PEs_1_2.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_3.io.in.bits.X <= PEs_1_2.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_3.io.in.bits.A0 <= PEs_1_2.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_3.io.in.bits.B0 <= PEs_1_2.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_3.io.in.bits.C0 <= PEs_1_2.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_3.io.in.bits.D0 <= PEs_1_2.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_3.io.in.bits.A <= PEs_1_2.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_3.io.in.bits.B <= PEs_1_2.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_3.io.in.bits.C <= PEs_1_2.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_3.io.in.bits.D <= PEs_1_2.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_2.io.out.ready <= PEs_1_3.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_4.io.in.valid <= PEs_1_3.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_4.io.in.bits.X <= PEs_1_3.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_4.io.in.bits.A0 <= PEs_1_3.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_4.io.in.bits.B0 <= PEs_1_3.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_4.io.in.bits.C0 <= PEs_1_3.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_4.io.in.bits.D0 <= PEs_1_3.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_4.io.in.bits.A <= PEs_1_3.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_4.io.in.bits.B <= PEs_1_3.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_4.io.in.bits.C <= PEs_1_3.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_4.io.in.bits.D <= PEs_1_3.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_3.io.out.ready <= PEs_1_4.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_5.io.in.valid <= PEs_1_4.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_5.io.in.bits.X <= PEs_1_4.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_5.io.in.bits.A0 <= PEs_1_4.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_5.io.in.bits.B0 <= PEs_1_4.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_5.io.in.bits.C0 <= PEs_1_4.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_5.io.in.bits.D0 <= PEs_1_4.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_5.io.in.bits.A <= PEs_1_4.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_5.io.in.bits.B <= PEs_1_4.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_5.io.in.bits.C <= PEs_1_4.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_5.io.in.bits.D <= PEs_1_4.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_4.io.out.ready <= PEs_1_5.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_6.io.in.valid <= PEs_1_5.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_6.io.in.bits.X <= PEs_1_5.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_6.io.in.bits.A0 <= PEs_1_5.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_6.io.in.bits.B0 <= PEs_1_5.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_6.io.in.bits.C0 <= PEs_1_5.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_6.io.in.bits.D0 <= PEs_1_5.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_6.io.in.bits.A <= PEs_1_5.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_6.io.in.bits.B <= PEs_1_5.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_6.io.in.bits.C <= PEs_1_5.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_6.io.in.bits.D <= PEs_1_5.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_5.io.out.ready <= PEs_1_6.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_7.io.in.valid <= PEs_1_6.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_7.io.in.bits.X <= PEs_1_6.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_7.io.in.bits.A0 <= PEs_1_6.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_7.io.in.bits.B0 <= PEs_1_6.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_7.io.in.bits.C0 <= PEs_1_6.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_7.io.in.bits.D0 <= PEs_1_6.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_7.io.in.bits.A <= PEs_1_6.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_7.io.in.bits.B <= PEs_1_6.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_7.io.in.bits.C <= PEs_1_6.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_7.io.in.bits.D <= PEs_1_6.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_6.io.out.ready <= PEs_1_7.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_8.io.in.valid <= PEs_1_7.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_8.io.in.bits.X <= PEs_1_7.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_8.io.in.bits.A0 <= PEs_1_7.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_8.io.in.bits.B0 <= PEs_1_7.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_8.io.in.bits.C0 <= PEs_1_7.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_8.io.in.bits.D0 <= PEs_1_7.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_8.io.in.bits.A <= PEs_1_7.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_8.io.in.bits.B <= PEs_1_7.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_8.io.in.bits.C <= PEs_1_7.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_8.io.in.bits.D <= PEs_1_7.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_7.io.out.ready <= PEs_1_8.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_9.io.in.valid <= PEs_1_8.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_9.io.in.bits.X <= PEs_1_8.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_9.io.in.bits.A0 <= PEs_1_8.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_9.io.in.bits.B0 <= PEs_1_8.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_9.io.in.bits.C0 <= PEs_1_8.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_9.io.in.bits.D0 <= PEs_1_8.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_9.io.in.bits.A <= PEs_1_8.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_9.io.in.bits.B <= PEs_1_8.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_9.io.in.bits.C <= PEs_1_8.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_9.io.in.bits.D <= PEs_1_8.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_8.io.out.ready <= PEs_1_9.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_10.io.in.valid <= PEs_1_9.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_10.io.in.bits.X <= PEs_1_9.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_10.io.in.bits.A0 <= PEs_1_9.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_10.io.in.bits.B0 <= PEs_1_9.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_10.io.in.bits.C0 <= PEs_1_9.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_10.io.in.bits.D0 <= PEs_1_9.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_10.io.in.bits.A <= PEs_1_9.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_10.io.in.bits.B <= PEs_1_9.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_10.io.in.bits.C <= PEs_1_9.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_10.io.in.bits.D <= PEs_1_9.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_9.io.out.ready <= PEs_1_10.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_11.io.in.valid <= PEs_1_10.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_11.io.in.bits.X <= PEs_1_10.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_11.io.in.bits.A0 <= PEs_1_10.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_11.io.in.bits.B0 <= PEs_1_10.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_11.io.in.bits.C0 <= PEs_1_10.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_11.io.in.bits.D0 <= PEs_1_10.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_11.io.in.bits.A <= PEs_1_10.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_11.io.in.bits.B <= PEs_1_10.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_11.io.in.bits.C <= PEs_1_10.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_11.io.in.bits.D <= PEs_1_10.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_10.io.out.ready <= PEs_1_11.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_12.io.in.valid <= PEs_1_11.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_12.io.in.bits.X <= PEs_1_11.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_12.io.in.bits.A0 <= PEs_1_11.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_12.io.in.bits.B0 <= PEs_1_11.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_12.io.in.bits.C0 <= PEs_1_11.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_12.io.in.bits.D0 <= PEs_1_11.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_12.io.in.bits.A <= PEs_1_11.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_12.io.in.bits.B <= PEs_1_11.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_12.io.in.bits.C <= PEs_1_11.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_12.io.in.bits.D <= PEs_1_11.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_11.io.out.ready <= PEs_1_12.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_13.io.in.valid <= PEs_1_12.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_13.io.in.bits.X <= PEs_1_12.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_13.io.in.bits.A0 <= PEs_1_12.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_13.io.in.bits.B0 <= PEs_1_12.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_13.io.in.bits.C0 <= PEs_1_12.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_13.io.in.bits.D0 <= PEs_1_12.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_13.io.in.bits.A <= PEs_1_12.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_13.io.in.bits.B <= PEs_1_12.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_13.io.in.bits.C <= PEs_1_12.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_13.io.in.bits.D <= PEs_1_12.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_12.io.out.ready <= PEs_1_13.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_14.io.in.valid <= PEs_1_13.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_14.io.in.bits.X <= PEs_1_13.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_14.io.in.bits.A0 <= PEs_1_13.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_14.io.in.bits.B0 <= PEs_1_13.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_14.io.in.bits.C0 <= PEs_1_13.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_14.io.in.bits.D0 <= PEs_1_13.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_14.io.in.bits.A <= PEs_1_13.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_14.io.in.bits.B <= PEs_1_13.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_14.io.in.bits.C <= PEs_1_13.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_14.io.in.bits.D <= PEs_1_13.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_13.io.out.ready <= PEs_1_14.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_1_15.io.in.valid <= PEs_1_14.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_1_15.io.in.bits.X <= PEs_1_14.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_1_15.io.in.bits.A0 <= PEs_1_14.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_1_15.io.in.bits.B0 <= PEs_1_14.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_1_15.io.in.bits.C0 <= PEs_1_14.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_1_15.io.in.bits.D0 <= PEs_1_14.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_1_15.io.in.bits.A <= PEs_1_14.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_1_15.io.in.bits.B <= PEs_1_14.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_1_15.io.in.bits.C <= PEs_1_14.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_1_15.io.in.bits.D <= PEs_1_14.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_1_14.io.out.ready <= PEs_1_15.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_0.io.in.valid <= PEs_1_15.io.out.valid @[md4Pipelined.scala 53:33]
    PEs_2_0.io.in.bits.X <= PEs_1_15.io.out.bits.X @[md4Pipelined.scala 54:34]
    PEs_2_0.io.in.bits.A0 <= PEs_1_15.io.out.bits.A0 @[md4Pipelined.scala 55:35]
    PEs_2_0.io.in.bits.B0 <= PEs_1_15.io.out.bits.B0 @[md4Pipelined.scala 56:35]
    PEs_2_0.io.in.bits.C0 <= PEs_1_15.io.out.bits.C0 @[md4Pipelined.scala 57:35]
    PEs_2_0.io.in.bits.D0 <= PEs_1_15.io.out.bits.D0 @[md4Pipelined.scala 58:35]
    PEs_2_0.io.in.bits.A <= PEs_1_15.io.out.bits.A0 @[md4Pipelined.scala 59:34]
    PEs_2_0.io.in.bits.B <= PEs_1_15.io.out.bits.B0 @[md4Pipelined.scala 60:34]
    PEs_2_0.io.in.bits.C <= PEs_1_15.io.out.bits.C0 @[md4Pipelined.scala 61:34]
    PEs_2_0.io.in.bits.D <= PEs_1_15.io.out.bits.D0 @[md4Pipelined.scala 62:34]
    PEs_1_15.io.out.ready <= PEs_2_0.io.in.ready @[md4Pipelined.scala 63:32]
    PEs_2_1.io.in.valid <= PEs_2_0.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_1.io.in.bits.X <= PEs_2_0.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_1.io.in.bits.A0 <= PEs_2_0.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_1.io.in.bits.B0 <= PEs_2_0.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_1.io.in.bits.C0 <= PEs_2_0.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_1.io.in.bits.D0 <= PEs_2_0.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_1.io.in.bits.A <= PEs_2_0.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_1.io.in.bits.B <= PEs_2_0.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_1.io.in.bits.C <= PEs_2_0.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_1.io.in.bits.D <= PEs_2_0.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_0.io.out.ready <= PEs_2_1.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_2.io.in.valid <= PEs_2_1.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_2.io.in.bits.X <= PEs_2_1.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_2.io.in.bits.A0 <= PEs_2_1.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_2.io.in.bits.B0 <= PEs_2_1.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_2.io.in.bits.C0 <= PEs_2_1.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_2.io.in.bits.D0 <= PEs_2_1.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_2.io.in.bits.A <= PEs_2_1.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_2.io.in.bits.B <= PEs_2_1.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_2.io.in.bits.C <= PEs_2_1.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_2.io.in.bits.D <= PEs_2_1.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_1.io.out.ready <= PEs_2_2.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_3.io.in.valid <= PEs_2_2.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_3.io.in.bits.X <= PEs_2_2.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_3.io.in.bits.A0 <= PEs_2_2.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_3.io.in.bits.B0 <= PEs_2_2.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_3.io.in.bits.C0 <= PEs_2_2.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_3.io.in.bits.D0 <= PEs_2_2.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_3.io.in.bits.A <= PEs_2_2.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_3.io.in.bits.B <= PEs_2_2.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_3.io.in.bits.C <= PEs_2_2.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_3.io.in.bits.D <= PEs_2_2.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_2.io.out.ready <= PEs_2_3.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_4.io.in.valid <= PEs_2_3.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_4.io.in.bits.X <= PEs_2_3.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_4.io.in.bits.A0 <= PEs_2_3.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_4.io.in.bits.B0 <= PEs_2_3.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_4.io.in.bits.C0 <= PEs_2_3.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_4.io.in.bits.D0 <= PEs_2_3.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_4.io.in.bits.A <= PEs_2_3.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_4.io.in.bits.B <= PEs_2_3.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_4.io.in.bits.C <= PEs_2_3.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_4.io.in.bits.D <= PEs_2_3.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_3.io.out.ready <= PEs_2_4.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_5.io.in.valid <= PEs_2_4.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_5.io.in.bits.X <= PEs_2_4.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_5.io.in.bits.A0 <= PEs_2_4.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_5.io.in.bits.B0 <= PEs_2_4.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_5.io.in.bits.C0 <= PEs_2_4.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_5.io.in.bits.D0 <= PEs_2_4.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_5.io.in.bits.A <= PEs_2_4.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_5.io.in.bits.B <= PEs_2_4.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_5.io.in.bits.C <= PEs_2_4.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_5.io.in.bits.D <= PEs_2_4.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_4.io.out.ready <= PEs_2_5.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_6.io.in.valid <= PEs_2_5.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_6.io.in.bits.X <= PEs_2_5.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_6.io.in.bits.A0 <= PEs_2_5.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_6.io.in.bits.B0 <= PEs_2_5.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_6.io.in.bits.C0 <= PEs_2_5.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_6.io.in.bits.D0 <= PEs_2_5.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_6.io.in.bits.A <= PEs_2_5.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_6.io.in.bits.B <= PEs_2_5.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_6.io.in.bits.C <= PEs_2_5.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_6.io.in.bits.D <= PEs_2_5.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_5.io.out.ready <= PEs_2_6.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_7.io.in.valid <= PEs_2_6.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_7.io.in.bits.X <= PEs_2_6.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_7.io.in.bits.A0 <= PEs_2_6.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_7.io.in.bits.B0 <= PEs_2_6.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_7.io.in.bits.C0 <= PEs_2_6.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_7.io.in.bits.D0 <= PEs_2_6.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_7.io.in.bits.A <= PEs_2_6.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_7.io.in.bits.B <= PEs_2_6.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_7.io.in.bits.C <= PEs_2_6.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_7.io.in.bits.D <= PEs_2_6.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_6.io.out.ready <= PEs_2_7.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_8.io.in.valid <= PEs_2_7.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_8.io.in.bits.X <= PEs_2_7.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_8.io.in.bits.A0 <= PEs_2_7.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_8.io.in.bits.B0 <= PEs_2_7.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_8.io.in.bits.C0 <= PEs_2_7.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_8.io.in.bits.D0 <= PEs_2_7.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_8.io.in.bits.A <= PEs_2_7.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_8.io.in.bits.B <= PEs_2_7.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_8.io.in.bits.C <= PEs_2_7.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_8.io.in.bits.D <= PEs_2_7.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_7.io.out.ready <= PEs_2_8.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_9.io.in.valid <= PEs_2_8.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_9.io.in.bits.X <= PEs_2_8.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_9.io.in.bits.A0 <= PEs_2_8.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_9.io.in.bits.B0 <= PEs_2_8.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_9.io.in.bits.C0 <= PEs_2_8.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_9.io.in.bits.D0 <= PEs_2_8.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_9.io.in.bits.A <= PEs_2_8.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_9.io.in.bits.B <= PEs_2_8.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_9.io.in.bits.C <= PEs_2_8.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_9.io.in.bits.D <= PEs_2_8.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_8.io.out.ready <= PEs_2_9.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_10.io.in.valid <= PEs_2_9.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_10.io.in.bits.X <= PEs_2_9.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_10.io.in.bits.A0 <= PEs_2_9.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_10.io.in.bits.B0 <= PEs_2_9.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_10.io.in.bits.C0 <= PEs_2_9.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_10.io.in.bits.D0 <= PEs_2_9.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_10.io.in.bits.A <= PEs_2_9.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_10.io.in.bits.B <= PEs_2_9.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_10.io.in.bits.C <= PEs_2_9.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_10.io.in.bits.D <= PEs_2_9.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_9.io.out.ready <= PEs_2_10.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_11.io.in.valid <= PEs_2_10.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_11.io.in.bits.X <= PEs_2_10.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_11.io.in.bits.A0 <= PEs_2_10.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_11.io.in.bits.B0 <= PEs_2_10.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_11.io.in.bits.C0 <= PEs_2_10.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_11.io.in.bits.D0 <= PEs_2_10.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_11.io.in.bits.A <= PEs_2_10.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_11.io.in.bits.B <= PEs_2_10.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_11.io.in.bits.C <= PEs_2_10.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_11.io.in.bits.D <= PEs_2_10.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_10.io.out.ready <= PEs_2_11.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_12.io.in.valid <= PEs_2_11.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_12.io.in.bits.X <= PEs_2_11.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_12.io.in.bits.A0 <= PEs_2_11.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_12.io.in.bits.B0 <= PEs_2_11.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_12.io.in.bits.C0 <= PEs_2_11.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_12.io.in.bits.D0 <= PEs_2_11.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_12.io.in.bits.A <= PEs_2_11.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_12.io.in.bits.B <= PEs_2_11.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_12.io.in.bits.C <= PEs_2_11.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_12.io.in.bits.D <= PEs_2_11.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_11.io.out.ready <= PEs_2_12.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_13.io.in.valid <= PEs_2_12.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_13.io.in.bits.X <= PEs_2_12.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_13.io.in.bits.A0 <= PEs_2_12.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_13.io.in.bits.B0 <= PEs_2_12.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_13.io.in.bits.C0 <= PEs_2_12.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_13.io.in.bits.D0 <= PEs_2_12.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_13.io.in.bits.A <= PEs_2_12.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_13.io.in.bits.B <= PEs_2_12.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_13.io.in.bits.C <= PEs_2_12.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_13.io.in.bits.D <= PEs_2_12.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_12.io.out.ready <= PEs_2_13.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_14.io.in.valid <= PEs_2_13.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_14.io.in.bits.X <= PEs_2_13.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_14.io.in.bits.A0 <= PEs_2_13.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_14.io.in.bits.B0 <= PEs_2_13.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_14.io.in.bits.C0 <= PEs_2_13.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_14.io.in.bits.D0 <= PEs_2_13.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_14.io.in.bits.A <= PEs_2_13.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_14.io.in.bits.B <= PEs_2_13.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_14.io.in.bits.C <= PEs_2_13.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_14.io.in.bits.D <= PEs_2_13.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_13.io.out.ready <= PEs_2_14.io.in.ready @[md4Pipelined.scala 75:32]
    PEs_2_15.io.in.valid <= PEs_2_14.io.out.valid @[md4Pipelined.scala 65:33]
    PEs_2_15.io.in.bits.X <= PEs_2_14.io.out.bits.X @[md4Pipelined.scala 66:34]
    PEs_2_15.io.in.bits.A0 <= PEs_2_14.io.out.bits.A0 @[md4Pipelined.scala 67:35]
    PEs_2_15.io.in.bits.B0 <= PEs_2_14.io.out.bits.B0 @[md4Pipelined.scala 68:35]
    PEs_2_15.io.in.bits.C0 <= PEs_2_14.io.out.bits.C0 @[md4Pipelined.scala 69:35]
    PEs_2_15.io.in.bits.D0 <= PEs_2_14.io.out.bits.D0 @[md4Pipelined.scala 70:35]
    PEs_2_15.io.in.bits.A <= PEs_2_14.io.out.bits.A0 @[md4Pipelined.scala 71:34]
    PEs_2_15.io.in.bits.B <= PEs_2_14.io.out.bits.B0 @[md4Pipelined.scala 72:34]
    PEs_2_15.io.in.bits.C <= PEs_2_14.io.out.bits.C0 @[md4Pipelined.scala 73:34]
    PEs_2_15.io.in.bits.D <= PEs_2_14.io.out.bits.D0 @[md4Pipelined.scala 74:34]
    PEs_2_14.io.out.ready <= PEs_2_15.io.in.ready @[md4Pipelined.scala 75:32]
    changeOutput.io.in.valid <= PEs_2_15.io.out.valid @[md4Pipelined.scala 49:34]
    node lo = cat(PEs_2_15.io.out.bits.C, PEs_2_15.io.out.bits.D) @[Cat.scala 30:58]
    node hi = cat(PEs_2_15.io.out.bits.A, PEs_2_15.io.out.bits.B) @[Cat.scala 30:58]
    node _T = cat(hi, lo) @[Cat.scala 30:58]
    changeOutput.io.in.bits <= _T @[md4Pipelined.scala 50:33]
    PEs_2_15.io.out.ready <= changeOutput.io.in.ready @[md4Pipelined.scala 51:32]
    
